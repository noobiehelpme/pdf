// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target, unnecessary_question_mark

part of 'rd_customer_bloc.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#custom-getters-and-methods');

/// @nodoc
mixin _$RdCustomerEvent {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $RdCustomerEventCopyWith<$Res> {
  factory $RdCustomerEventCopyWith(
          RdCustomerEvent value, $Res Function(RdCustomerEvent) then) =
      _$RdCustomerEventCopyWithImpl<$Res, RdCustomerEvent>;
}

/// @nodoc
class _$RdCustomerEventCopyWithImpl<$Res, $Val extends RdCustomerEvent>
    implements $RdCustomerEventCopyWith<$Res> {
  _$RdCustomerEventCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;
}

/// @nodoc
abstract class _$$_StartedCopyWith<$Res> {
  factory _$$_StartedCopyWith(
          _$_Started value, $Res Function(_$_Started) then) =
      __$$_StartedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_StartedCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_Started>
    implements _$$_StartedCopyWith<$Res> {
  __$$_StartedCopyWithImpl(_$_Started _value, $Res Function(_$_Started) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_Started implements _Started {
  const _$_Started();

  @override
  String toString() {
    return 'RdCustomerEvent.started()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_Started);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return started();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return started?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (started != null) {
      return started();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return started(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return started?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (started != null) {
      return started(this);
    }
    return orElse();
  }
}

abstract class _Started implements RdCustomerEvent {
  const factory _Started() = _$_Started;
}

/// @nodoc
abstract class _$$_SaveTokensCopyWith<$Res> {
  factory _$$_SaveTokensCopyWith(
          _$_SaveTokens value, $Res Function(_$_SaveTokens) then) =
      __$$_SaveTokensCopyWithImpl<$Res>;
  @useResult
  $Res call({String jwtToken});
}

/// @nodoc
class __$$_SaveTokensCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_SaveTokens>
    implements _$$_SaveTokensCopyWith<$Res> {
  __$$_SaveTokensCopyWithImpl(
      _$_SaveTokens _value, $Res Function(_$_SaveTokens) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? jwtToken = null,
  }) {
    return _then(_$_SaveTokens(
      jwtToken: null == jwtToken
          ? _value.jwtToken
          : jwtToken // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_SaveTokens implements _SaveTokens {
  const _$_SaveTokens({required this.jwtToken});

  @override
  final String jwtToken;

  @override
  String toString() {
    return 'RdCustomerEvent.saveTokens(jwtToken: $jwtToken)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_SaveTokens &&
            (identical(other.jwtToken, jwtToken) ||
                other.jwtToken == jwtToken));
  }

  @override
  int get hashCode => Object.hash(runtimeType, jwtToken);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_SaveTokensCopyWith<_$_SaveTokens> get copyWith =>
      __$$_SaveTokensCopyWithImpl<_$_SaveTokens>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return saveTokens(jwtToken);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return saveTokens?.call(jwtToken);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (saveTokens != null) {
      return saveTokens(jwtToken);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return saveTokens(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return saveTokens?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (saveTokens != null) {
      return saveTokens(this);
    }
    return orElse();
  }
}

abstract class _SaveTokens implements RdCustomerEvent {
  const factory _SaveTokens({required final String jwtToken}) = _$_SaveTokens;

  String get jwtToken;
  @JsonKey(ignore: true)
  _$$_SaveTokensCopyWith<_$_SaveTokens> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_RdCustomerAccountInfoPageCopyWith<$Res> {
  factory _$$_RdCustomerAccountInfoPageCopyWith(
          _$_RdCustomerAccountInfoPage value,
          $Res Function(_$_RdCustomerAccountInfoPage) then) =
      __$$_RdCustomerAccountInfoPageCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_RdCustomerAccountInfoPageCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdCustomerAccountInfoPage>
    implements _$$_RdCustomerAccountInfoPageCopyWith<$Res> {
  __$$_RdCustomerAccountInfoPageCopyWithImpl(
      _$_RdCustomerAccountInfoPage _value,
      $Res Function(_$_RdCustomerAccountInfoPage) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_RdCustomerAccountInfoPage implements _RdCustomerAccountInfoPage {
  const _$_RdCustomerAccountInfoPage();

  @override
  String toString() {
    return 'RdCustomerEvent.rdCustomerAccountInfoPage()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RdCustomerAccountInfoPage);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdCustomerAccountInfoPage();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdCustomerAccountInfoPage?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdCustomerAccountInfoPage != null) {
      return rdCustomerAccountInfoPage();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdCustomerAccountInfoPage(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdCustomerAccountInfoPage?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdCustomerAccountInfoPage != null) {
      return rdCustomerAccountInfoPage(this);
    }
    return orElse();
  }
}

abstract class _RdCustomerAccountInfoPage implements RdCustomerEvent {
  const factory _RdCustomerAccountInfoPage() = _$_RdCustomerAccountInfoPage;
}

/// @nodoc
abstract class _$$_RdSettlementPageCopyWith<$Res> {
  factory _$$_RdSettlementPageCopyWith(
          _$_RdSettlementPage value, $Res Function(_$_RdSettlementPage) then) =
      __$$_RdSettlementPageCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_RdSettlementPageCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdSettlementPage>
    implements _$$_RdSettlementPageCopyWith<$Res> {
  __$$_RdSettlementPageCopyWithImpl(
      _$_RdSettlementPage _value, $Res Function(_$_RdSettlementPage) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_RdSettlementPage implements _RdSettlementPage {
  const _$_RdSettlementPage();

  @override
  String toString() {
    return 'RdCustomerEvent.rdSettlementPage()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_RdSettlementPage);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdSettlementPage();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdSettlementPage?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdSettlementPage != null) {
      return rdSettlementPage();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdSettlementPage(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdSettlementPage?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdSettlementPage != null) {
      return rdSettlementPage(this);
    }
    return orElse();
  }
}

abstract class _RdSettlementPage implements RdCustomerEvent {
  const factory _RdSettlementPage() = _$_RdSettlementPage;
}

/// @nodoc
abstract class _$$_NewRdPageCopyWith<$Res> {
  factory _$$_NewRdPageCopyWith(
          _$_NewRdPage value, $Res Function(_$_NewRdPage) then) =
      __$$_NewRdPageCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_NewRdPageCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_NewRdPage>
    implements _$$_NewRdPageCopyWith<$Res> {
  __$$_NewRdPageCopyWithImpl(
      _$_NewRdPage _value, $Res Function(_$_NewRdPage) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_NewRdPage implements _NewRdPage {
  const _$_NewRdPage();

  @override
  String toString() {
    return 'RdCustomerEvent.newRdPage()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_NewRdPage);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return newRdPage();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return newRdPage?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (newRdPage != null) {
      return newRdPage();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return newRdPage(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return newRdPage?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (newRdPage != null) {
      return newRdPage(this);
    }
    return orElse();
  }
}

abstract class _NewRdPage implements RdCustomerEvent {
  const factory _NewRdPage() = _$_NewRdPage;
}

/// @nodoc
abstract class _$$_RdDepositPageEventCopyWith<$Res> {
  factory _$$_RdDepositPageEventCopyWith(_$_RdDepositPageEvent value,
          $Res Function(_$_RdDepositPageEvent) then) =
      __$$_RdDepositPageEventCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_RdDepositPageEventCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdDepositPageEvent>
    implements _$$_RdDepositPageEventCopyWith<$Res> {
  __$$_RdDepositPageEventCopyWithImpl(
      _$_RdDepositPageEvent _value, $Res Function(_$_RdDepositPageEvent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_RdDepositPageEvent implements _RdDepositPageEvent {
  const _$_RdDepositPageEvent();

  @override
  String toString() {
    return 'RdCustomerEvent.rdDepositPageEvent()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_RdDepositPageEvent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdDepositPageEvent();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdDepositPageEvent?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdDepositPageEvent != null) {
      return rdDepositPageEvent();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdDepositPageEvent(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdDepositPageEvent?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdDepositPageEvent != null) {
      return rdDepositPageEvent(this);
    }
    return orElse();
  }
}

abstract class _RdDepositPageEvent implements RdCustomerEvent {
  const factory _RdDepositPageEvent() = _$_RdDepositPageEvent;
}

/// @nodoc
abstract class _$$_RdStatementPageCopyWith<$Res> {
  factory _$$_RdStatementPageCopyWith(
          _$_RdStatementPage value, $Res Function(_$_RdStatementPage) then) =
      __$$_RdStatementPageCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_RdStatementPageCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdStatementPage>
    implements _$$_RdStatementPageCopyWith<$Res> {
  __$$_RdStatementPageCopyWithImpl(
      _$_RdStatementPage _value, $Res Function(_$_RdStatementPage) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_RdStatementPage implements _RdStatementPage {
  const _$_RdStatementPage();

  @override
  String toString() {
    return 'RdCustomerEvent.rdStatementPage()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_RdStatementPage);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdStatementPage();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdStatementPage?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdStatementPage != null) {
      return rdStatementPage();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdStatementPage(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdStatementPage?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdStatementPage != null) {
      return rdStatementPage(this);
    }
    return orElse();
  }
}

abstract class _RdStatementPage implements RdCustomerEvent {
  const factory _RdStatementPage() = _$_RdStatementPage;
}

/// @nodoc
abstract class _$$_RdPageCopyWith<$Res> {
  factory _$$_RdPageCopyWith(_$_RdPage value, $Res Function(_$_RdPage) then) =
      __$$_RdPageCopyWithImpl<$Res>;
  @useResult
  $Res call({bool rdPage});
}

/// @nodoc
class __$$_RdPageCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdPage>
    implements _$$_RdPageCopyWith<$Res> {
  __$$_RdPageCopyWithImpl(_$_RdPage _value, $Res Function(_$_RdPage) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? rdPage = null,
  }) {
    return _then(_$_RdPage(
      rdPage: null == rdPage
          ? _value.rdPage
          : rdPage // ignore: cast_nullable_to_non_nullable
              as bool,
    ));
  }
}

/// @nodoc

class _$_RdPage implements _RdPage {
  const _$_RdPage({required this.rdPage});

  @override
  final bool rdPage;

  @override
  String toString() {
    return 'RdCustomerEvent.rdPage(rdPage: $rdPage)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RdPage &&
            (identical(other.rdPage, rdPage) || other.rdPage == rdPage));
  }

  @override
  int get hashCode => Object.hash(runtimeType, rdPage);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdPageCopyWith<_$_RdPage> get copyWith =>
      __$$_RdPageCopyWithImpl<_$_RdPage>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdPage(this.rdPage);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdPage?.call(this.rdPage);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdPage != null) {
      return rdPage(this.rdPage);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdPage(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdPage?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdPage != null) {
      return rdPage(this);
    }
    return orElse();
  }
}

abstract class _RdPage implements RdCustomerEvent {
  const factory _RdPage({required final bool rdPage}) = _$_RdPage;

  bool get rdPage;
  @JsonKey(ignore: true)
  _$$_RdPageCopyWith<_$_RdPage> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_GetRdSchemeCardDetailsCopyWith<$Res> {
  factory _$$_GetRdSchemeCardDetailsCopyWith(_$_GetRdSchemeCardDetails value,
          $Res Function(_$_GetRdSchemeCardDetails) then) =
      __$$_GetRdSchemeCardDetailsCopyWithImpl<$Res>;
  @useResult
  $Res call({int branchid});
}

/// @nodoc
class __$$_GetRdSchemeCardDetailsCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_GetRdSchemeCardDetails>
    implements _$$_GetRdSchemeCardDetailsCopyWith<$Res> {
  __$$_GetRdSchemeCardDetailsCopyWithImpl(_$_GetRdSchemeCardDetails _value,
      $Res Function(_$_GetRdSchemeCardDetails) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? branchid = null,
  }) {
    return _then(_$_GetRdSchemeCardDetails(
      branchid: null == branchid
          ? _value.branchid
          : branchid // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$_GetRdSchemeCardDetails implements _GetRdSchemeCardDetails {
  const _$_GetRdSchemeCardDetails({required this.branchid});

  @override
  final int branchid;

  @override
  String toString() {
    return 'RdCustomerEvent.getRdSchemeCardDetails(branchid: $branchid)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_GetRdSchemeCardDetails &&
            (identical(other.branchid, branchid) ||
                other.branchid == branchid));
  }

  @override
  int get hashCode => Object.hash(runtimeType, branchid);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_GetRdSchemeCardDetailsCopyWith<_$_GetRdSchemeCardDetails> get copyWith =>
      __$$_GetRdSchemeCardDetailsCopyWithImpl<_$_GetRdSchemeCardDetails>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return getRdSchemeCardDetails(branchid);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return getRdSchemeCardDetails?.call(branchid);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (getRdSchemeCardDetails != null) {
      return getRdSchemeCardDetails(branchid);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return getRdSchemeCardDetails(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return getRdSchemeCardDetails?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (getRdSchemeCardDetails != null) {
      return getRdSchemeCardDetails(this);
    }
    return orElse();
  }
}

abstract class _GetRdSchemeCardDetails implements RdCustomerEvent {
  const factory _GetRdSchemeCardDetails({required final int branchid}) =
      _$_GetRdSchemeCardDetails;

  int get branchid;
  @JsonKey(ignore: true)
  _$$_GetRdSchemeCardDetailsCopyWith<_$_GetRdSchemeCardDetails> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_GetRdSchemeCardIndexCopyWith<$Res> {
  factory _$$_GetRdSchemeCardIndexCopyWith(_$_GetRdSchemeCardIndex value,
          $Res Function(_$_GetRdSchemeCardIndex) then) =
      __$$_GetRdSchemeCardIndexCopyWithImpl<$Res>;
  @useResult
  $Res call({int index});
}

/// @nodoc
class __$$_GetRdSchemeCardIndexCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_GetRdSchemeCardIndex>
    implements _$$_GetRdSchemeCardIndexCopyWith<$Res> {
  __$$_GetRdSchemeCardIndexCopyWithImpl(_$_GetRdSchemeCardIndex _value,
      $Res Function(_$_GetRdSchemeCardIndex) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? index = null,
  }) {
    return _then(_$_GetRdSchemeCardIndex(
      index: null == index
          ? _value.index
          : index // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$_GetRdSchemeCardIndex implements _GetRdSchemeCardIndex {
  const _$_GetRdSchemeCardIndex({required this.index});

  @override
  final int index;

  @override
  String toString() {
    return 'RdCustomerEvent.getRdSchemeCardIndex(index: $index)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_GetRdSchemeCardIndex &&
            (identical(other.index, index) || other.index == index));
  }

  @override
  int get hashCode => Object.hash(runtimeType, index);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_GetRdSchemeCardIndexCopyWith<_$_GetRdSchemeCardIndex> get copyWith =>
      __$$_GetRdSchemeCardIndexCopyWithImpl<_$_GetRdSchemeCardIndex>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return getRdSchemeCardIndex(index);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return getRdSchemeCardIndex?.call(index);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (getRdSchemeCardIndex != null) {
      return getRdSchemeCardIndex(index);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return getRdSchemeCardIndex(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return getRdSchemeCardIndex?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (getRdSchemeCardIndex != null) {
      return getRdSchemeCardIndex(this);
    }
    return orElse();
  }
}

abstract class _GetRdSchemeCardIndex implements RdCustomerEvent {
  const factory _GetRdSchemeCardIndex({required final int index}) =
      _$_GetRdSchemeCardIndex;

  int get index;
  @JsonKey(ignore: true)
  _$$_GetRdSchemeCardIndexCopyWith<_$_GetRdSchemeCardIndex> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_EnableRdSalesCodeNoneCopyWith<$Res> {
  factory _$$_EnableRdSalesCodeNoneCopyWith(_$_EnableRdSalesCodeNone value,
          $Res Function(_$_EnableRdSalesCodeNone) then) =
      __$$_EnableRdSalesCodeNoneCopyWithImpl<$Res>;
  @useResult
  $Res call({int rdSalesCodeValue});
}

/// @nodoc
class __$$_EnableRdSalesCodeNoneCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_EnableRdSalesCodeNone>
    implements _$$_EnableRdSalesCodeNoneCopyWith<$Res> {
  __$$_EnableRdSalesCodeNoneCopyWithImpl(_$_EnableRdSalesCodeNone _value,
      $Res Function(_$_EnableRdSalesCodeNone) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? rdSalesCodeValue = null,
  }) {
    return _then(_$_EnableRdSalesCodeNone(
      rdSalesCodeValue: null == rdSalesCodeValue
          ? _value.rdSalesCodeValue
          : rdSalesCodeValue // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$_EnableRdSalesCodeNone implements _EnableRdSalesCodeNone {
  const _$_EnableRdSalesCodeNone({required this.rdSalesCodeValue});

  @override
  final int rdSalesCodeValue;

  @override
  String toString() {
    return 'RdCustomerEvent.enableRdSalesCodeNone(rdSalesCodeValue: $rdSalesCodeValue)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_EnableRdSalesCodeNone &&
            (identical(other.rdSalesCodeValue, rdSalesCodeValue) ||
                other.rdSalesCodeValue == rdSalesCodeValue));
  }

  @override
  int get hashCode => Object.hash(runtimeType, rdSalesCodeValue);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_EnableRdSalesCodeNoneCopyWith<_$_EnableRdSalesCodeNone> get copyWith =>
      __$$_EnableRdSalesCodeNoneCopyWithImpl<_$_EnableRdSalesCodeNone>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return enableRdSalesCodeNone(rdSalesCodeValue);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return enableRdSalesCodeNone?.call(rdSalesCodeValue);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (enableRdSalesCodeNone != null) {
      return enableRdSalesCodeNone(rdSalesCodeValue);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return enableRdSalesCodeNone(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return enableRdSalesCodeNone?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (enableRdSalesCodeNone != null) {
      return enableRdSalesCodeNone(this);
    }
    return orElse();
  }
}

abstract class _EnableRdSalesCodeNone implements RdCustomerEvent {
  const factory _EnableRdSalesCodeNone({required final int rdSalesCodeValue}) =
      _$_EnableRdSalesCodeNone;

  int get rdSalesCodeValue;
  @JsonKey(ignore: true)
  _$$_EnableRdSalesCodeNoneCopyWith<_$_EnableRdSalesCodeNone> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_NewRdValidateAgentOrEmployeeCopyWith<$Res> {
  factory _$$_NewRdValidateAgentOrEmployeeCopyWith(
          _$_NewRdValidateAgentOrEmployee value,
          $Res Function(_$_NewRdValidateAgentOrEmployee) then) =
      __$$_NewRdValidateAgentOrEmployeeCopyWithImpl<$Res>;
  @useResult
  $Res call({String newRdSalesCode});
}

/// @nodoc
class __$$_NewRdValidateAgentOrEmployeeCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_NewRdValidateAgentOrEmployee>
    implements _$$_NewRdValidateAgentOrEmployeeCopyWith<$Res> {
  __$$_NewRdValidateAgentOrEmployeeCopyWithImpl(
      _$_NewRdValidateAgentOrEmployee _value,
      $Res Function(_$_NewRdValidateAgentOrEmployee) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? newRdSalesCode = null,
  }) {
    return _then(_$_NewRdValidateAgentOrEmployee(
      newRdSalesCode: null == newRdSalesCode
          ? _value.newRdSalesCode
          : newRdSalesCode // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_NewRdValidateAgentOrEmployee implements _NewRdValidateAgentOrEmployee {
  const _$_NewRdValidateAgentOrEmployee({required this.newRdSalesCode});

  @override
  final String newRdSalesCode;

  @override
  String toString() {
    return 'RdCustomerEvent.newRdValidateAgentOrEmployee(newRdSalesCode: $newRdSalesCode)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_NewRdValidateAgentOrEmployee &&
            (identical(other.newRdSalesCode, newRdSalesCode) ||
                other.newRdSalesCode == newRdSalesCode));
  }

  @override
  int get hashCode => Object.hash(runtimeType, newRdSalesCode);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_NewRdValidateAgentOrEmployeeCopyWith<_$_NewRdValidateAgentOrEmployee>
      get copyWith => __$$_NewRdValidateAgentOrEmployeeCopyWithImpl<
          _$_NewRdValidateAgentOrEmployee>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return newRdValidateAgentOrEmployee(newRdSalesCode);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return newRdValidateAgentOrEmployee?.call(newRdSalesCode);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (newRdValidateAgentOrEmployee != null) {
      return newRdValidateAgentOrEmployee(newRdSalesCode);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return newRdValidateAgentOrEmployee(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return newRdValidateAgentOrEmployee?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (newRdValidateAgentOrEmployee != null) {
      return newRdValidateAgentOrEmployee(this);
    }
    return orElse();
  }
}

abstract class _NewRdValidateAgentOrEmployee implements RdCustomerEvent {
  const factory _NewRdValidateAgentOrEmployee(
      {required final String newRdSalesCode}) = _$_NewRdValidateAgentOrEmployee;

  String get newRdSalesCode;
  @JsonKey(ignore: true)
  _$$_NewRdValidateAgentOrEmployeeCopyWith<_$_NewRdValidateAgentOrEmployee>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_EnableEmployeeSalesCodeCopyWith<$Res> {
  factory _$$_EnableEmployeeSalesCodeCopyWith(_$_EnableEmployeeSalesCode value,
          $Res Function(_$_EnableEmployeeSalesCode) then) =
      __$$_EnableEmployeeSalesCodeCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_EnableEmployeeSalesCodeCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_EnableEmployeeSalesCode>
    implements _$$_EnableEmployeeSalesCodeCopyWith<$Res> {
  __$$_EnableEmployeeSalesCodeCopyWithImpl(_$_EnableEmployeeSalesCode _value,
      $Res Function(_$_EnableEmployeeSalesCode) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_EnableEmployeeSalesCode implements _EnableEmployeeSalesCode {
  const _$_EnableEmployeeSalesCode();

  @override
  String toString() {
    return 'RdCustomerEvent.enableEmployeeSalesCode()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_EnableEmployeeSalesCode);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return enableEmployeeSalesCode();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return enableEmployeeSalesCode?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (enableEmployeeSalesCode != null) {
      return enableEmployeeSalesCode();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return enableEmployeeSalesCode(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return enableEmployeeSalesCode?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (enableEmployeeSalesCode != null) {
      return enableEmployeeSalesCode(this);
    }
    return orElse();
  }
}

abstract class _EnableEmployeeSalesCode implements RdCustomerEvent {
  const factory _EnableEmployeeSalesCode() = _$_EnableEmployeeSalesCode;
}

/// @nodoc
abstract class _$$_EnableCustomerSalesCodeCopyWith<$Res> {
  factory _$$_EnableCustomerSalesCodeCopyWith(_$_EnableCustomerSalesCode value,
          $Res Function(_$_EnableCustomerSalesCode) then) =
      __$$_EnableCustomerSalesCodeCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_EnableCustomerSalesCodeCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_EnableCustomerSalesCode>
    implements _$$_EnableCustomerSalesCodeCopyWith<$Res> {
  __$$_EnableCustomerSalesCodeCopyWithImpl(_$_EnableCustomerSalesCode _value,
      $Res Function(_$_EnableCustomerSalesCode) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_EnableCustomerSalesCode implements _EnableCustomerSalesCode {
  const _$_EnableCustomerSalesCode();

  @override
  String toString() {
    return 'RdCustomerEvent.enableCustomerSalesCode()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_EnableCustomerSalesCode);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return enableCustomerSalesCode();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return enableCustomerSalesCode?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (enableCustomerSalesCode != null) {
      return enableCustomerSalesCode();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return enableCustomerSalesCode(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return enableCustomerSalesCode?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (enableCustomerSalesCode != null) {
      return enableCustomerSalesCode(this);
    }
    return orElse();
  }
}

abstract class _EnableCustomerSalesCode implements RdCustomerEvent {
  const factory _EnableCustomerSalesCode() = _$_EnableCustomerSalesCode;
}

/// @nodoc
abstract class _$$_FetchRdTaxPayerCopyWith<$Res> {
  factory _$$_FetchRdTaxPayerCopyWith(
          _$_FetchRdTaxPayer value, $Res Function(_$_FetchRdTaxPayer) then) =
      __$$_FetchRdTaxPayerCopyWithImpl<$Res>;
  @useResult
  $Res call({String customerId});
}

/// @nodoc
class __$$_FetchRdTaxPayerCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_FetchRdTaxPayer>
    implements _$$_FetchRdTaxPayerCopyWith<$Res> {
  __$$_FetchRdTaxPayerCopyWithImpl(
      _$_FetchRdTaxPayer _value, $Res Function(_$_FetchRdTaxPayer) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? customerId = null,
  }) {
    return _then(_$_FetchRdTaxPayer(
      customerId: null == customerId
          ? _value.customerId
          : customerId // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_FetchRdTaxPayer implements _FetchRdTaxPayer {
  const _$_FetchRdTaxPayer({required this.customerId});

  @override
  final String customerId;

  @override
  String toString() {
    return 'RdCustomerEvent.fetchRdTaxPayer(customerId: $customerId)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_FetchRdTaxPayer &&
            (identical(other.customerId, customerId) ||
                other.customerId == customerId));
  }

  @override
  int get hashCode => Object.hash(runtimeType, customerId);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_FetchRdTaxPayerCopyWith<_$_FetchRdTaxPayer> get copyWith =>
      __$$_FetchRdTaxPayerCopyWithImpl<_$_FetchRdTaxPayer>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return fetchRdTaxPayer(customerId);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return fetchRdTaxPayer?.call(customerId);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchRdTaxPayer != null) {
      return fetchRdTaxPayer(customerId);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return fetchRdTaxPayer(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return fetchRdTaxPayer?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchRdTaxPayer != null) {
      return fetchRdTaxPayer(this);
    }
    return orElse();
  }
}

abstract class _FetchRdTaxPayer implements RdCustomerEvent {
  const factory _FetchRdTaxPayer({required final String customerId}) =
      _$_FetchRdTaxPayer;

  String get customerId;
  @JsonKey(ignore: true)
  _$$_FetchRdTaxPayerCopyWith<_$_FetchRdTaxPayer> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_EnableRdTaxPayerCopyWith<$Res> {
  factory _$$_EnableRdTaxPayerCopyWith(
          _$_EnableRdTaxPayer value, $Res Function(_$_EnableRdTaxPayer) then) =
      __$$_EnableRdTaxPayerCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_EnableRdTaxPayerCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_EnableRdTaxPayer>
    implements _$$_EnableRdTaxPayerCopyWith<$Res> {
  __$$_EnableRdTaxPayerCopyWithImpl(
      _$_EnableRdTaxPayer _value, $Res Function(_$_EnableRdTaxPayer) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_EnableRdTaxPayer implements _EnableRdTaxPayer {
  const _$_EnableRdTaxPayer();

  @override
  String toString() {
    return 'RdCustomerEvent.enableRdTaxPayer()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_EnableRdTaxPayer);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return enableRdTaxPayer();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return enableRdTaxPayer?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (enableRdTaxPayer != null) {
      return enableRdTaxPayer();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return enableRdTaxPayer(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return enableRdTaxPayer?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (enableRdTaxPayer != null) {
      return enableRdTaxPayer(this);
    }
    return orElse();
  }
}

abstract class _EnableRdTaxPayer implements RdCustomerEvent {
  const factory _EnableRdTaxPayer() = _$_EnableRdTaxPayer;
}

/// @nodoc
abstract class _$$_SaveTokenCopyWith<$Res> {
  factory _$$_SaveTokenCopyWith(
          _$_SaveToken value, $Res Function(_$_SaveToken) then) =
      __$$_SaveTokenCopyWithImpl<$Res>;
  @useResult
  $Res call({String jwtToken});
}

/// @nodoc
class __$$_SaveTokenCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_SaveToken>
    implements _$$_SaveTokenCopyWith<$Res> {
  __$$_SaveTokenCopyWithImpl(
      _$_SaveToken _value, $Res Function(_$_SaveToken) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? jwtToken = null,
  }) {
    return _then(_$_SaveToken(
      jwtToken: null == jwtToken
          ? _value.jwtToken
          : jwtToken // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_SaveToken implements _SaveToken {
  const _$_SaveToken({required this.jwtToken});

  @override
  final String jwtToken;

  @override
  String toString() {
    return 'RdCustomerEvent.saveToken(jwtToken: $jwtToken)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_SaveToken &&
            (identical(other.jwtToken, jwtToken) ||
                other.jwtToken == jwtToken));
  }

  @override
  int get hashCode => Object.hash(runtimeType, jwtToken);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_SaveTokenCopyWith<_$_SaveToken> get copyWith =>
      __$$_SaveTokenCopyWithImpl<_$_SaveToken>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return saveToken(jwtToken);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return saveToken?.call(jwtToken);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (saveToken != null) {
      return saveToken(jwtToken);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return saveToken(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return saveToken?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (saveToken != null) {
      return saveToken(this);
    }
    return orElse();
  }
}

abstract class _SaveToken implements RdCustomerEvent {
  const factory _SaveToken({required final String jwtToken}) = _$_SaveToken;

  String get jwtToken;
  @JsonKey(ignore: true)
  _$$_SaveTokenCopyWith<_$_SaveToken> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_FetchCustomerAccountsCopyWith<$Res> {
  factory _$$_FetchCustomerAccountsCopyWith(_$_FetchCustomerAccounts value,
          $Res Function(_$_FetchCustomerAccounts) then) =
      __$$_FetchCustomerAccountsCopyWithImpl<$Res>;
  @useResult
  $Res call({String customerId});
}

/// @nodoc
class __$$_FetchCustomerAccountsCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_FetchCustomerAccounts>
    implements _$$_FetchCustomerAccountsCopyWith<$Res> {
  __$$_FetchCustomerAccountsCopyWithImpl(_$_FetchCustomerAccounts _value,
      $Res Function(_$_FetchCustomerAccounts) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? customerId = null,
  }) {
    return _then(_$_FetchCustomerAccounts(
      customerId: null == customerId
          ? _value.customerId
          : customerId // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_FetchCustomerAccounts implements _FetchCustomerAccounts {
  const _$_FetchCustomerAccounts({required this.customerId});

  @override
  final String customerId;

  @override
  String toString() {
    return 'RdCustomerEvent.fetchCustomerAccounts(customerId: $customerId)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_FetchCustomerAccounts &&
            (identical(other.customerId, customerId) ||
                other.customerId == customerId));
  }

  @override
  int get hashCode => Object.hash(runtimeType, customerId);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_FetchCustomerAccountsCopyWith<_$_FetchCustomerAccounts> get copyWith =>
      __$$_FetchCustomerAccountsCopyWithImpl<_$_FetchCustomerAccounts>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return fetchCustomerAccounts(customerId);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return fetchCustomerAccounts?.call(customerId);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchCustomerAccounts != null) {
      return fetchCustomerAccounts(customerId);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return fetchCustomerAccounts(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return fetchCustomerAccounts?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchCustomerAccounts != null) {
      return fetchCustomerAccounts(this);
    }
    return orElse();
  }
}

abstract class _FetchCustomerAccounts implements RdCustomerEvent {
  const factory _FetchCustomerAccounts({required final String customerId}) =
      _$_FetchCustomerAccounts;

  String get customerId;
  @JsonKey(ignore: true)
  _$$_FetchCustomerAccountsCopyWith<_$_FetchCustomerAccounts> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_FetchRdNomineeRelationsCopyWith<$Res> {
  factory _$$_FetchRdNomineeRelationsCopyWith(_$_FetchRdNomineeRelations value,
          $Res Function(_$_FetchRdNomineeRelations) then) =
      __$$_FetchRdNomineeRelationsCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_FetchRdNomineeRelationsCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_FetchRdNomineeRelations>
    implements _$$_FetchRdNomineeRelationsCopyWith<$Res> {
  __$$_FetchRdNomineeRelationsCopyWithImpl(_$_FetchRdNomineeRelations _value,
      $Res Function(_$_FetchRdNomineeRelations) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_FetchRdNomineeRelations implements _FetchRdNomineeRelations {
  const _$_FetchRdNomineeRelations();

  @override
  String toString() {
    return 'RdCustomerEvent.fetchRdNomineeRelations()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_FetchRdNomineeRelations);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return fetchRdNomineeRelations();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return fetchRdNomineeRelations?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchRdNomineeRelations != null) {
      return fetchRdNomineeRelations();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return fetchRdNomineeRelations(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return fetchRdNomineeRelations?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchRdNomineeRelations != null) {
      return fetchRdNomineeRelations(this);
    }
    return orElse();
  }
}

abstract class _FetchRdNomineeRelations implements RdCustomerEvent {
  const factory _FetchRdNomineeRelations() = _$_FetchRdNomineeRelations;
}

/// @nodoc
abstract class _$$_ChangeRdNomineeRelationLabelCopyWith<$Res> {
  factory _$$_ChangeRdNomineeRelationLabelCopyWith(
          _$_ChangeRdNomineeRelationLabel value,
          $Res Function(_$_ChangeRdNomineeRelationLabel) then) =
      __$$_ChangeRdNomineeRelationLabelCopyWithImpl<$Res>;
  @useResult
  $Res call({String? rdNomineeRelationLabel});
}

/// @nodoc
class __$$_ChangeRdNomineeRelationLabelCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_ChangeRdNomineeRelationLabel>
    implements _$$_ChangeRdNomineeRelationLabelCopyWith<$Res> {
  __$$_ChangeRdNomineeRelationLabelCopyWithImpl(
      _$_ChangeRdNomineeRelationLabel _value,
      $Res Function(_$_ChangeRdNomineeRelationLabel) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? rdNomineeRelationLabel = freezed,
  }) {
    return _then(_$_ChangeRdNomineeRelationLabel(
      rdNomineeRelationLabel: freezed == rdNomineeRelationLabel
          ? _value.rdNomineeRelationLabel
          : rdNomineeRelationLabel // ignore: cast_nullable_to_non_nullable
              as String?,
    ));
  }
}

/// @nodoc

class _$_ChangeRdNomineeRelationLabel implements _ChangeRdNomineeRelationLabel {
  const _$_ChangeRdNomineeRelationLabel({required this.rdNomineeRelationLabel});

  @override
  final String? rdNomineeRelationLabel;

  @override
  String toString() {
    return 'RdCustomerEvent.changeRdNomineeRelationLabel(rdNomineeRelationLabel: $rdNomineeRelationLabel)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_ChangeRdNomineeRelationLabel &&
            (identical(other.rdNomineeRelationLabel, rdNomineeRelationLabel) ||
                other.rdNomineeRelationLabel == rdNomineeRelationLabel));
  }

  @override
  int get hashCode => Object.hash(runtimeType, rdNomineeRelationLabel);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_ChangeRdNomineeRelationLabelCopyWith<_$_ChangeRdNomineeRelationLabel>
      get copyWith => __$$_ChangeRdNomineeRelationLabelCopyWithImpl<
          _$_ChangeRdNomineeRelationLabel>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return changeRdNomineeRelationLabel(rdNomineeRelationLabel);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return changeRdNomineeRelationLabel?.call(rdNomineeRelationLabel);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (changeRdNomineeRelationLabel != null) {
      return changeRdNomineeRelationLabel(rdNomineeRelationLabel);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return changeRdNomineeRelationLabel(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return changeRdNomineeRelationLabel?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (changeRdNomineeRelationLabel != null) {
      return changeRdNomineeRelationLabel(this);
    }
    return orElse();
  }
}

abstract class _ChangeRdNomineeRelationLabel implements RdCustomerEvent {
  const factory _ChangeRdNomineeRelationLabel(
          {required final String? rdNomineeRelationLabel}) =
      _$_ChangeRdNomineeRelationLabel;

  String? get rdNomineeRelationLabel;
  @JsonKey(ignore: true)
  _$$_ChangeRdNomineeRelationLabelCopyWith<_$_ChangeRdNomineeRelationLabel>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_AddRdNomineeCopyWith<$Res> {
  factory _$$_AddRdNomineeCopyWith(
          _$_AddRdNominee value, $Res Function(_$_AddRdNominee) then) =
      __$$_AddRdNomineeCopyWithImpl<$Res>;
  @useResult
  $Res call({AddedNomineeModel nomineeModel});
}

/// @nodoc
class __$$_AddRdNomineeCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_AddRdNominee>
    implements _$$_AddRdNomineeCopyWith<$Res> {
  __$$_AddRdNomineeCopyWithImpl(
      _$_AddRdNominee _value, $Res Function(_$_AddRdNominee) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nomineeModel = null,
  }) {
    return _then(_$_AddRdNominee(
      nomineeModel: null == nomineeModel
          ? _value.nomineeModel
          : nomineeModel // ignore: cast_nullable_to_non_nullable
              as AddedNomineeModel,
    ));
  }
}

/// @nodoc

class _$_AddRdNominee implements _AddRdNominee {
  const _$_AddRdNominee({required this.nomineeModel});

  @override
  final AddedNomineeModel nomineeModel;

  @override
  String toString() {
    return 'RdCustomerEvent.addRdNominee(nomineeModel: $nomineeModel)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_AddRdNominee &&
            (identical(other.nomineeModel, nomineeModel) ||
                other.nomineeModel == nomineeModel));
  }

  @override
  int get hashCode => Object.hash(runtimeType, nomineeModel);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_AddRdNomineeCopyWith<_$_AddRdNominee> get copyWith =>
      __$$_AddRdNomineeCopyWithImpl<_$_AddRdNominee>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return addRdNominee(nomineeModel);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return addRdNominee?.call(nomineeModel);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (addRdNominee != null) {
      return addRdNominee(nomineeModel);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return addRdNominee(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return addRdNominee?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (addRdNominee != null) {
      return addRdNominee(this);
    }
    return orElse();
  }
}

abstract class _AddRdNominee implements RdCustomerEvent {
  const factory _AddRdNominee({required final AddedNomineeModel nomineeModel}) =
      _$_AddRdNominee;

  AddedNomineeModel get nomineeModel;
  @JsonKey(ignore: true)
  _$$_AddRdNomineeCopyWith<_$_AddRdNominee> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_RemoveRdNomineeCopyWith<$Res> {
  factory _$$_RemoveRdNomineeCopyWith(
          _$_RemoveRdNominee value, $Res Function(_$_RemoveRdNominee) then) =
      __$$_RemoveRdNomineeCopyWithImpl<$Res>;
  @useResult
  $Res call({int index});
}

/// @nodoc
class __$$_RemoveRdNomineeCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RemoveRdNominee>
    implements _$$_RemoveRdNomineeCopyWith<$Res> {
  __$$_RemoveRdNomineeCopyWithImpl(
      _$_RemoveRdNominee _value, $Res Function(_$_RemoveRdNominee) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? index = null,
  }) {
    return _then(_$_RemoveRdNominee(
      index: null == index
          ? _value.index
          : index // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$_RemoveRdNominee implements _RemoveRdNominee {
  const _$_RemoveRdNominee({required this.index});

  @override
  final int index;

  @override
  String toString() {
    return 'RdCustomerEvent.removeRdNominee(index: $index)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RemoveRdNominee &&
            (identical(other.index, index) || other.index == index));
  }

  @override
  int get hashCode => Object.hash(runtimeType, index);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RemoveRdNomineeCopyWith<_$_RemoveRdNominee> get copyWith =>
      __$$_RemoveRdNomineeCopyWithImpl<_$_RemoveRdNominee>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return removeRdNominee(index);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return removeRdNominee?.call(index);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (removeRdNominee != null) {
      return removeRdNominee(index);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return removeRdNominee(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return removeRdNominee?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (removeRdNominee != null) {
      return removeRdNominee(this);
    }
    return orElse();
  }
}

abstract class _RemoveRdNominee implements RdCustomerEvent {
  const factory _RemoveRdNominee({required final int index}) =
      _$_RemoveRdNominee;

  int get index;
  @JsonKey(ignore: true)
  _$$_RemoveRdNomineeCopyWith<_$_RemoveRdNominee> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_ResetRdNomineeSharePercentageCopyWith<$Res> {
  factory _$$_ResetRdNomineeSharePercentageCopyWith(
          _$_ResetRdNomineeSharePercentage value,
          $Res Function(_$_ResetRdNomineeSharePercentage) then) =
      __$$_ResetRdNomineeSharePercentageCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_ResetRdNomineeSharePercentageCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res,
        _$_ResetRdNomineeSharePercentage>
    implements _$$_ResetRdNomineeSharePercentageCopyWith<$Res> {
  __$$_ResetRdNomineeSharePercentageCopyWithImpl(
      _$_ResetRdNomineeSharePercentage _value,
      $Res Function(_$_ResetRdNomineeSharePercentage) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_ResetRdNomineeSharePercentage
    implements _ResetRdNomineeSharePercentage {
  const _$_ResetRdNomineeSharePercentage();

  @override
  String toString() {
    return 'RdCustomerEvent.resetRdNomineeSharePercentage()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_ResetRdNomineeSharePercentage);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return resetRdNomineeSharePercentage();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return resetRdNomineeSharePercentage?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (resetRdNomineeSharePercentage != null) {
      return resetRdNomineeSharePercentage();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return resetRdNomineeSharePercentage(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return resetRdNomineeSharePercentage?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (resetRdNomineeSharePercentage != null) {
      return resetRdNomineeSharePercentage(this);
    }
    return orElse();
  }
}

abstract class _ResetRdNomineeSharePercentage implements RdCustomerEvent {
  const factory _ResetRdNomineeSharePercentage() =
      _$_ResetRdNomineeSharePercentage;
}

/// @nodoc
abstract class _$$_StoreTransferToSdCopyWith<$Res> {
  factory _$$_StoreTransferToSdCopyWith(_$_StoreTransferToSd value,
          $Res Function(_$_StoreTransferToSd) then) =
      __$$_StoreTransferToSdCopyWithImpl<$Res>;
  @useResult
  $Res call({String sdNumber});
}

/// @nodoc
class __$$_StoreTransferToSdCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_StoreTransferToSd>
    implements _$$_StoreTransferToSdCopyWith<$Res> {
  __$$_StoreTransferToSdCopyWithImpl(
      _$_StoreTransferToSd _value, $Res Function(_$_StoreTransferToSd) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? sdNumber = null,
  }) {
    return _then(_$_StoreTransferToSd(
      sdNumber: null == sdNumber
          ? _value.sdNumber
          : sdNumber // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_StoreTransferToSd implements _StoreTransferToSd {
  const _$_StoreTransferToSd({required this.sdNumber});

  @override
  final String sdNumber;

  @override
  String toString() {
    return 'RdCustomerEvent.storeTransferToSd(sdNumber: $sdNumber)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_StoreTransferToSd &&
            (identical(other.sdNumber, sdNumber) ||
                other.sdNumber == sdNumber));
  }

  @override
  int get hashCode => Object.hash(runtimeType, sdNumber);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_StoreTransferToSdCopyWith<_$_StoreTransferToSd> get copyWith =>
      __$$_StoreTransferToSdCopyWithImpl<_$_StoreTransferToSd>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return storeTransferToSd(sdNumber);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return storeTransferToSd?.call(sdNumber);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (storeTransferToSd != null) {
      return storeTransferToSd(sdNumber);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return storeTransferToSd(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return storeTransferToSd?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (storeTransferToSd != null) {
      return storeTransferToSd(this);
    }
    return orElse();
  }
}

abstract class _StoreTransferToSd implements RdCustomerEvent {
  const factory _StoreTransferToSd({required final String sdNumber}) =
      _$_StoreTransferToSd;

  String get sdNumber;
  @JsonKey(ignore: true)
  _$$_StoreTransferToSdCopyWith<_$_StoreTransferToSd> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_EnableTransferToSdCopyWith<$Res> {
  factory _$$_EnableTransferToSdCopyWith(_$_EnableTransferToSd value,
          $Res Function(_$_EnableTransferToSd) then) =
      __$$_EnableTransferToSdCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_EnableTransferToSdCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_EnableTransferToSd>
    implements _$$_EnableTransferToSdCopyWith<$Res> {
  __$$_EnableTransferToSdCopyWithImpl(
      _$_EnableTransferToSd _value, $Res Function(_$_EnableTransferToSd) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_EnableTransferToSd implements _EnableTransferToSd {
  const _$_EnableTransferToSd();

  @override
  String toString() {
    return 'RdCustomerEvent.enableTransferToSd()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_EnableTransferToSd);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return enableTransferToSd();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return enableTransferToSd?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (enableTransferToSd != null) {
      return enableTransferToSd();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return enableTransferToSd(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return enableTransferToSd?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (enableTransferToSd != null) {
      return enableTransferToSd(this);
    }
    return orElse();
  }
}

abstract class _EnableTransferToSd implements RdCustomerEvent {
  const factory _EnableTransferToSd() = _$_EnableTransferToSd;
}

/// @nodoc
abstract class _$$_RdSchemeCardIndexCopyWith<$Res> {
  factory _$$_RdSchemeCardIndexCopyWith(_$_RdSchemeCardIndex value,
          $Res Function(_$_RdSchemeCardIndex) then) =
      __$$_RdSchemeCardIndexCopyWithImpl<$Res>;
  @useResult
  $Res call({int index});
}

/// @nodoc
class __$$_RdSchemeCardIndexCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdSchemeCardIndex>
    implements _$$_RdSchemeCardIndexCopyWith<$Res> {
  __$$_RdSchemeCardIndexCopyWithImpl(
      _$_RdSchemeCardIndex _value, $Res Function(_$_RdSchemeCardIndex) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? index = null,
  }) {
    return _then(_$_RdSchemeCardIndex(
      index: null == index
          ? _value.index
          : index // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$_RdSchemeCardIndex implements _RdSchemeCardIndex {
  const _$_RdSchemeCardIndex({required this.index});

  @override
  final int index;

  @override
  String toString() {
    return 'RdCustomerEvent.rdSchemeCardIndex(index: $index)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RdSchemeCardIndex &&
            (identical(other.index, index) || other.index == index));
  }

  @override
  int get hashCode => Object.hash(runtimeType, index);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdSchemeCardIndexCopyWith<_$_RdSchemeCardIndex> get copyWith =>
      __$$_RdSchemeCardIndexCopyWithImpl<_$_RdSchemeCardIndex>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdSchemeCardIndex(index);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdSchemeCardIndex?.call(index);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdSchemeCardIndex != null) {
      return rdSchemeCardIndex(index);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdSchemeCardIndex(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdSchemeCardIndex?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdSchemeCardIndex != null) {
      return rdSchemeCardIndex(this);
    }
    return orElse();
  }
}

abstract class _RdSchemeCardIndex implements RdCustomerEvent {
  const factory _RdSchemeCardIndex({required final int index}) =
      _$_RdSchemeCardIndex;

  int get index;
  @JsonKey(ignore: true)
  _$$_RdSchemeCardIndexCopyWith<_$_RdSchemeCardIndex> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_NewRdAmountCopyWith<$Res> {
  factory _$$_NewRdAmountCopyWith(
          _$_NewRdAmount value, $Res Function(_$_NewRdAmount) then) =
      __$$_NewRdAmountCopyWithImpl<$Res>;
  @useResult
  $Res call({String amount});
}

/// @nodoc
class __$$_NewRdAmountCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_NewRdAmount>
    implements _$$_NewRdAmountCopyWith<$Res> {
  __$$_NewRdAmountCopyWithImpl(
      _$_NewRdAmount _value, $Res Function(_$_NewRdAmount) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? amount = null,
  }) {
    return _then(_$_NewRdAmount(
      amount: null == amount
          ? _value.amount
          : amount // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_NewRdAmount implements _NewRdAmount {
  const _$_NewRdAmount({required this.amount});

  @override
  final String amount;

  @override
  String toString() {
    return 'RdCustomerEvent.newRdAmount(amount: $amount)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_NewRdAmount &&
            (identical(other.amount, amount) || other.amount == amount));
  }

  @override
  int get hashCode => Object.hash(runtimeType, amount);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_NewRdAmountCopyWith<_$_NewRdAmount> get copyWith =>
      __$$_NewRdAmountCopyWithImpl<_$_NewRdAmount>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return newRdAmount(amount);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return newRdAmount?.call(amount);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (newRdAmount != null) {
      return newRdAmount(amount);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return newRdAmount(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return newRdAmount?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (newRdAmount != null) {
      return newRdAmount(this);
    }
    return orElse();
  }
}

abstract class _NewRdAmount implements RdCustomerEvent {
  const factory _NewRdAmount({required final String amount}) = _$_NewRdAmount;

  String get amount;
  @JsonKey(ignore: true)
  _$$_NewRdAmountCopyWith<_$_NewRdAmount> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_CalculateMaturityAmountsCopyWith<$Res> {
  factory _$$_CalculateMaturityAmountsCopyWith(
          _$_CalculateMaturityAmounts value,
          $Res Function(_$_CalculateMaturityAmounts) then) =
      __$$_CalculateMaturityAmountsCopyWithImpl<$Res>;
  @useResult
  $Res call({double installmentAmount, double interestRate});
}

/// @nodoc
class __$$_CalculateMaturityAmountsCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_CalculateMaturityAmounts>
    implements _$$_CalculateMaturityAmountsCopyWith<$Res> {
  __$$_CalculateMaturityAmountsCopyWithImpl(_$_CalculateMaturityAmounts _value,
      $Res Function(_$_CalculateMaturityAmounts) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? installmentAmount = null,
    Object? interestRate = null,
  }) {
    return _then(_$_CalculateMaturityAmounts(
      installmentAmount: null == installmentAmount
          ? _value.installmentAmount
          : installmentAmount // ignore: cast_nullable_to_non_nullable
              as double,
      interestRate: null == interestRate
          ? _value.interestRate
          : interestRate // ignore: cast_nullable_to_non_nullable
              as double,
    ));
  }
}

/// @nodoc

class _$_CalculateMaturityAmounts implements _CalculateMaturityAmounts {
  const _$_CalculateMaturityAmounts(
      {required this.installmentAmount, required this.interestRate});

  @override
  final double installmentAmount;
  @override
  final double interestRate;

  @override
  String toString() {
    return 'RdCustomerEvent.calculateMaturityAmounts(installmentAmount: $installmentAmount, interestRate: $interestRate)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_CalculateMaturityAmounts &&
            (identical(other.installmentAmount, installmentAmount) ||
                other.installmentAmount == installmentAmount) &&
            (identical(other.interestRate, interestRate) ||
                other.interestRate == interestRate));
  }

  @override
  int get hashCode => Object.hash(runtimeType, installmentAmount, interestRate);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_CalculateMaturityAmountsCopyWith<_$_CalculateMaturityAmounts>
      get copyWith => __$$_CalculateMaturityAmountsCopyWithImpl<
          _$_CalculateMaturityAmounts>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return calculateMaturityAmounts(installmentAmount, interestRate);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return calculateMaturityAmounts?.call(installmentAmount, interestRate);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (calculateMaturityAmounts != null) {
      return calculateMaturityAmounts(installmentAmount, interestRate);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return calculateMaturityAmounts(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return calculateMaturityAmounts?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (calculateMaturityAmounts != null) {
      return calculateMaturityAmounts(this);
    }
    return orElse();
  }
}

abstract class _CalculateMaturityAmounts implements RdCustomerEvent {
  const factory _CalculateMaturityAmounts(
      {required final double installmentAmount,
      required final double interestRate}) = _$_CalculateMaturityAmounts;

  double get installmentAmount;
  double get interestRate;
  @JsonKey(ignore: true)
  _$$_CalculateMaturityAmountsCopyWith<_$_CalculateMaturityAmounts>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_RdInstallmentPeriodAndAmountCopyWith<$Res> {
  factory _$$_RdInstallmentPeriodAndAmountCopyWith(
          _$_RdInstallmentPeriodAndAmount value,
          $Res Function(_$_RdInstallmentPeriodAndAmount) then) =
      __$$_RdInstallmentPeriodAndAmountCopyWithImpl<$Res>;
  @useResult
  $Res call(
      {int installmentPeriod,
      double rdMaturityValue,
      int rdMaturityValueIndex});
}

/// @nodoc
class __$$_RdInstallmentPeriodAndAmountCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdInstallmentPeriodAndAmount>
    implements _$$_RdInstallmentPeriodAndAmountCopyWith<$Res> {
  __$$_RdInstallmentPeriodAndAmountCopyWithImpl(
      _$_RdInstallmentPeriodAndAmount _value,
      $Res Function(_$_RdInstallmentPeriodAndAmount) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? installmentPeriod = null,
    Object? rdMaturityValue = null,
    Object? rdMaturityValueIndex = null,
  }) {
    return _then(_$_RdInstallmentPeriodAndAmount(
      installmentPeriod: null == installmentPeriod
          ? _value.installmentPeriod
          : installmentPeriod // ignore: cast_nullable_to_non_nullable
              as int,
      rdMaturityValue: null == rdMaturityValue
          ? _value.rdMaturityValue
          : rdMaturityValue // ignore: cast_nullable_to_non_nullable
              as double,
      rdMaturityValueIndex: null == rdMaturityValueIndex
          ? _value.rdMaturityValueIndex
          : rdMaturityValueIndex // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$_RdInstallmentPeriodAndAmount implements _RdInstallmentPeriodAndAmount {
  const _$_RdInstallmentPeriodAndAmount(
      {required this.installmentPeriod,
      required this.rdMaturityValue,
      required this.rdMaturityValueIndex});

  @override
  final int installmentPeriod;
  @override
  final double rdMaturityValue;
  @override
  final int rdMaturityValueIndex;

  @override
  String toString() {
    return 'RdCustomerEvent.rdInstallmentPeriodAndAmount(installmentPeriod: $installmentPeriod, rdMaturityValue: $rdMaturityValue, rdMaturityValueIndex: $rdMaturityValueIndex)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RdInstallmentPeriodAndAmount &&
            (identical(other.installmentPeriod, installmentPeriod) ||
                other.installmentPeriod == installmentPeriod) &&
            (identical(other.rdMaturityValue, rdMaturityValue) ||
                other.rdMaturityValue == rdMaturityValue) &&
            (identical(other.rdMaturityValueIndex, rdMaturityValueIndex) ||
                other.rdMaturityValueIndex == rdMaturityValueIndex));
  }

  @override
  int get hashCode => Object.hash(
      runtimeType, installmentPeriod, rdMaturityValue, rdMaturityValueIndex);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdInstallmentPeriodAndAmountCopyWith<_$_RdInstallmentPeriodAndAmount>
      get copyWith => __$$_RdInstallmentPeriodAndAmountCopyWithImpl<
          _$_RdInstallmentPeriodAndAmount>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdInstallmentPeriodAndAmount(
        installmentPeriod, rdMaturityValue, rdMaturityValueIndex);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdInstallmentPeriodAndAmount?.call(
        installmentPeriod, rdMaturityValue, rdMaturityValueIndex);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdInstallmentPeriodAndAmount != null) {
      return rdInstallmentPeriodAndAmount(
          installmentPeriod, rdMaturityValue, rdMaturityValueIndex);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdInstallmentPeriodAndAmount(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdInstallmentPeriodAndAmount?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdInstallmentPeriodAndAmount != null) {
      return rdInstallmentPeriodAndAmount(this);
    }
    return orElse();
  }
}

abstract class _RdInstallmentPeriodAndAmount implements RdCustomerEvent {
  const factory _RdInstallmentPeriodAndAmount(
          {required final int installmentPeriod,
          required final double rdMaturityValue,
          required final int rdMaturityValueIndex}) =
      _$_RdInstallmentPeriodAndAmount;

  int get installmentPeriod;
  double get rdMaturityValue;
  int get rdMaturityValueIndex;
  @JsonKey(ignore: true)
  _$$_RdInstallmentPeriodAndAmountCopyWith<_$_RdInstallmentPeriodAndAmount>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_PostNewRdFetchResultCopyWith<$Res> {
  factory _$$_PostNewRdFetchResultCopyWith(_$_PostNewRdFetchResult value,
          $Res Function(_$_PostNewRdFetchResult) then) =
      __$$_PostNewRdFetchResultCopyWithImpl<$Res>;
  @useResult
  $Res call(
      {String customerId,
      int schemeId,
      int moduleId,
      int branchId,
      int firmId,
      String depositType,
      String customerName,
      String amount,
      String sdDocId,
      String coApplicantCustomerId,
      String coapplicantName,
      int type,
      double interestRate,
      int depPeriod,
      double maturityValue,
      int installmentNo,
      int processPeriod,
      int categoryId,
      int tdsCode,
      int statusAppWeb,
      String chequeDate,
      String chNo,
      String customerBank,
      String subsidiaryBankName,
      int subsidaryAccountNo,
      String transactionMethod,
      int statusId,
      int subType,
      int userId,
      List<AddedNomineeModel> nomineeDetails});
}

/// @nodoc
class __$$_PostNewRdFetchResultCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_PostNewRdFetchResult>
    implements _$$_PostNewRdFetchResultCopyWith<$Res> {
  __$$_PostNewRdFetchResultCopyWithImpl(_$_PostNewRdFetchResult _value,
      $Res Function(_$_PostNewRdFetchResult) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? customerId = null,
    Object? schemeId = null,
    Object? moduleId = null,
    Object? branchId = null,
    Object? firmId = null,
    Object? depositType = null,
    Object? customerName = null,
    Object? amount = null,
    Object? sdDocId = null,
    Object? coApplicantCustomerId = null,
    Object? coapplicantName = null,
    Object? type = null,
    Object? interestRate = null,
    Object? depPeriod = null,
    Object? maturityValue = null,
    Object? installmentNo = null,
    Object? processPeriod = null,
    Object? categoryId = null,
    Object? tdsCode = null,
    Object? statusAppWeb = null,
    Object? chequeDate = null,
    Object? chNo = null,
    Object? customerBank = null,
    Object? subsidiaryBankName = null,
    Object? subsidaryAccountNo = null,
    Object? transactionMethod = null,
    Object? statusId = null,
    Object? subType = null,
    Object? userId = null,
    Object? nomineeDetails = null,
  }) {
    return _then(_$_PostNewRdFetchResult(
      customerId: null == customerId
          ? _value.customerId
          : customerId // ignore: cast_nullable_to_non_nullable
              as String,
      schemeId: null == schemeId
          ? _value.schemeId
          : schemeId // ignore: cast_nullable_to_non_nullable
              as int,
      moduleId: null == moduleId
          ? _value.moduleId
          : moduleId // ignore: cast_nullable_to_non_nullable
              as int,
      branchId: null == branchId
          ? _value.branchId
          : branchId // ignore: cast_nullable_to_non_nullable
              as int,
      firmId: null == firmId
          ? _value.firmId
          : firmId // ignore: cast_nullable_to_non_nullable
              as int,
      depositType: null == depositType
          ? _value.depositType
          : depositType // ignore: cast_nullable_to_non_nullable
              as String,
      customerName: null == customerName
          ? _value.customerName
          : customerName // ignore: cast_nullable_to_non_nullable
              as String,
      amount: null == amount
          ? _value.amount
          : amount // ignore: cast_nullable_to_non_nullable
              as String,
      sdDocId: null == sdDocId
          ? _value.sdDocId
          : sdDocId // ignore: cast_nullable_to_non_nullable
              as String,
      coApplicantCustomerId: null == coApplicantCustomerId
          ? _value.coApplicantCustomerId
          : coApplicantCustomerId // ignore: cast_nullable_to_non_nullable
              as String,
      coapplicantName: null == coapplicantName
          ? _value.coapplicantName
          : coapplicantName // ignore: cast_nullable_to_non_nullable
              as String,
      type: null == type
          ? _value.type
          : type // ignore: cast_nullable_to_non_nullable
              as int,
      interestRate: null == interestRate
          ? _value.interestRate
          : interestRate // ignore: cast_nullable_to_non_nullable
              as double,
      depPeriod: null == depPeriod
          ? _value.depPeriod
          : depPeriod // ignore: cast_nullable_to_non_nullable
              as int,
      maturityValue: null == maturityValue
          ? _value.maturityValue
          : maturityValue // ignore: cast_nullable_to_non_nullable
              as double,
      installmentNo: null == installmentNo
          ? _value.installmentNo
          : installmentNo // ignore: cast_nullable_to_non_nullable
              as int,
      processPeriod: null == processPeriod
          ? _value.processPeriod
          : processPeriod // ignore: cast_nullable_to_non_nullable
              as int,
      categoryId: null == categoryId
          ? _value.categoryId
          : categoryId // ignore: cast_nullable_to_non_nullable
              as int,
      tdsCode: null == tdsCode
          ? _value.tdsCode
          : tdsCode // ignore: cast_nullable_to_non_nullable
              as int,
      statusAppWeb: null == statusAppWeb
          ? _value.statusAppWeb
          : statusAppWeb // ignore: cast_nullable_to_non_nullable
              as int,
      chequeDate: null == chequeDate
          ? _value.chequeDate
          : chequeDate // ignore: cast_nullable_to_non_nullable
              as String,
      chNo: null == chNo
          ? _value.chNo
          : chNo // ignore: cast_nullable_to_non_nullable
              as String,
      customerBank: null == customerBank
          ? _value.customerBank
          : customerBank // ignore: cast_nullable_to_non_nullable
              as String,
      subsidiaryBankName: null == subsidiaryBankName
          ? _value.subsidiaryBankName
          : subsidiaryBankName // ignore: cast_nullable_to_non_nullable
              as String,
      subsidaryAccountNo: null == subsidaryAccountNo
          ? _value.subsidaryAccountNo
          : subsidaryAccountNo // ignore: cast_nullable_to_non_nullable
              as int,
      transactionMethod: null == transactionMethod
          ? _value.transactionMethod
          : transactionMethod // ignore: cast_nullable_to_non_nullable
              as String,
      statusId: null == statusId
          ? _value.statusId
          : statusId // ignore: cast_nullable_to_non_nullable
              as int,
      subType: null == subType
          ? _value.subType
          : subType // ignore: cast_nullable_to_non_nullable
              as int,
      userId: null == userId
          ? _value.userId
          : userId // ignore: cast_nullable_to_non_nullable
              as int,
      nomineeDetails: null == nomineeDetails
          ? _value._nomineeDetails
          : nomineeDetails // ignore: cast_nullable_to_non_nullable
              as List<AddedNomineeModel>,
    ));
  }
}

/// @nodoc

class _$_PostNewRdFetchResult implements _PostNewRdFetchResult {
  const _$_PostNewRdFetchResult(
      {required this.customerId,
      required this.schemeId,
      required this.moduleId,
      required this.branchId,
      required this.firmId,
      required this.depositType,
      required this.customerName,
      required this.amount,
      required this.sdDocId,
      required this.coApplicantCustomerId,
      required this.coapplicantName,
      required this.type,
      required this.interestRate,
      required this.depPeriod,
      required this.maturityValue,
      required this.installmentNo,
      required this.processPeriod,
      required this.categoryId,
      required this.tdsCode,
      required this.statusAppWeb,
      required this.chequeDate,
      required this.chNo,
      required this.customerBank,
      required this.subsidiaryBankName,
      required this.subsidaryAccountNo,
      required this.transactionMethod,
      required this.statusId,
      required this.subType,
      required this.userId,
      required final List<AddedNomineeModel> nomineeDetails})
      : _nomineeDetails = nomineeDetails;

  @override
  final String customerId;
  @override
  final int schemeId;
  @override
  final int moduleId;
// required int bankBranchId,
  @override
  final int branchId;
  @override
  final int firmId;
  @override
  final String depositType;
  @override
  final String customerName;
  @override
  final String amount;
  @override
  final String sdDocId;
// required int sdFlag,
  @override
  final String coApplicantCustomerId;
  @override
  final String coapplicantName;
// required int salesCode,
  @override
  final int type;
  @override
  final double interestRate;
  @override
  final int depPeriod;
  @override
  final double maturityValue;
  @override
  final int installmentNo;
  @override
  final int processPeriod;
  @override
  final int categoryId;
  @override
  final int tdsCode;
  @override
  final int statusAppWeb;
  @override
  final String chequeDate;
  @override
  final String chNo;
  @override
  final String customerBank;
  @override
  final String subsidiaryBankName;
  @override
  final int subsidaryAccountNo;
  @override
  final String transactionMethod;
  @override
  final int statusId;
  @override
  final int subType;
  @override
  final int userId;
  final List<AddedNomineeModel> _nomineeDetails;
  @override
  List<AddedNomineeModel> get nomineeDetails {
    if (_nomineeDetails is EqualUnmodifiableListView) return _nomineeDetails;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_nomineeDetails);
  }

  @override
  String toString() {
    return 'RdCustomerEvent.postNewRdFetchResult(customerId: $customerId, schemeId: $schemeId, moduleId: $moduleId, branchId: $branchId, firmId: $firmId, depositType: $depositType, customerName: $customerName, amount: $amount, sdDocId: $sdDocId, coApplicantCustomerId: $coApplicantCustomerId, coapplicantName: $coapplicantName, type: $type, interestRate: $interestRate, depPeriod: $depPeriod, maturityValue: $maturityValue, installmentNo: $installmentNo, processPeriod: $processPeriod, categoryId: $categoryId, tdsCode: $tdsCode, statusAppWeb: $statusAppWeb, chequeDate: $chequeDate, chNo: $chNo, customerBank: $customerBank, subsidiaryBankName: $subsidiaryBankName, subsidaryAccountNo: $subsidaryAccountNo, transactionMethod: $transactionMethod, statusId: $statusId, subType: $subType, userId: $userId, nomineeDetails: $nomineeDetails)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_PostNewRdFetchResult &&
            (identical(other.customerId, customerId) ||
                other.customerId == customerId) &&
            (identical(other.schemeId, schemeId) ||
                other.schemeId == schemeId) &&
            (identical(other.moduleId, moduleId) ||
                other.moduleId == moduleId) &&
            (identical(other.branchId, branchId) ||
                other.branchId == branchId) &&
            (identical(other.firmId, firmId) || other.firmId == firmId) &&
            (identical(other.depositType, depositType) ||
                other.depositType == depositType) &&
            (identical(other.customerName, customerName) ||
                other.customerName == customerName) &&
            (identical(other.amount, amount) || other.amount == amount) &&
            (identical(other.sdDocId, sdDocId) || other.sdDocId == sdDocId) &&
            (identical(other.coApplicantCustomerId, coApplicantCustomerId) ||
                other.coApplicantCustomerId == coApplicantCustomerId) &&
            (identical(other.coapplicantName, coapplicantName) ||
                other.coapplicantName == coapplicantName) &&
            (identical(other.type, type) || other.type == type) &&
            (identical(other.interestRate, interestRate) ||
                other.interestRate == interestRate) &&
            (identical(other.depPeriod, depPeriod) ||
                other.depPeriod == depPeriod) &&
            (identical(other.maturityValue, maturityValue) ||
                other.maturityValue == maturityValue) &&
            (identical(other.installmentNo, installmentNo) ||
                other.installmentNo == installmentNo) &&
            (identical(other.processPeriod, processPeriod) ||
                other.processPeriod == processPeriod) &&
            (identical(other.categoryId, categoryId) ||
                other.categoryId == categoryId) &&
            (identical(other.tdsCode, tdsCode) || other.tdsCode == tdsCode) &&
            (identical(other.statusAppWeb, statusAppWeb) ||
                other.statusAppWeb == statusAppWeb) &&
            (identical(other.chequeDate, chequeDate) ||
                other.chequeDate == chequeDate) &&
            (identical(other.chNo, chNo) || other.chNo == chNo) &&
            (identical(other.customerBank, customerBank) ||
                other.customerBank == customerBank) &&
            (identical(other.subsidiaryBankName, subsidiaryBankName) ||
                other.subsidiaryBankName == subsidiaryBankName) &&
            (identical(other.subsidaryAccountNo, subsidaryAccountNo) ||
                other.subsidaryAccountNo == subsidaryAccountNo) &&
            (identical(other.transactionMethod, transactionMethod) ||
                other.transactionMethod == transactionMethod) &&
            (identical(other.statusId, statusId) ||
                other.statusId == statusId) &&
            (identical(other.subType, subType) || other.subType == subType) &&
            (identical(other.userId, userId) || other.userId == userId) &&
            const DeepCollectionEquality()
                .equals(other._nomineeDetails, _nomineeDetails));
  }

  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        customerId,
        schemeId,
        moduleId,
        branchId,
        firmId,
        depositType,
        customerName,
        amount,
        sdDocId,
        coApplicantCustomerId,
        coapplicantName,
        type,
        interestRate,
        depPeriod,
        maturityValue,
        installmentNo,
        processPeriod,
        categoryId,
        tdsCode,
        statusAppWeb,
        chequeDate,
        chNo,
        customerBank,
        subsidiaryBankName,
        subsidaryAccountNo,
        transactionMethod,
        statusId,
        subType,
        userId,
        const DeepCollectionEquality().hash(_nomineeDetails)
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_PostNewRdFetchResultCopyWith<_$_PostNewRdFetchResult> get copyWith =>
      __$$_PostNewRdFetchResultCopyWithImpl<_$_PostNewRdFetchResult>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return postNewRdFetchResult(
        customerId,
        schemeId,
        moduleId,
        branchId,
        firmId,
        depositType,
        customerName,
        amount,
        sdDocId,
        coApplicantCustomerId,
        coapplicantName,
        type,
        interestRate,
        depPeriod,
        maturityValue,
        installmentNo,
        processPeriod,
        categoryId,
        tdsCode,
        statusAppWeb,
        chequeDate,
        chNo,
        customerBank,
        subsidiaryBankName,
        subsidaryAccountNo,
        transactionMethod,
        statusId,
        subType,
        userId,
        nomineeDetails);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return postNewRdFetchResult?.call(
        customerId,
        schemeId,
        moduleId,
        branchId,
        firmId,
        depositType,
        customerName,
        amount,
        sdDocId,
        coApplicantCustomerId,
        coapplicantName,
        type,
        interestRate,
        depPeriod,
        maturityValue,
        installmentNo,
        processPeriod,
        categoryId,
        tdsCode,
        statusAppWeb,
        chequeDate,
        chNo,
        customerBank,
        subsidiaryBankName,
        subsidaryAccountNo,
        transactionMethod,
        statusId,
        subType,
        userId,
        nomineeDetails);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (postNewRdFetchResult != null) {
      return postNewRdFetchResult(
          customerId,
          schemeId,
          moduleId,
          branchId,
          firmId,
          depositType,
          customerName,
          amount,
          sdDocId,
          coApplicantCustomerId,
          coapplicantName,
          type,
          interestRate,
          depPeriod,
          maturityValue,
          installmentNo,
          processPeriod,
          categoryId,
          tdsCode,
          statusAppWeb,
          chequeDate,
          chNo,
          customerBank,
          subsidiaryBankName,
          subsidaryAccountNo,
          transactionMethod,
          statusId,
          subType,
          userId,
          nomineeDetails);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return postNewRdFetchResult(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return postNewRdFetchResult?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (postNewRdFetchResult != null) {
      return postNewRdFetchResult(this);
    }
    return orElse();
  }
}

abstract class _PostNewRdFetchResult implements RdCustomerEvent {
  const factory _PostNewRdFetchResult(
          {required final String customerId,
          required final int schemeId,
          required final int moduleId,
          required final int branchId,
          required final int firmId,
          required final String depositType,
          required final String customerName,
          required final String amount,
          required final String sdDocId,
          required final String coApplicantCustomerId,
          required final String coapplicantName,
          required final int type,
          required final double interestRate,
          required final int depPeriod,
          required final double maturityValue,
          required final int installmentNo,
          required final int processPeriod,
          required final int categoryId,
          required final int tdsCode,
          required final int statusAppWeb,
          required final String chequeDate,
          required final String chNo,
          required final String customerBank,
          required final String subsidiaryBankName,
          required final int subsidaryAccountNo,
          required final String transactionMethod,
          required final int statusId,
          required final int subType,
          required final int userId,
          required final List<AddedNomineeModel> nomineeDetails}) =
      _$_PostNewRdFetchResult;

  String get customerId;
  int get schemeId;
  int get moduleId; // required int bankBranchId,
  int get branchId;
  int get firmId;
  String get depositType;
  String get customerName;
  String get amount;
  String get sdDocId; // required int sdFlag,
  String get coApplicantCustomerId;
  String get coapplicantName; // required int salesCode,
  int get type;
  double get interestRate;
  int get depPeriod;
  double get maturityValue;
  int get installmentNo;
  int get processPeriod;
  int get categoryId;
  int get tdsCode;
  int get statusAppWeb;
  String get chequeDate;
  String get chNo;
  String get customerBank;
  String get subsidiaryBankName;
  int get subsidaryAccountNo;
  String get transactionMethod;
  int get statusId;
  int get subType;
  int get userId;
  List<AddedNomineeModel> get nomineeDetails;
  @JsonKey(ignore: true)
  _$$_PostNewRdFetchResultCopyWith<_$_PostNewRdFetchResult> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_NewRdResponseCopyWith<$Res> {
  factory _$$_NewRdResponseCopyWith(
          _$_NewRdResponse value, $Res Function(_$_NewRdResponse) then) =
      __$$_NewRdResponseCopyWithImpl<$Res>;
  @useResult
  $Res call({String response});
}

/// @nodoc
class __$$_NewRdResponseCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_NewRdResponse>
    implements _$$_NewRdResponseCopyWith<$Res> {
  __$$_NewRdResponseCopyWithImpl(
      _$_NewRdResponse _value, $Res Function(_$_NewRdResponse) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? response = null,
  }) {
    return _then(_$_NewRdResponse(
      response: null == response
          ? _value.response
          : response // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_NewRdResponse implements _NewRdResponse {
  const _$_NewRdResponse({required this.response});

  @override
  final String response;

  @override
  String toString() {
    return 'RdCustomerEvent.newRdResponse(response: $response)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_NewRdResponse &&
            (identical(other.response, response) ||
                other.response == response));
  }

  @override
  int get hashCode => Object.hash(runtimeType, response);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_NewRdResponseCopyWith<_$_NewRdResponse> get copyWith =>
      __$$_NewRdResponseCopyWithImpl<_$_NewRdResponse>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return newRdResponse(response);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return newRdResponse?.call(response);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (newRdResponse != null) {
      return newRdResponse(response);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return newRdResponse(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return newRdResponse?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (newRdResponse != null) {
      return newRdResponse(this);
    }
    return orElse();
  }
}

abstract class _NewRdResponse implements RdCustomerEvent {
  const factory _NewRdResponse({required final String response}) =
      _$_NewRdResponse;

  String get response;
  @JsonKey(ignore: true)
  _$$_NewRdResponseCopyWith<_$_NewRdResponse> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_ResetNewRdPageCopyWith<$Res> {
  factory _$$_ResetNewRdPageCopyWith(
          _$_ResetNewRdPage value, $Res Function(_$_ResetNewRdPage) then) =
      __$$_ResetNewRdPageCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_ResetNewRdPageCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_ResetNewRdPage>
    implements _$$_ResetNewRdPageCopyWith<$Res> {
  __$$_ResetNewRdPageCopyWithImpl(
      _$_ResetNewRdPage _value, $Res Function(_$_ResetNewRdPage) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_ResetNewRdPage implements _ResetNewRdPage {
  const _$_ResetNewRdPage();

  @override
  String toString() {
    return 'RdCustomerEvent.resetNewRdPage()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_ResetNewRdPage);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return resetNewRdPage();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return resetNewRdPage?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (resetNewRdPage != null) {
      return resetNewRdPage();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return resetNewRdPage(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return resetNewRdPage?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (resetNewRdPage != null) {
      return resetNewRdPage(this);
    }
    return orElse();
  }
}

abstract class _ResetNewRdPage implements RdCustomerEvent {
  const factory _ResetNewRdPage() = _$_ResetNewRdPage;
}

/// @nodoc
abstract class _$$_GetSettlementDetailsCopyWith<$Res> {
  factory _$$_GetSettlementDetailsCopyWith(_$_GetSettlementDetails value,
          $Res Function(_$_GetSettlementDetails) then) =
      __$$_GetSettlementDetailsCopyWithImpl<$Res>;
  @useResult
  $Res call({String depositid, String customerId});
}

/// @nodoc
class __$$_GetSettlementDetailsCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_GetSettlementDetails>
    implements _$$_GetSettlementDetailsCopyWith<$Res> {
  __$$_GetSettlementDetailsCopyWithImpl(_$_GetSettlementDetails _value,
      $Res Function(_$_GetSettlementDetails) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? depositid = null,
    Object? customerId = null,
  }) {
    return _then(_$_GetSettlementDetails(
      depositid: null == depositid
          ? _value.depositid
          : depositid // ignore: cast_nullable_to_non_nullable
              as String,
      customerId: null == customerId
          ? _value.customerId
          : customerId // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_GetSettlementDetails implements _GetSettlementDetails {
  const _$_GetSettlementDetails(
      {required this.depositid, required this.customerId});

  @override
  final String depositid;
  @override
  final String customerId;

  @override
  String toString() {
    return 'RdCustomerEvent.getSettlementDetails(depositid: $depositid, customerId: $customerId)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_GetSettlementDetails &&
            (identical(other.depositid, depositid) ||
                other.depositid == depositid) &&
            (identical(other.customerId, customerId) ||
                other.customerId == customerId));
  }

  @override
  int get hashCode => Object.hash(runtimeType, depositid, customerId);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_GetSettlementDetailsCopyWith<_$_GetSettlementDetails> get copyWith =>
      __$$_GetSettlementDetailsCopyWithImpl<_$_GetSettlementDetails>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return getSettlementDetails(depositid, customerId);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return getSettlementDetails?.call(depositid, customerId);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (getSettlementDetails != null) {
      return getSettlementDetails(depositid, customerId);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return getSettlementDetails(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return getSettlementDetails?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (getSettlementDetails != null) {
      return getSettlementDetails(this);
    }
    return orElse();
  }
}

abstract class _GetSettlementDetails implements RdCustomerEvent {
  const factory _GetSettlementDetails(
      {required final String depositid,
      required final String customerId}) = _$_GetSettlementDetails;

  String get depositid;
  String get customerId;
  @JsonKey(ignore: true)
  _$$_GetSettlementDetailsCopyWith<_$_GetSettlementDetails> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_RdpaymentgatewaycardCopyWith<$Res> {
  factory _$$_RdpaymentgatewaycardCopyWith(_$_Rdpaymentgatewaycard value,
          $Res Function(_$_Rdpaymentgatewaycard) then) =
      __$$_RdpaymentgatewaycardCopyWithImpl<$Res>;
  @useResult
  $Res call({String? usertype, String paymenttype, int moduleId});
}

/// @nodoc
class __$$_RdpaymentgatewaycardCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_Rdpaymentgatewaycard>
    implements _$$_RdpaymentgatewaycardCopyWith<$Res> {
  __$$_RdpaymentgatewaycardCopyWithImpl(_$_Rdpaymentgatewaycard _value,
      $Res Function(_$_Rdpaymentgatewaycard) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? usertype = freezed,
    Object? paymenttype = null,
    Object? moduleId = null,
  }) {
    return _then(_$_Rdpaymentgatewaycard(
      usertype: freezed == usertype
          ? _value.usertype
          : usertype // ignore: cast_nullable_to_non_nullable
              as String?,
      paymenttype: null == paymenttype
          ? _value.paymenttype
          : paymenttype // ignore: cast_nullable_to_non_nullable
              as String,
      moduleId: null == moduleId
          ? _value.moduleId
          : moduleId // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$_Rdpaymentgatewaycard implements _Rdpaymentgatewaycard {
  const _$_Rdpaymentgatewaycard(
      {required this.usertype,
      required this.paymenttype,
      required this.moduleId});

  @override
  final String? usertype;
  @override
  final String paymenttype;
  @override
  final int moduleId;

  @override
  String toString() {
    return 'RdCustomerEvent.rdpaymentgatewaycard(usertype: $usertype, paymenttype: $paymenttype, moduleId: $moduleId)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_Rdpaymentgatewaycard &&
            (identical(other.usertype, usertype) ||
                other.usertype == usertype) &&
            (identical(other.paymenttype, paymenttype) ||
                other.paymenttype == paymenttype) &&
            (identical(other.moduleId, moduleId) ||
                other.moduleId == moduleId));
  }

  @override
  int get hashCode => Object.hash(runtimeType, usertype, paymenttype, moduleId);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdpaymentgatewaycardCopyWith<_$_Rdpaymentgatewaycard> get copyWith =>
      __$$_RdpaymentgatewaycardCopyWithImpl<_$_Rdpaymentgatewaycard>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdpaymentgatewaycard(usertype, paymenttype, moduleId);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdpaymentgatewaycard?.call(usertype, paymenttype, moduleId);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdpaymentgatewaycard != null) {
      return rdpaymentgatewaycard(usertype, paymenttype, moduleId);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdpaymentgatewaycard(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdpaymentgatewaycard?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdpaymentgatewaycard != null) {
      return rdpaymentgatewaycard(this);
    }
    return orElse();
  }
}

abstract class _Rdpaymentgatewaycard implements RdCustomerEvent {
  const factory _Rdpaymentgatewaycard(
      {required final String? usertype,
      required final String paymenttype,
      required final int moduleId}) = _$_Rdpaymentgatewaycard;

  String? get usertype;
  String get paymenttype;
  int get moduleId;
  @JsonKey(ignore: true)
  _$$_RdpaymentgatewaycardCopyWith<_$_Rdpaymentgatewaycard> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_SelectedPaymentCardCopyWith<$Res> {
  factory _$$_SelectedPaymentCardCopyWith(_$_SelectedPaymentCard value,
          $Res Function(_$_SelectedPaymentCard) then) =
      __$$_SelectedPaymentCardCopyWithImpl<$Res>;
  @useResult
  $Res call({int index});
}

/// @nodoc
class __$$_SelectedPaymentCardCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_SelectedPaymentCard>
    implements _$$_SelectedPaymentCardCopyWith<$Res> {
  __$$_SelectedPaymentCardCopyWithImpl(_$_SelectedPaymentCard _value,
      $Res Function(_$_SelectedPaymentCard) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? index = null,
  }) {
    return _then(_$_SelectedPaymentCard(
      index: null == index
          ? _value.index
          : index // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$_SelectedPaymentCard implements _SelectedPaymentCard {
  const _$_SelectedPaymentCard({required this.index});

  @override
  final int index;

  @override
  String toString() {
    return 'RdCustomerEvent.selectedPaymentCard(index: $index)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_SelectedPaymentCard &&
            (identical(other.index, index) || other.index == index));
  }

  @override
  int get hashCode => Object.hash(runtimeType, index);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_SelectedPaymentCardCopyWith<_$_SelectedPaymentCard> get copyWith =>
      __$$_SelectedPaymentCardCopyWithImpl<_$_SelectedPaymentCard>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return selectedPaymentCard(index);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return selectedPaymentCard?.call(index);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (selectedPaymentCard != null) {
      return selectedPaymentCard(index);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return selectedPaymentCard(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return selectedPaymentCard?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (selectedPaymentCard != null) {
      return selectedPaymentCard(this);
    }
    return orElse();
  }
}

abstract class _SelectedPaymentCard implements RdCustomerEvent {
  const factory _SelectedPaymentCard({required final int index}) =
      _$_SelectedPaymentCard;

  int get index;
  @JsonKey(ignore: true)
  _$$_SelectedPaymentCardCopyWith<_$_SelectedPaymentCard> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_UpdateSettlementResponseStatusCopyWith<$Res> {
  factory _$$_UpdateSettlementResponseStatusCopyWith(
          _$_UpdateSettlementResponseStatus value,
          $Res Function(_$_UpdateSettlementResponseStatus) then) =
      __$$_UpdateSettlementResponseStatusCopyWithImpl<$Res>;
  @useResult
  $Res call({String status});
}

/// @nodoc
class __$$_UpdateSettlementResponseStatusCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res,
        _$_UpdateSettlementResponseStatus>
    implements _$$_UpdateSettlementResponseStatusCopyWith<$Res> {
  __$$_UpdateSettlementResponseStatusCopyWithImpl(
      _$_UpdateSettlementResponseStatus _value,
      $Res Function(_$_UpdateSettlementResponseStatus) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? status = null,
  }) {
    return _then(_$_UpdateSettlementResponseStatus(
      status: null == status
          ? _value.status
          : status // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_UpdateSettlementResponseStatus
    implements _UpdateSettlementResponseStatus {
  const _$_UpdateSettlementResponseStatus({required this.status});

  @override
  final String status;

  @override
  String toString() {
    return 'RdCustomerEvent.updateSettlementResponseStatus(status: $status)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_UpdateSettlementResponseStatus &&
            (identical(other.status, status) || other.status == status));
  }

  @override
  int get hashCode => Object.hash(runtimeType, status);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_UpdateSettlementResponseStatusCopyWith<_$_UpdateSettlementResponseStatus>
      get copyWith => __$$_UpdateSettlementResponseStatusCopyWithImpl<
          _$_UpdateSettlementResponseStatus>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return updateSettlementResponseStatus(status);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return updateSettlementResponseStatus?.call(status);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateSettlementResponseStatus != null) {
      return updateSettlementResponseStatus(status);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return updateSettlementResponseStatus(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return updateSettlementResponseStatus?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateSettlementResponseStatus != null) {
      return updateSettlementResponseStatus(this);
    }
    return orElse();
  }
}

abstract class _UpdateSettlementResponseStatus implements RdCustomerEvent {
  const factory _UpdateSettlementResponseStatus(
      {required final String status}) = _$_UpdateSettlementResponseStatus;

  String get status;
  @JsonKey(ignore: true)
  _$$_UpdateSettlementResponseStatusCopyWith<_$_UpdateSettlementResponseStatus>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_UpdatePendingInstallmentCopyWith<$Res> {
  factory _$$_UpdatePendingInstallmentCopyWith(
          _$_UpdatePendingInstallment value,
          $Res Function(_$_UpdatePendingInstallment) then) =
      __$$_UpdatePendingInstallmentCopyWithImpl<$Res>;
  @useResult
  $Res call({int? pendingInstallment});
}

/// @nodoc
class __$$_UpdatePendingInstallmentCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_UpdatePendingInstallment>
    implements _$$_UpdatePendingInstallmentCopyWith<$Res> {
  __$$_UpdatePendingInstallmentCopyWithImpl(_$_UpdatePendingInstallment _value,
      $Res Function(_$_UpdatePendingInstallment) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? pendingInstallment = freezed,
  }) {
    return _then(_$_UpdatePendingInstallment(
      pendingInstallment: freezed == pendingInstallment
          ? _value.pendingInstallment
          : pendingInstallment // ignore: cast_nullable_to_non_nullable
              as int?,
    ));
  }
}

/// @nodoc

class _$_UpdatePendingInstallment implements _UpdatePendingInstallment {
  const _$_UpdatePendingInstallment({required this.pendingInstallment});

  @override
  final int? pendingInstallment;

  @override
  String toString() {
    return 'RdCustomerEvent.updatePendingInstallment(pendingInstallment: $pendingInstallment)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_UpdatePendingInstallment &&
            (identical(other.pendingInstallment, pendingInstallment) ||
                other.pendingInstallment == pendingInstallment));
  }

  @override
  int get hashCode => Object.hash(runtimeType, pendingInstallment);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_UpdatePendingInstallmentCopyWith<_$_UpdatePendingInstallment>
      get copyWith => __$$_UpdatePendingInstallmentCopyWithImpl<
          _$_UpdatePendingInstallment>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return updatePendingInstallment(pendingInstallment);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return updatePendingInstallment?.call(pendingInstallment);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updatePendingInstallment != null) {
      return updatePendingInstallment(pendingInstallment);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return updatePendingInstallment(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return updatePendingInstallment?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updatePendingInstallment != null) {
      return updatePendingInstallment(this);
    }
    return orElse();
  }
}

abstract class _UpdatePendingInstallment implements RdCustomerEvent {
  const factory _UpdatePendingInstallment(
      {required final int? pendingInstallment}) = _$_UpdatePendingInstallment;

  int? get pendingInstallment;
  @JsonKey(ignore: true)
  _$$_UpdatePendingInstallmentCopyWith<_$_UpdatePendingInstallment>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_UpdateDueValueCopyWith<$Res> {
  factory _$$_UpdateDueValueCopyWith(
          _$_UpdateDueValue value, $Res Function(_$_UpdateDueValue) then) =
      __$$_UpdateDueValueCopyWithImpl<$Res>;
  @useResult
  $Res call({int? inDueValue});
}

/// @nodoc
class __$$_UpdateDueValueCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_UpdateDueValue>
    implements _$$_UpdateDueValueCopyWith<$Res> {
  __$$_UpdateDueValueCopyWithImpl(
      _$_UpdateDueValue _value, $Res Function(_$_UpdateDueValue) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? inDueValue = freezed,
  }) {
    return _then(_$_UpdateDueValue(
      inDueValue: freezed == inDueValue
          ? _value.inDueValue
          : inDueValue // ignore: cast_nullable_to_non_nullable
              as int?,
    ));
  }
}

/// @nodoc

class _$_UpdateDueValue implements _UpdateDueValue {
  const _$_UpdateDueValue({required this.inDueValue});

  @override
  final int? inDueValue;

  @override
  String toString() {
    return 'RdCustomerEvent.updateDueValue(inDueValue: $inDueValue)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_UpdateDueValue &&
            (identical(other.inDueValue, inDueValue) ||
                other.inDueValue == inDueValue));
  }

  @override
  int get hashCode => Object.hash(runtimeType, inDueValue);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_UpdateDueValueCopyWith<_$_UpdateDueValue> get copyWith =>
      __$$_UpdateDueValueCopyWithImpl<_$_UpdateDueValue>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return updateDueValue(inDueValue);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return updateDueValue?.call(inDueValue);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateDueValue != null) {
      return updateDueValue(inDueValue);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return updateDueValue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return updateDueValue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateDueValue != null) {
      return updateDueValue(this);
    }
    return orElse();
  }
}

abstract class _UpdateDueValue implements RdCustomerEvent {
  const factory _UpdateDueValue({required final int? inDueValue}) =
      _$_UpdateDueValue;

  int? get inDueValue;
  @JsonKey(ignore: true)
  _$$_UpdateDueValueCopyWith<_$_UpdateDueValue> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_AccountCardChangedCopyWith<$Res> {
  factory _$$_AccountCardChangedCopyWith(_$_AccountCardChanged value,
          $Res Function(_$_AccountCardChanged) then) =
      __$$_AccountCardChangedCopyWithImpl<$Res>;
  @useResult
  $Res call({int? accountCardIndex});
}

/// @nodoc
class __$$_AccountCardChangedCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_AccountCardChanged>
    implements _$$_AccountCardChangedCopyWith<$Res> {
  __$$_AccountCardChangedCopyWithImpl(
      _$_AccountCardChanged _value, $Res Function(_$_AccountCardChanged) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? accountCardIndex = freezed,
  }) {
    return _then(_$_AccountCardChanged(
      accountCardIndex: freezed == accountCardIndex
          ? _value.accountCardIndex
          : accountCardIndex // ignore: cast_nullable_to_non_nullable
              as int?,
    ));
  }
}

/// @nodoc

class _$_AccountCardChanged implements _AccountCardChanged {
  const _$_AccountCardChanged({required this.accountCardIndex});

  @override
  final int? accountCardIndex;

  @override
  String toString() {
    return 'RdCustomerEvent.accountCardChanged(accountCardIndex: $accountCardIndex)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_AccountCardChanged &&
            (identical(other.accountCardIndex, accountCardIndex) ||
                other.accountCardIndex == accountCardIndex));
  }

  @override
  int get hashCode => Object.hash(runtimeType, accountCardIndex);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_AccountCardChangedCopyWith<_$_AccountCardChanged> get copyWith =>
      __$$_AccountCardChangedCopyWithImpl<_$_AccountCardChanged>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return accountCardChanged(accountCardIndex);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return accountCardChanged?.call(accountCardIndex);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (accountCardChanged != null) {
      return accountCardChanged(accountCardIndex);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return accountCardChanged(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return accountCardChanged?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (accountCardChanged != null) {
      return accountCardChanged(this);
    }
    return orElse();
  }
}

abstract class _AccountCardChanged implements RdCustomerEvent {
  const factory _AccountCardChanged({required final int? accountCardIndex}) =
      _$_AccountCardChanged;

  int? get accountCardIndex;
  @JsonKey(ignore: true)
  _$$_AccountCardChangedCopyWith<_$_AccountCardChanged> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_PaymentCardChangedCopyWith<$Res> {
  factory _$$_PaymentCardChangedCopyWith(_$_PaymentCardChanged value,
          $Res Function(_$_PaymentCardChanged) then) =
      __$$_PaymentCardChangedCopyWithImpl<$Res>;
  @useResult
  $Res call({int? paymentCardIndex});
}

/// @nodoc
class __$$_PaymentCardChangedCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_PaymentCardChanged>
    implements _$$_PaymentCardChangedCopyWith<$Res> {
  __$$_PaymentCardChangedCopyWithImpl(
      _$_PaymentCardChanged _value, $Res Function(_$_PaymentCardChanged) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? paymentCardIndex = freezed,
  }) {
    return _then(_$_PaymentCardChanged(
      paymentCardIndex: freezed == paymentCardIndex
          ? _value.paymentCardIndex
          : paymentCardIndex // ignore: cast_nullable_to_non_nullable
              as int?,
    ));
  }
}

/// @nodoc

class _$_PaymentCardChanged implements _PaymentCardChanged {
  const _$_PaymentCardChanged({required this.paymentCardIndex});

  @override
  final int? paymentCardIndex;

  @override
  String toString() {
    return 'RdCustomerEvent.paymentCardChanged(paymentCardIndex: $paymentCardIndex)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_PaymentCardChanged &&
            (identical(other.paymentCardIndex, paymentCardIndex) ||
                other.paymentCardIndex == paymentCardIndex));
  }

  @override
  int get hashCode => Object.hash(runtimeType, paymentCardIndex);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_PaymentCardChangedCopyWith<_$_PaymentCardChanged> get copyWith =>
      __$$_PaymentCardChangedCopyWithImpl<_$_PaymentCardChanged>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return paymentCardChanged(paymentCardIndex);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return paymentCardChanged?.call(paymentCardIndex);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (paymentCardChanged != null) {
      return paymentCardChanged(paymentCardIndex);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return paymentCardChanged(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return paymentCardChanged?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (paymentCardChanged != null) {
      return paymentCardChanged(this);
    }
    return orElse();
  }
}

abstract class _PaymentCardChanged implements RdCustomerEvent {
  const factory _PaymentCardChanged({required final int? paymentCardIndex}) =
      _$_PaymentCardChanged;

  int? get paymentCardIndex;
  @JsonKey(ignore: true)
  _$$_PaymentCardChangedCopyWith<_$_PaymentCardChanged> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_RdIncrementButtonCopyWith<$Res> {
  factory _$$_RdIncrementButtonCopyWith(_$_RdIncrementButton value,
          $Res Function(_$_RdIncrementButton) then) =
      __$$_RdIncrementButtonCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_RdIncrementButtonCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdIncrementButton>
    implements _$$_RdIncrementButtonCopyWith<$Res> {
  __$$_RdIncrementButtonCopyWithImpl(
      _$_RdIncrementButton _value, $Res Function(_$_RdIncrementButton) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_RdIncrementButton implements _RdIncrementButton {
  const _$_RdIncrementButton();

  @override
  String toString() {
    return 'RdCustomerEvent.rdIncrementButton()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_RdIncrementButton);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdIncrementButton();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdIncrementButton?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdIncrementButton != null) {
      return rdIncrementButton();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdIncrementButton(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdIncrementButton?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdIncrementButton != null) {
      return rdIncrementButton(this);
    }
    return orElse();
  }
}

abstract class _RdIncrementButton implements RdCustomerEvent {
  const factory _RdIncrementButton() = _$_RdIncrementButton;
}

/// @nodoc
abstract class _$$_RdDecrementButtonCopyWith<$Res> {
  factory _$$_RdDecrementButtonCopyWith(_$_RdDecrementButton value,
          $Res Function(_$_RdDecrementButton) then) =
      __$$_RdDecrementButtonCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_RdDecrementButtonCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdDecrementButton>
    implements _$$_RdDecrementButtonCopyWith<$Res> {
  __$$_RdDecrementButtonCopyWithImpl(
      _$_RdDecrementButton _value, $Res Function(_$_RdDecrementButton) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_RdDecrementButton implements _RdDecrementButton {
  const _$_RdDecrementButton();

  @override
  String toString() {
    return 'RdCustomerEvent.rdDecrementButton()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_RdDecrementButton);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdDecrementButton();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdDecrementButton?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdDecrementButton != null) {
      return rdDecrementButton();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdDecrementButton(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdDecrementButton?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdDecrementButton != null) {
      return rdDecrementButton(this);
    }
    return orElse();
  }
}

abstract class _RdDecrementButton implements RdCustomerEvent {
  const factory _RdDecrementButton() = _$_RdDecrementButton;
}

/// @nodoc
abstract class _$$_FetchRdOverDueCopyWith<$Res> {
  factory _$$_FetchRdOverDueCopyWith(
          _$_FetchRdOverDue value, $Res Function(_$_FetchRdOverDue) then) =
      __$$_FetchRdOverDueCopyWithImpl<$Res>;
  @useResult
  $Res call({String customerId, String depositId});
}

/// @nodoc
class __$$_FetchRdOverDueCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_FetchRdOverDue>
    implements _$$_FetchRdOverDueCopyWith<$Res> {
  __$$_FetchRdOverDueCopyWithImpl(
      _$_FetchRdOverDue _value, $Res Function(_$_FetchRdOverDue) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? customerId = null,
    Object? depositId = null,
  }) {
    return _then(_$_FetchRdOverDue(
      customerId: null == customerId
          ? _value.customerId
          : customerId // ignore: cast_nullable_to_non_nullable
              as String,
      depositId: null == depositId
          ? _value.depositId
          : depositId // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_FetchRdOverDue implements _FetchRdOverDue {
  const _$_FetchRdOverDue({required this.customerId, required this.depositId});

  @override
  final String customerId;
  @override
  final String depositId;

  @override
  String toString() {
    return 'RdCustomerEvent.fetchRdOverDue(customerId: $customerId, depositId: $depositId)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_FetchRdOverDue &&
            (identical(other.customerId, customerId) ||
                other.customerId == customerId) &&
            (identical(other.depositId, depositId) ||
                other.depositId == depositId));
  }

  @override
  int get hashCode => Object.hash(runtimeType, customerId, depositId);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_FetchRdOverDueCopyWith<_$_FetchRdOverDue> get copyWith =>
      __$$_FetchRdOverDueCopyWithImpl<_$_FetchRdOverDue>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return fetchRdOverDue(customerId, depositId);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return fetchRdOverDue?.call(customerId, depositId);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchRdOverDue != null) {
      return fetchRdOverDue(customerId, depositId);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return fetchRdOverDue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return fetchRdOverDue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchRdOverDue != null) {
      return fetchRdOverDue(this);
    }
    return orElse();
  }
}

abstract class _FetchRdOverDue implements RdCustomerEvent {
  const factory _FetchRdOverDue(
      {required final String customerId,
      required final String depositId}) = _$_FetchRdOverDue;

  String get customerId;
  String get depositId;
  @JsonKey(ignore: true)
  _$$_FetchRdOverDueCopyWith<_$_FetchRdOverDue> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_FetchRdSubsidiaryBankCopyWith<$Res> {
  factory _$$_FetchRdSubsidiaryBankCopyWith(_$_FetchRdSubsidiaryBank value,
          $Res Function(_$_FetchRdSubsidiaryBank) then) =
      __$$_FetchRdSubsidiaryBankCopyWithImpl<$Res>;
  @useResult
  $Res call({int branchId, int? firmId, String? modeoftransaction});
}

/// @nodoc
class __$$_FetchRdSubsidiaryBankCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_FetchRdSubsidiaryBank>
    implements _$$_FetchRdSubsidiaryBankCopyWith<$Res> {
  __$$_FetchRdSubsidiaryBankCopyWithImpl(_$_FetchRdSubsidiaryBank _value,
      $Res Function(_$_FetchRdSubsidiaryBank) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? branchId = null,
    Object? firmId = freezed,
    Object? modeoftransaction = freezed,
  }) {
    return _then(_$_FetchRdSubsidiaryBank(
      branchId: null == branchId
          ? _value.branchId
          : branchId // ignore: cast_nullable_to_non_nullable
              as int,
      firmId: freezed == firmId
          ? _value.firmId
          : firmId // ignore: cast_nullable_to_non_nullable
              as int?,
      modeoftransaction: freezed == modeoftransaction
          ? _value.modeoftransaction
          : modeoftransaction // ignore: cast_nullable_to_non_nullable
              as String?,
    ));
  }
}

/// @nodoc

class _$_FetchRdSubsidiaryBank implements _FetchRdSubsidiaryBank {
  const _$_FetchRdSubsidiaryBank(
      {required this.branchId,
      required this.firmId,
      required this.modeoftransaction});

  @override
  final int branchId;
  @override
  final int? firmId;
  @override
  final String? modeoftransaction;

  @override
  String toString() {
    return 'RdCustomerEvent.fetchRdSubsidiaryBank(branchId: $branchId, firmId: $firmId, modeoftransaction: $modeoftransaction)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_FetchRdSubsidiaryBank &&
            (identical(other.branchId, branchId) ||
                other.branchId == branchId) &&
            (identical(other.firmId, firmId) || other.firmId == firmId) &&
            (identical(other.modeoftransaction, modeoftransaction) ||
                other.modeoftransaction == modeoftransaction));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, branchId, firmId, modeoftransaction);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_FetchRdSubsidiaryBankCopyWith<_$_FetchRdSubsidiaryBank> get copyWith =>
      __$$_FetchRdSubsidiaryBankCopyWithImpl<_$_FetchRdSubsidiaryBank>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return fetchRdSubsidiaryBank(branchId, firmId, modeoftransaction);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return fetchRdSubsidiaryBank?.call(branchId, firmId, modeoftransaction);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchRdSubsidiaryBank != null) {
      return fetchRdSubsidiaryBank(branchId, firmId, modeoftransaction);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return fetchRdSubsidiaryBank(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return fetchRdSubsidiaryBank?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchRdSubsidiaryBank != null) {
      return fetchRdSubsidiaryBank(this);
    }
    return orElse();
  }
}

abstract class _FetchRdSubsidiaryBank implements RdCustomerEvent {
  const factory _FetchRdSubsidiaryBank(
      {required final int branchId,
      required final int? firmId,
      required final String? modeoftransaction}) = _$_FetchRdSubsidiaryBank;

  int get branchId;
  int? get firmId;
  String? get modeoftransaction;
  @JsonKey(ignore: true)
  _$$_FetchRdSubsidiaryBankCopyWith<_$_FetchRdSubsidiaryBank> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_fetchRdIfscCodeCopyWith<$Res> {
  factory _$$_fetchRdIfscCodeCopyWith(
          _$_fetchRdIfscCode value, $Res Function(_$_fetchRdIfscCode) then) =
      __$$_fetchRdIfscCodeCopyWithImpl<$Res>;
  @useResult
  $Res call({String ifscCode});
}

/// @nodoc
class __$$_fetchRdIfscCodeCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_fetchRdIfscCode>
    implements _$$_fetchRdIfscCodeCopyWith<$Res> {
  __$$_fetchRdIfscCodeCopyWithImpl(
      _$_fetchRdIfscCode _value, $Res Function(_$_fetchRdIfscCode) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? ifscCode = null,
  }) {
    return _then(_$_fetchRdIfscCode(
      ifscCode: null == ifscCode
          ? _value.ifscCode
          : ifscCode // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_fetchRdIfscCode implements _fetchRdIfscCode {
  const _$_fetchRdIfscCode({required this.ifscCode});

  @override
  final String ifscCode;

  @override
  String toString() {
    return 'RdCustomerEvent.fetchRdIfscCode(ifscCode: $ifscCode)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_fetchRdIfscCode &&
            (identical(other.ifscCode, ifscCode) ||
                other.ifscCode == ifscCode));
  }

  @override
  int get hashCode => Object.hash(runtimeType, ifscCode);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_fetchRdIfscCodeCopyWith<_$_fetchRdIfscCode> get copyWith =>
      __$$_fetchRdIfscCodeCopyWithImpl<_$_fetchRdIfscCode>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return fetchRdIfscCode(ifscCode);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return fetchRdIfscCode?.call(ifscCode);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchRdIfscCode != null) {
      return fetchRdIfscCode(ifscCode);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return fetchRdIfscCode(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return fetchRdIfscCode?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchRdIfscCode != null) {
      return fetchRdIfscCode(this);
    }
    return orElse();
  }
}

abstract class _fetchRdIfscCode implements RdCustomerEvent {
  const factory _fetchRdIfscCode({required final String ifscCode}) =
      _$_fetchRdIfscCode;

  String get ifscCode;
  @JsonKey(ignore: true)
  _$$_fetchRdIfscCodeCopyWith<_$_fetchRdIfscCode> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_UpdateRdDepositTotalAmountCopyWith<$Res> {
  factory _$$_UpdateRdDepositTotalAmountCopyWith(
          _$_UpdateRdDepositTotalAmount value,
          $Res Function(_$_UpdateRdDepositTotalAmount) then) =
      __$$_UpdateRdDepositTotalAmountCopyWithImpl<$Res>;
  @useResult
  $Res call(
      {double rdDepositTotalAmount,
      int rdDepositDueCount,
      double rdDepositDueAmount});
}

/// @nodoc
class __$$_UpdateRdDepositTotalAmountCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_UpdateRdDepositTotalAmount>
    implements _$$_UpdateRdDepositTotalAmountCopyWith<$Res> {
  __$$_UpdateRdDepositTotalAmountCopyWithImpl(
      _$_UpdateRdDepositTotalAmount _value,
      $Res Function(_$_UpdateRdDepositTotalAmount) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? rdDepositTotalAmount = null,
    Object? rdDepositDueCount = null,
    Object? rdDepositDueAmount = null,
  }) {
    return _then(_$_UpdateRdDepositTotalAmount(
      rdDepositTotalAmount: null == rdDepositTotalAmount
          ? _value.rdDepositTotalAmount
          : rdDepositTotalAmount // ignore: cast_nullable_to_non_nullable
              as double,
      rdDepositDueCount: null == rdDepositDueCount
          ? _value.rdDepositDueCount
          : rdDepositDueCount // ignore: cast_nullable_to_non_nullable
              as int,
      rdDepositDueAmount: null == rdDepositDueAmount
          ? _value.rdDepositDueAmount
          : rdDepositDueAmount // ignore: cast_nullable_to_non_nullable
              as double,
    ));
  }
}

/// @nodoc

class _$_UpdateRdDepositTotalAmount implements _UpdateRdDepositTotalAmount {
  const _$_UpdateRdDepositTotalAmount(
      {required this.rdDepositTotalAmount,
      required this.rdDepositDueCount,
      required this.rdDepositDueAmount});

  @override
  final double rdDepositTotalAmount;
  @override
  final int rdDepositDueCount;
  @override
  final double rdDepositDueAmount;

  @override
  String toString() {
    return 'RdCustomerEvent.updateRdDepositTotalAmount(rdDepositTotalAmount: $rdDepositTotalAmount, rdDepositDueCount: $rdDepositDueCount, rdDepositDueAmount: $rdDepositDueAmount)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_UpdateRdDepositTotalAmount &&
            (identical(other.rdDepositTotalAmount, rdDepositTotalAmount) ||
                other.rdDepositTotalAmount == rdDepositTotalAmount) &&
            (identical(other.rdDepositDueCount, rdDepositDueCount) ||
                other.rdDepositDueCount == rdDepositDueCount) &&
            (identical(other.rdDepositDueAmount, rdDepositDueAmount) ||
                other.rdDepositDueAmount == rdDepositDueAmount));
  }

  @override
  int get hashCode => Object.hash(
      runtimeType, rdDepositTotalAmount, rdDepositDueCount, rdDepositDueAmount);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_UpdateRdDepositTotalAmountCopyWith<_$_UpdateRdDepositTotalAmount>
      get copyWith => __$$_UpdateRdDepositTotalAmountCopyWithImpl<
          _$_UpdateRdDepositTotalAmount>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return updateRdDepositTotalAmount(
        rdDepositTotalAmount, rdDepositDueCount, rdDepositDueAmount);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return updateRdDepositTotalAmount?.call(
        rdDepositTotalAmount, rdDepositDueCount, rdDepositDueAmount);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateRdDepositTotalAmount != null) {
      return updateRdDepositTotalAmount(
          rdDepositTotalAmount, rdDepositDueCount, rdDepositDueAmount);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return updateRdDepositTotalAmount(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return updateRdDepositTotalAmount?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateRdDepositTotalAmount != null) {
      return updateRdDepositTotalAmount(this);
    }
    return orElse();
  }
}

abstract class _UpdateRdDepositTotalAmount implements RdCustomerEvent {
  const factory _UpdateRdDepositTotalAmount(
          {required final double rdDepositTotalAmount,
          required final int rdDepositDueCount,
          required final double rdDepositDueAmount}) =
      _$_UpdateRdDepositTotalAmount;

  double get rdDepositTotalAmount;
  int get rdDepositDueCount;
  double get rdDepositDueAmount;
  @JsonKey(ignore: true)
  _$$_UpdateRdDepositTotalAmountCopyWith<_$_UpdateRdDepositTotalAmount>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_RdaccountCardIndexCopyWith<$Res> {
  factory _$$_RdaccountCardIndexCopyWith(_$_RdaccountCardIndex value,
          $Res Function(_$_RdaccountCardIndex) then) =
      __$$_RdaccountCardIndexCopyWithImpl<$Res>;
  @useResult
  $Res call({int index});
}

/// @nodoc
class __$$_RdaccountCardIndexCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdaccountCardIndex>
    implements _$$_RdaccountCardIndexCopyWith<$Res> {
  __$$_RdaccountCardIndexCopyWithImpl(
      _$_RdaccountCardIndex _value, $Res Function(_$_RdaccountCardIndex) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? index = null,
  }) {
    return _then(_$_RdaccountCardIndex(
      null == index
          ? _value.index
          : index // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$_RdaccountCardIndex implements _RdaccountCardIndex {
  const _$_RdaccountCardIndex(this.index);

  @override
  final int index;

  @override
  String toString() {
    return 'RdCustomerEvent.rdaccountCardIndex(index: $index)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RdaccountCardIndex &&
            (identical(other.index, index) || other.index == index));
  }

  @override
  int get hashCode => Object.hash(runtimeType, index);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdaccountCardIndexCopyWith<_$_RdaccountCardIndex> get copyWith =>
      __$$_RdaccountCardIndexCopyWithImpl<_$_RdaccountCardIndex>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdaccountCardIndex(index);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdaccountCardIndex?.call(index);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdaccountCardIndex != null) {
      return rdaccountCardIndex(index);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdaccountCardIndex(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdaccountCardIndex?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdaccountCardIndex != null) {
      return rdaccountCardIndex(this);
    }
    return orElse();
  }
}

abstract class _RdaccountCardIndex implements RdCustomerEvent {
  const factory _RdaccountCardIndex(final int index) = _$_RdaccountCardIndex;

  int get index;
  @JsonKey(ignore: true)
  _$$_RdaccountCardIndexCopyWith<_$_RdaccountCardIndex> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_SubsidiaryBankCopyWith<$Res> {
  factory _$$_SubsidiaryBankCopyWith(
          _$_SubsidiaryBank value, $Res Function(_$_SubsidiaryBank) then) =
      __$$_SubsidiaryBankCopyWithImpl<$Res>;
  @useResult
  $Res call({dynamic subsidiaryBank});
}

/// @nodoc
class __$$_SubsidiaryBankCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_SubsidiaryBank>
    implements _$$_SubsidiaryBankCopyWith<$Res> {
  __$$_SubsidiaryBankCopyWithImpl(
      _$_SubsidiaryBank _value, $Res Function(_$_SubsidiaryBank) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? subsidiaryBank = freezed,
  }) {
    return _then(_$_SubsidiaryBank(
      subsidiaryBank: freezed == subsidiaryBank
          ? _value.subsidiaryBank
          : subsidiaryBank // ignore: cast_nullable_to_non_nullable
              as dynamic,
    ));
  }
}

/// @nodoc

class _$_SubsidiaryBank implements _SubsidiaryBank {
  const _$_SubsidiaryBank({required this.subsidiaryBank});

  @override
  final dynamic subsidiaryBank;

  @override
  String toString() {
    return 'RdCustomerEvent.subsidiaryBank(subsidiaryBank: $subsidiaryBank)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_SubsidiaryBank &&
            const DeepCollectionEquality()
                .equals(other.subsidiaryBank, subsidiaryBank));
  }

  @override
  int get hashCode => Object.hash(
      runtimeType, const DeepCollectionEquality().hash(subsidiaryBank));

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_SubsidiaryBankCopyWith<_$_SubsidiaryBank> get copyWith =>
      __$$_SubsidiaryBankCopyWithImpl<_$_SubsidiaryBank>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return subsidiaryBank(this.subsidiaryBank);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return subsidiaryBank?.call(this.subsidiaryBank);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (subsidiaryBank != null) {
      return subsidiaryBank(this.subsidiaryBank);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return subsidiaryBank(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return subsidiaryBank?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (subsidiaryBank != null) {
      return subsidiaryBank(this);
    }
    return orElse();
  }
}

abstract class _SubsidiaryBank implements RdCustomerEvent {
  const factory _SubsidiaryBank({required final dynamic subsidiaryBank}) =
      _$_SubsidiaryBank;

  dynamic get subsidiaryBank;
  @JsonKey(ignore: true)
  _$$_SubsidiaryBankCopyWith<_$_SubsidiaryBank> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_UpdateChqueNumberCopyWith<$Res> {
  factory _$$_UpdateChqueNumberCopyWith(_$_UpdateChqueNumber value,
          $Res Function(_$_UpdateChqueNumber) then) =
      __$$_UpdateChqueNumberCopyWithImpl<$Res>;
  @useResult
  $Res call({String depositChequeNumber});
}

/// @nodoc
class __$$_UpdateChqueNumberCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_UpdateChqueNumber>
    implements _$$_UpdateChqueNumberCopyWith<$Res> {
  __$$_UpdateChqueNumberCopyWithImpl(
      _$_UpdateChqueNumber _value, $Res Function(_$_UpdateChqueNumber) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? depositChequeNumber = null,
  }) {
    return _then(_$_UpdateChqueNumber(
      null == depositChequeNumber
          ? _value.depositChequeNumber
          : depositChequeNumber // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_UpdateChqueNumber implements _UpdateChqueNumber {
  const _$_UpdateChqueNumber(this.depositChequeNumber);

  @override
  final String depositChequeNumber;

  @override
  String toString() {
    return 'RdCustomerEvent.updateChqueNumber(depositChequeNumber: $depositChequeNumber)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_UpdateChqueNumber &&
            (identical(other.depositChequeNumber, depositChequeNumber) ||
                other.depositChequeNumber == depositChequeNumber));
  }

  @override
  int get hashCode => Object.hash(runtimeType, depositChequeNumber);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_UpdateChqueNumberCopyWith<_$_UpdateChqueNumber> get copyWith =>
      __$$_UpdateChqueNumberCopyWithImpl<_$_UpdateChqueNumber>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return updateChqueNumber(depositChequeNumber);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return updateChqueNumber?.call(depositChequeNumber);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateChqueNumber != null) {
      return updateChqueNumber(depositChequeNumber);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return updateChqueNumber(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return updateChqueNumber?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateChqueNumber != null) {
      return updateChqueNumber(this);
    }
    return orElse();
  }
}

abstract class _UpdateChqueNumber implements RdCustomerEvent {
  const factory _UpdateChqueNumber(final String depositChequeNumber) =
      _$_UpdateChqueNumber;

  String get depositChequeNumber;
  @JsonKey(ignore: true)
  _$$_UpdateChqueNumberCopyWith<_$_UpdateChqueNumber> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_SetDueCopyWith<$Res> {
  factory _$$_SetDueCopyWith(_$_SetDue value, $Res Function(_$_SetDue) then) =
      __$$_SetDueCopyWithImpl<$Res>;
  @useResult
  $Res call({int currentDueCount, double currentDueValue});
}

/// @nodoc
class __$$_SetDueCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_SetDue>
    implements _$$_SetDueCopyWith<$Res> {
  __$$_SetDueCopyWithImpl(_$_SetDue _value, $Res Function(_$_SetDue) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? currentDueCount = null,
    Object? currentDueValue = null,
  }) {
    return _then(_$_SetDue(
      currentDueCount: null == currentDueCount
          ? _value.currentDueCount
          : currentDueCount // ignore: cast_nullable_to_non_nullable
              as int,
      currentDueValue: null == currentDueValue
          ? _value.currentDueValue
          : currentDueValue // ignore: cast_nullable_to_non_nullable
              as double,
    ));
  }
}

/// @nodoc

class _$_SetDue implements _SetDue {
  const _$_SetDue(
      {required this.currentDueCount, required this.currentDueValue});

  @override
  final int currentDueCount;
  @override
  final double currentDueValue;

  @override
  String toString() {
    return 'RdCustomerEvent.setDue(currentDueCount: $currentDueCount, currentDueValue: $currentDueValue)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_SetDue &&
            (identical(other.currentDueCount, currentDueCount) ||
                other.currentDueCount == currentDueCount) &&
            (identical(other.currentDueValue, currentDueValue) ||
                other.currentDueValue == currentDueValue));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, currentDueCount, currentDueValue);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_SetDueCopyWith<_$_SetDue> get copyWith =>
      __$$_SetDueCopyWithImpl<_$_SetDue>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return setDue(currentDueCount, currentDueValue);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return setDue?.call(currentDueCount, currentDueValue);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (setDue != null) {
      return setDue(currentDueCount, currentDueValue);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return setDue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return setDue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (setDue != null) {
      return setDue(this);
    }
    return orElse();
  }
}

abstract class _SetDue implements RdCustomerEvent {
  const factory _SetDue(
      {required final int currentDueCount,
      required final double currentDueValue}) = _$_SetDue;

  int get currentDueCount;
  double get currentDueValue;
  @JsonKey(ignore: true)
  _$$_SetDueCopyWith<_$_SetDue> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_PostRdDepositCopyWith<$Res> {
  factory _$$_PostRdDepositCopyWith(
          _$_PostRdDeposit value, $Res Function(_$_PostRdDeposit) then) =
      __$$_PostRdDepositCopyWithImpl<$Res>;
  @useResult
  $Res call(
      {int? branchId,
      int? firmId,
      String transactionType,
      double amount,
      String chequeNumber,
      int? subsidiaryAccountNumber,
      int? empCode,
      DateTime date,
      String customerId,
      String customerName,
      String documentId,
      String? userType,
      int? overDue,
      int noOfInstalments,
      String? realizationDate});
}

/// @nodoc
class __$$_PostRdDepositCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_PostRdDeposit>
    implements _$$_PostRdDepositCopyWith<$Res> {
  __$$_PostRdDepositCopyWithImpl(
      _$_PostRdDeposit _value, $Res Function(_$_PostRdDeposit) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? branchId = freezed,
    Object? firmId = freezed,
    Object? transactionType = null,
    Object? amount = null,
    Object? chequeNumber = null,
    Object? subsidiaryAccountNumber = freezed,
    Object? empCode = freezed,
    Object? date = null,
    Object? customerId = null,
    Object? customerName = null,
    Object? documentId = null,
    Object? userType = freezed,
    Object? overDue = freezed,
    Object? noOfInstalments = null,
    Object? realizationDate = freezed,
  }) {
    return _then(_$_PostRdDeposit(
      branchId: freezed == branchId
          ? _value.branchId
          : branchId // ignore: cast_nullable_to_non_nullable
              as int?,
      firmId: freezed == firmId
          ? _value.firmId
          : firmId // ignore: cast_nullable_to_non_nullable
              as int?,
      transactionType: null == transactionType
          ? _value.transactionType
          : transactionType // ignore: cast_nullable_to_non_nullable
              as String,
      amount: null == amount
          ? _value.amount
          : amount // ignore: cast_nullable_to_non_nullable
              as double,
      chequeNumber: null == chequeNumber
          ? _value.chequeNumber
          : chequeNumber // ignore: cast_nullable_to_non_nullable
              as String,
      subsidiaryAccountNumber: freezed == subsidiaryAccountNumber
          ? _value.subsidiaryAccountNumber
          : subsidiaryAccountNumber // ignore: cast_nullable_to_non_nullable
              as int?,
      empCode: freezed == empCode
          ? _value.empCode
          : empCode // ignore: cast_nullable_to_non_nullable
              as int?,
      date: null == date
          ? _value.date
          : date // ignore: cast_nullable_to_non_nullable
              as DateTime,
      customerId: null == customerId
          ? _value.customerId
          : customerId // ignore: cast_nullable_to_non_nullable
              as String,
      customerName: null == customerName
          ? _value.customerName
          : customerName // ignore: cast_nullable_to_non_nullable
              as String,
      documentId: null == documentId
          ? _value.documentId
          : documentId // ignore: cast_nullable_to_non_nullable
              as String,
      userType: freezed == userType
          ? _value.userType
          : userType // ignore: cast_nullable_to_non_nullable
              as String?,
      overDue: freezed == overDue
          ? _value.overDue
          : overDue // ignore: cast_nullable_to_non_nullable
              as int?,
      noOfInstalments: null == noOfInstalments
          ? _value.noOfInstalments
          : noOfInstalments // ignore: cast_nullable_to_non_nullable
              as int,
      realizationDate: freezed == realizationDate
          ? _value.realizationDate
          : realizationDate // ignore: cast_nullable_to_non_nullable
              as String?,
    ));
  }
}

/// @nodoc

class _$_PostRdDeposit implements _PostRdDeposit {
  const _$_PostRdDeposit(
      {required this.branchId,
      required this.firmId,
      required this.transactionType,
      required this.amount,
      required this.chequeNumber,
      required this.subsidiaryAccountNumber,
      required this.empCode,
      required this.date,
      required this.customerId,
      required this.customerName,
      required this.documentId,
      required this.userType,
      required this.overDue,
      required this.noOfInstalments,
      required this.realizationDate});

  @override
  final int? branchId;
  @override
  final int? firmId;
  @override
  final String transactionType;
  @override
  final double amount;
  @override
  final String chequeNumber;
  @override
  final int? subsidiaryAccountNumber;
  @override
  final int? empCode;
  @override
  final DateTime date;
  @override
  final String customerId;
  @override
  final String customerName;
  @override
  final String documentId;
  @override
  final String? userType;
  @override
  final int? overDue;
  @override
  final int noOfInstalments;
  @override
  final String? realizationDate;

  @override
  String toString() {
    return 'RdCustomerEvent.postRdDeposit(branchId: $branchId, firmId: $firmId, transactionType: $transactionType, amount: $amount, chequeNumber: $chequeNumber, subsidiaryAccountNumber: $subsidiaryAccountNumber, empCode: $empCode, date: $date, customerId: $customerId, customerName: $customerName, documentId: $documentId, userType: $userType, overDue: $overDue, noOfInstalments: $noOfInstalments, realizationDate: $realizationDate)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_PostRdDeposit &&
            (identical(other.branchId, branchId) ||
                other.branchId == branchId) &&
            (identical(other.firmId, firmId) || other.firmId == firmId) &&
            (identical(other.transactionType, transactionType) ||
                other.transactionType == transactionType) &&
            (identical(other.amount, amount) || other.amount == amount) &&
            (identical(other.chequeNumber, chequeNumber) ||
                other.chequeNumber == chequeNumber) &&
            (identical(
                    other.subsidiaryAccountNumber, subsidiaryAccountNumber) ||
                other.subsidiaryAccountNumber == subsidiaryAccountNumber) &&
            (identical(other.empCode, empCode) || other.empCode == empCode) &&
            (identical(other.date, date) || other.date == date) &&
            (identical(other.customerId, customerId) ||
                other.customerId == customerId) &&
            (identical(other.customerName, customerName) ||
                other.customerName == customerName) &&
            (identical(other.documentId, documentId) ||
                other.documentId == documentId) &&
            (identical(other.userType, userType) ||
                other.userType == userType) &&
            (identical(other.overDue, overDue) || other.overDue == overDue) &&
            (identical(other.noOfInstalments, noOfInstalments) ||
                other.noOfInstalments == noOfInstalments) &&
            (identical(other.realizationDate, realizationDate) ||
                other.realizationDate == realizationDate));
  }

  @override
  int get hashCode => Object.hash(
      runtimeType,
      branchId,
      firmId,
      transactionType,
      amount,
      chequeNumber,
      subsidiaryAccountNumber,
      empCode,
      date,
      customerId,
      customerName,
      documentId,
      userType,
      overDue,
      noOfInstalments,
      realizationDate);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_PostRdDepositCopyWith<_$_PostRdDeposit> get copyWith =>
      __$$_PostRdDepositCopyWithImpl<_$_PostRdDeposit>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return postRdDeposit(
        branchId,
        firmId,
        transactionType,
        amount,
        chequeNumber,
        this.subsidiaryAccountNumber,
        empCode,
        date,
        customerId,
        customerName,
        documentId,
        userType,
        overDue,
        noOfInstalments,
        realizationDate);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return postRdDeposit?.call(
        branchId,
        firmId,
        transactionType,
        amount,
        chequeNumber,
        this.subsidiaryAccountNumber,
        empCode,
        date,
        customerId,
        customerName,
        documentId,
        userType,
        overDue,
        noOfInstalments,
        realizationDate);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (postRdDeposit != null) {
      return postRdDeposit(
          branchId,
          firmId,
          transactionType,
          amount,
          chequeNumber,
          this.subsidiaryAccountNumber,
          empCode,
          date,
          customerId,
          customerName,
          documentId,
          userType,
          overDue,
          noOfInstalments,
          realizationDate);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return postRdDeposit(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return postRdDeposit?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (postRdDeposit != null) {
      return postRdDeposit(this);
    }
    return orElse();
  }
}

abstract class _PostRdDeposit implements RdCustomerEvent {
  const factory _PostRdDeposit(
      {required final int? branchId,
      required final int? firmId,
      required final String transactionType,
      required final double amount,
      required final String chequeNumber,
      required final int? subsidiaryAccountNumber,
      required final int? empCode,
      required final DateTime date,
      required final String customerId,
      required final String customerName,
      required final String documentId,
      required final String? userType,
      required final int? overDue,
      required final int noOfInstalments,
      required final String? realizationDate}) = _$_PostRdDeposit;

  int? get branchId;
  int? get firmId;
  String get transactionType;
  double get amount;
  String get chequeNumber;
  int? get subsidiaryAccountNumber;
  int? get empCode;
  DateTime get date;
  String get customerId;
  String get customerName;
  String get documentId;
  String? get userType;
  int? get overDue;
  int get noOfInstalments;
  String? get realizationDate;
  @JsonKey(ignore: true)
  _$$_PostRdDepositCopyWith<_$_PostRdDeposit> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_UpdateChequeDateCopyWith<$Res> {
  factory _$$_UpdateChequeDateCopyWith(
          _$_UpdateChequeDate value, $Res Function(_$_UpdateChequeDate) then) =
      __$$_UpdateChequeDateCopyWithImpl<$Res>;
  @useResult
  $Res call({DateTime depositDate});
}

/// @nodoc
class __$$_UpdateChequeDateCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_UpdateChequeDate>
    implements _$$_UpdateChequeDateCopyWith<$Res> {
  __$$_UpdateChequeDateCopyWithImpl(
      _$_UpdateChequeDate _value, $Res Function(_$_UpdateChequeDate) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? depositDate = null,
  }) {
    return _then(_$_UpdateChequeDate(
      null == depositDate
          ? _value.depositDate
          : depositDate // ignore: cast_nullable_to_non_nullable
              as DateTime,
    ));
  }
}

/// @nodoc

class _$_UpdateChequeDate implements _UpdateChequeDate {
  const _$_UpdateChequeDate(this.depositDate);

  @override
  final DateTime depositDate;

  @override
  String toString() {
    return 'RdCustomerEvent.updateChequeDate(depositDate: $depositDate)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_UpdateChequeDate &&
            (identical(other.depositDate, depositDate) ||
                other.depositDate == depositDate));
  }

  @override
  int get hashCode => Object.hash(runtimeType, depositDate);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_UpdateChequeDateCopyWith<_$_UpdateChequeDate> get copyWith =>
      __$$_UpdateChequeDateCopyWithImpl<_$_UpdateChequeDate>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return updateChequeDate(depositDate);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return updateChequeDate?.call(depositDate);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateChequeDate != null) {
      return updateChequeDate(depositDate);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return updateChequeDate(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return updateChequeDate?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateChequeDate != null) {
      return updateChequeDate(this);
    }
    return orElse();
  }
}

abstract class _UpdateChequeDate implements RdCustomerEvent {
  const factory _UpdateChequeDate(final DateTime depositDate) =
      _$_UpdateChequeDate;

  DateTime get depositDate;
  @JsonKey(ignore: true)
  _$$_UpdateChequeDateCopyWith<_$_UpdateChequeDate> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_SubsidiaryAccountNumberCopyWith<$Res> {
  factory _$$_SubsidiaryAccountNumberCopyWith(_$_SubsidiaryAccountNumber value,
          $Res Function(_$_SubsidiaryAccountNumber) then) =
      __$$_SubsidiaryAccountNumberCopyWithImpl<$Res>;
  @useResult
  $Res call({int subsidiaryAccountNumber});
}

/// @nodoc
class __$$_SubsidiaryAccountNumberCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_SubsidiaryAccountNumber>
    implements _$$_SubsidiaryAccountNumberCopyWith<$Res> {
  __$$_SubsidiaryAccountNumberCopyWithImpl(_$_SubsidiaryAccountNumber _value,
      $Res Function(_$_SubsidiaryAccountNumber) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? subsidiaryAccountNumber = null,
  }) {
    return _then(_$_SubsidiaryAccountNumber(
      subsidiaryAccountNumber: null == subsidiaryAccountNumber
          ? _value.subsidiaryAccountNumber
          : subsidiaryAccountNumber // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$_SubsidiaryAccountNumber implements _SubsidiaryAccountNumber {
  const _$_SubsidiaryAccountNumber({required this.subsidiaryAccountNumber});

  @override
  final int subsidiaryAccountNumber;

  @override
  String toString() {
    return 'RdCustomerEvent.subsidiaryAccountNumber(subsidiaryAccountNumber: $subsidiaryAccountNumber)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_SubsidiaryAccountNumber &&
            (identical(
                    other.subsidiaryAccountNumber, subsidiaryAccountNumber) ||
                other.subsidiaryAccountNumber == subsidiaryAccountNumber));
  }

  @override
  int get hashCode => Object.hash(runtimeType, subsidiaryAccountNumber);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_SubsidiaryAccountNumberCopyWith<_$_SubsidiaryAccountNumber>
      get copyWith =>
          __$$_SubsidiaryAccountNumberCopyWithImpl<_$_SubsidiaryAccountNumber>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return subsidiaryAccountNumber(this.subsidiaryAccountNumber);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return subsidiaryAccountNumber?.call(this.subsidiaryAccountNumber);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (subsidiaryAccountNumber != null) {
      return subsidiaryAccountNumber(this.subsidiaryAccountNumber);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return subsidiaryAccountNumber(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return subsidiaryAccountNumber?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (subsidiaryAccountNumber != null) {
      return subsidiaryAccountNumber(this);
    }
    return orElse();
  }
}

abstract class _SubsidiaryAccountNumber implements RdCustomerEvent {
  const factory _SubsidiaryAccountNumber(
          {required final int subsidiaryAccountNumber}) =
      _$_SubsidiaryAccountNumber;

  int get subsidiaryAccountNumber;
  @JsonKey(ignore: true)
  _$$_SubsidiaryAccountNumberCopyWith<_$_SubsidiaryAccountNumber>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_UpdateBankBranchIdCopyWith<$Res> {
  factory _$$_UpdateBankBranchIdCopyWith(_$_UpdateBankBranchId value,
          $Res Function(_$_UpdateBankBranchId) then) =
      __$$_UpdateBankBranchIdCopyWithImpl<$Res>;
  @useResult
  $Res call({int bankBranchId});
}

/// @nodoc
class __$$_UpdateBankBranchIdCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_UpdateBankBranchId>
    implements _$$_UpdateBankBranchIdCopyWith<$Res> {
  __$$_UpdateBankBranchIdCopyWithImpl(
      _$_UpdateBankBranchId _value, $Res Function(_$_UpdateBankBranchId) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? bankBranchId = null,
  }) {
    return _then(_$_UpdateBankBranchId(
      bankBranchId: null == bankBranchId
          ? _value.bankBranchId
          : bankBranchId // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$_UpdateBankBranchId implements _UpdateBankBranchId {
  const _$_UpdateBankBranchId({required this.bankBranchId});

  @override
  final int bankBranchId;

  @override
  String toString() {
    return 'RdCustomerEvent.updateBankBranchId(bankBranchId: $bankBranchId)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_UpdateBankBranchId &&
            (identical(other.bankBranchId, bankBranchId) ||
                other.bankBranchId == bankBranchId));
  }

  @override
  int get hashCode => Object.hash(runtimeType, bankBranchId);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_UpdateBankBranchIdCopyWith<_$_UpdateBankBranchId> get copyWith =>
      __$$_UpdateBankBranchIdCopyWithImpl<_$_UpdateBankBranchId>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return updateBankBranchId(bankBranchId);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return updateBankBranchId?.call(bankBranchId);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateBankBranchId != null) {
      return updateBankBranchId(bankBranchId);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return updateBankBranchId(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return updateBankBranchId?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateBankBranchId != null) {
      return updateBankBranchId(this);
    }
    return orElse();
  }
}

abstract class _UpdateBankBranchId implements RdCustomerEvent {
  const factory _UpdateBankBranchId({required final int bankBranchId}) =
      _$_UpdateBankBranchId;

  int get bankBranchId;
  @JsonKey(ignore: true)
  _$$_UpdateBankBranchIdCopyWith<_$_UpdateBankBranchId> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_UpdateSubsidiaryBankCopyWith<$Res> {
  factory _$$_UpdateSubsidiaryBankCopyWith(_$_UpdateSubsidiaryBank value,
          $Res Function(_$_UpdateSubsidiaryBank) then) =
      __$$_UpdateSubsidiaryBankCopyWithImpl<$Res>;
  @useResult
  $Res call({String subsidiaryBank});
}

/// @nodoc
class __$$_UpdateSubsidiaryBankCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_UpdateSubsidiaryBank>
    implements _$$_UpdateSubsidiaryBankCopyWith<$Res> {
  __$$_UpdateSubsidiaryBankCopyWithImpl(_$_UpdateSubsidiaryBank _value,
      $Res Function(_$_UpdateSubsidiaryBank) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? subsidiaryBank = null,
  }) {
    return _then(_$_UpdateSubsidiaryBank(
      subsidiaryBank: null == subsidiaryBank
          ? _value.subsidiaryBank
          : subsidiaryBank // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_UpdateSubsidiaryBank implements _UpdateSubsidiaryBank {
  const _$_UpdateSubsidiaryBank({required this.subsidiaryBank});

  @override
  final String subsidiaryBank;

  @override
  String toString() {
    return 'RdCustomerEvent.updateSubsidiaryBank(subsidiaryBank: $subsidiaryBank)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_UpdateSubsidiaryBank &&
            (identical(other.subsidiaryBank, subsidiaryBank) ||
                other.subsidiaryBank == subsidiaryBank));
  }

  @override
  int get hashCode => Object.hash(runtimeType, subsidiaryBank);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_UpdateSubsidiaryBankCopyWith<_$_UpdateSubsidiaryBank> get copyWith =>
      __$$_UpdateSubsidiaryBankCopyWithImpl<_$_UpdateSubsidiaryBank>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return updateSubsidiaryBank(this.subsidiaryBank);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return updateSubsidiaryBank?.call(this.subsidiaryBank);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateSubsidiaryBank != null) {
      return updateSubsidiaryBank(this.subsidiaryBank);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return updateSubsidiaryBank(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return updateSubsidiaryBank?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateSubsidiaryBank != null) {
      return updateSubsidiaryBank(this);
    }
    return orElse();
  }
}

abstract class _UpdateSubsidiaryBank implements RdCustomerEvent {
  const factory _UpdateSubsidiaryBank({required final String subsidiaryBank}) =
      _$_UpdateSubsidiaryBank;

  String get subsidiaryBank;
  @JsonKey(ignore: true)
  _$$_UpdateSubsidiaryBankCopyWith<_$_UpdateSubsidiaryBank> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_FetchIfscCodeCopyWith<$Res> {
  factory _$$_FetchIfscCodeCopyWith(
          _$_FetchIfscCode value, $Res Function(_$_FetchIfscCode) then) =
      __$$_FetchIfscCodeCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_FetchIfscCodeCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_FetchIfscCode>
    implements _$$_FetchIfscCodeCopyWith<$Res> {
  __$$_FetchIfscCodeCopyWithImpl(
      _$_FetchIfscCode _value, $Res Function(_$_FetchIfscCode) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_FetchIfscCode implements _FetchIfscCode {
  const _$_FetchIfscCode();

  @override
  String toString() {
    return 'RdCustomerEvent.fetchIfscCode()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_FetchIfscCode);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return fetchIfscCode();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return fetchIfscCode?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchIfscCode != null) {
      return fetchIfscCode();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return fetchIfscCode(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return fetchIfscCode?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchIfscCode != null) {
      return fetchIfscCode(this);
    }
    return orElse();
  }
}

abstract class _FetchIfscCode implements RdCustomerEvent {
  const factory _FetchIfscCode() = _$_FetchIfscCode;
}

/// @nodoc
abstract class _$$_UpdateIfscCodeCopyWith<$Res> {
  factory _$$_UpdateIfscCodeCopyWith(
          _$_UpdateIfscCode value, $Res Function(_$_UpdateIfscCode) then) =
      __$$_UpdateIfscCodeCopyWithImpl<$Res>;
  @useResult
  $Res call({String ifscCode});
}

/// @nodoc
class __$$_UpdateIfscCodeCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_UpdateIfscCode>
    implements _$$_UpdateIfscCodeCopyWith<$Res> {
  __$$_UpdateIfscCodeCopyWithImpl(
      _$_UpdateIfscCode _value, $Res Function(_$_UpdateIfscCode) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? ifscCode = null,
  }) {
    return _then(_$_UpdateIfscCode(
      null == ifscCode
          ? _value.ifscCode
          : ifscCode // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_UpdateIfscCode implements _UpdateIfscCode {
  const _$_UpdateIfscCode(this.ifscCode);

  @override
  final String ifscCode;

  @override
  String toString() {
    return 'RdCustomerEvent.updateIfscCode(ifscCode: $ifscCode)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_UpdateIfscCode &&
            (identical(other.ifscCode, ifscCode) ||
                other.ifscCode == ifscCode));
  }

  @override
  int get hashCode => Object.hash(runtimeType, ifscCode);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_UpdateIfscCodeCopyWith<_$_UpdateIfscCode> get copyWith =>
      __$$_UpdateIfscCodeCopyWithImpl<_$_UpdateIfscCode>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return updateIfscCode(ifscCode);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return updateIfscCode?.call(ifscCode);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateIfscCode != null) {
      return updateIfscCode(ifscCode);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return updateIfscCode(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return updateIfscCode?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateIfscCode != null) {
      return updateIfscCode(this);
    }
    return orElse();
  }
}

abstract class _UpdateIfscCode implements RdCustomerEvent {
  const factory _UpdateIfscCode(final String ifscCode) = _$_UpdateIfscCode;

  String get ifscCode;
  @JsonKey(ignore: true)
  _$$_UpdateIfscCodeCopyWith<_$_UpdateIfscCode> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_UpdateRealizationDateCopyWith<$Res> {
  factory _$$_UpdateRealizationDateCopyWith(_$_UpdateRealizationDate value,
          $Res Function(_$_UpdateRealizationDate) then) =
      __$$_UpdateRealizationDateCopyWithImpl<$Res>;
  @useResult
  $Res call({DateTime depositRealizationDate});
}

/// @nodoc
class __$$_UpdateRealizationDateCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_UpdateRealizationDate>
    implements _$$_UpdateRealizationDateCopyWith<$Res> {
  __$$_UpdateRealizationDateCopyWithImpl(_$_UpdateRealizationDate _value,
      $Res Function(_$_UpdateRealizationDate) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? depositRealizationDate = null,
  }) {
    return _then(_$_UpdateRealizationDate(
      null == depositRealizationDate
          ? _value.depositRealizationDate
          : depositRealizationDate // ignore: cast_nullable_to_non_nullable
              as DateTime,
    ));
  }
}

/// @nodoc

class _$_UpdateRealizationDate implements _UpdateRealizationDate {
  const _$_UpdateRealizationDate(this.depositRealizationDate);

  @override
  final DateTime depositRealizationDate;

  @override
  String toString() {
    return 'RdCustomerEvent.updateRealizationDate(depositRealizationDate: $depositRealizationDate)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_UpdateRealizationDate &&
            (identical(other.depositRealizationDate, depositRealizationDate) ||
                other.depositRealizationDate == depositRealizationDate));
  }

  @override
  int get hashCode => Object.hash(runtimeType, depositRealizationDate);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_UpdateRealizationDateCopyWith<_$_UpdateRealizationDate> get copyWith =>
      __$$_UpdateRealizationDateCopyWithImpl<_$_UpdateRealizationDate>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return updateRealizationDate(depositRealizationDate);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return updateRealizationDate?.call(depositRealizationDate);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateRealizationDate != null) {
      return updateRealizationDate(depositRealizationDate);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return updateRealizationDate(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return updateRealizationDate?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateRealizationDate != null) {
      return updateRealizationDate(this);
    }
    return orElse();
  }
}

abstract class _UpdateRealizationDate implements RdCustomerEvent {
  const factory _UpdateRealizationDate(final DateTime depositRealizationDate) =
      _$_UpdateRealizationDate;

  DateTime get depositRealizationDate;
  @JsonKey(ignore: true)
  _$$_UpdateRealizationDateCopyWith<_$_UpdateRealizationDate> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_ResetInstallmentCountCopyWith<$Res> {
  factory _$$_ResetInstallmentCountCopyWith(_$_ResetInstallmentCount value,
          $Res Function(_$_ResetInstallmentCount) then) =
      __$$_ResetInstallmentCountCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_ResetInstallmentCountCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_ResetInstallmentCount>
    implements _$$_ResetInstallmentCountCopyWith<$Res> {
  __$$_ResetInstallmentCountCopyWithImpl(_$_ResetInstallmentCount _value,
      $Res Function(_$_ResetInstallmentCount) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_ResetInstallmentCount implements _ResetInstallmentCount {
  const _$_ResetInstallmentCount();

  @override
  String toString() {
    return 'RdCustomerEvent.resetInstallmentCount()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_ResetInstallmentCount);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return resetInstallmentCount();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return resetInstallmentCount?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (resetInstallmentCount != null) {
      return resetInstallmentCount();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return resetInstallmentCount(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return resetInstallmentCount?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (resetInstallmentCount != null) {
      return resetInstallmentCount(this);
    }
    return orElse();
  }
}

abstract class _ResetInstallmentCount implements RdCustomerEvent {
  const factory _ResetInstallmentCount() = _$_ResetInstallmentCount;
}

/// @nodoc
abstract class _$$_SetDropDownBankToInitialCopyWith<$Res> {
  factory _$$_SetDropDownBankToInitialCopyWith(
          _$_SetDropDownBankToInitial value,
          $Res Function(_$_SetDropDownBankToInitial) then) =
      __$$_SetDropDownBankToInitialCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_SetDropDownBankToInitialCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_SetDropDownBankToInitial>
    implements _$$_SetDropDownBankToInitialCopyWith<$Res> {
  __$$_SetDropDownBankToInitialCopyWithImpl(_$_SetDropDownBankToInitial _value,
      $Res Function(_$_SetDropDownBankToInitial) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_SetDropDownBankToInitial implements _SetDropDownBankToInitial {
  const _$_SetDropDownBankToInitial();

  @override
  String toString() {
    return 'RdCustomerEvent.setDropDownBankToInitial()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_SetDropDownBankToInitial);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return setDropDownBankToInitial();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return setDropDownBankToInitial?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (setDropDownBankToInitial != null) {
      return setDropDownBankToInitial();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return setDropDownBankToInitial(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return setDropDownBankToInitial?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (setDropDownBankToInitial != null) {
      return setDropDownBankToInitial(this);
    }
    return orElse();
  }
}

abstract class _SetDropDownBankToInitial implements RdCustomerEvent {
  const factory _SetDropDownBankToInitial() = _$_SetDropDownBankToInitial;
}

/// @nodoc
abstract class _$$_ClearSubsidiaryBankCopyWith<$Res> {
  factory _$$_ClearSubsidiaryBankCopyWith(_$_ClearSubsidiaryBank value,
          $Res Function(_$_ClearSubsidiaryBank) then) =
      __$$_ClearSubsidiaryBankCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_ClearSubsidiaryBankCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_ClearSubsidiaryBank>
    implements _$$_ClearSubsidiaryBankCopyWith<$Res> {
  __$$_ClearSubsidiaryBankCopyWithImpl(_$_ClearSubsidiaryBank _value,
      $Res Function(_$_ClearSubsidiaryBank) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_ClearSubsidiaryBank implements _ClearSubsidiaryBank {
  const _$_ClearSubsidiaryBank();

  @override
  String toString() {
    return 'RdCustomerEvent.clearSubsidiaryBank()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$_ClearSubsidiaryBank);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return clearSubsidiaryBank();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return clearSubsidiaryBank?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (clearSubsidiaryBank != null) {
      return clearSubsidiaryBank();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return clearSubsidiaryBank(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return clearSubsidiaryBank?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (clearSubsidiaryBank != null) {
      return clearSubsidiaryBank(this);
    }
    return orElse();
  }
}

abstract class _ClearSubsidiaryBank implements RdCustomerEvent {
  const factory _ClearSubsidiaryBank() = _$_ClearSubsidiaryBank;
}

/// @nodoc
abstract class _$$_RdfetchPaymentCardsCopyWith<$Res> {
  factory _$$_RdfetchPaymentCardsCopyWith(_$_RdfetchPaymentCards value,
          $Res Function(_$_RdfetchPaymentCards) then) =
      __$$_RdfetchPaymentCardsCopyWithImpl<$Res>;
  @useResult
  $Res call({String userType, String paymentType});
}

/// @nodoc
class __$$_RdfetchPaymentCardsCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdfetchPaymentCards>
    implements _$$_RdfetchPaymentCardsCopyWith<$Res> {
  __$$_RdfetchPaymentCardsCopyWithImpl(_$_RdfetchPaymentCards _value,
      $Res Function(_$_RdfetchPaymentCards) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? userType = null,
    Object? paymentType = null,
  }) {
    return _then(_$_RdfetchPaymentCards(
      userType: null == userType
          ? _value.userType
          : userType // ignore: cast_nullable_to_non_nullable
              as String,
      paymentType: null == paymentType
          ? _value.paymentType
          : paymentType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_RdfetchPaymentCards implements _RdfetchPaymentCards {
  const _$_RdfetchPaymentCards(
      {required this.userType, required this.paymentType});

  @override
  final String userType;
  @override
  final String paymentType;

  @override
  String toString() {
    return 'RdCustomerEvent.rdfetchPaymentCards(userType: $userType, paymentType: $paymentType)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RdfetchPaymentCards &&
            (identical(other.userType, userType) ||
                other.userType == userType) &&
            (identical(other.paymentType, paymentType) ||
                other.paymentType == paymentType));
  }

  @override
  int get hashCode => Object.hash(runtimeType, userType, paymentType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdfetchPaymentCardsCopyWith<_$_RdfetchPaymentCards> get copyWith =>
      __$$_RdfetchPaymentCardsCopyWithImpl<_$_RdfetchPaymentCards>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdfetchPaymentCards(userType, paymentType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdfetchPaymentCards?.call(userType, paymentType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdfetchPaymentCards != null) {
      return rdfetchPaymentCards(userType, paymentType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdfetchPaymentCards(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdfetchPaymentCards?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdfetchPaymentCards != null) {
      return rdfetchPaymentCards(this);
    }
    return orElse();
  }
}

abstract class _RdfetchPaymentCards implements RdCustomerEvent {
  const factory _RdfetchPaymentCards(
      {required final String userType,
      required final String paymentType}) = _$_RdfetchPaymentCards;

  String get userType;
  String get paymentType;
  @JsonKey(ignore: true)
  _$$_RdfetchPaymentCardsCopyWith<_$_RdfetchPaymentCards> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_RdAccountCardChangedCopyWith<$Res> {
  factory _$$_RdAccountCardChangedCopyWith(_$_RdAccountCardChanged value,
          $Res Function(_$_RdAccountCardChanged) then) =
      __$$_RdAccountCardChangedCopyWithImpl<$Res>;
  @useResult
  $Res call({int? rdAccountCardIndex});
}

/// @nodoc
class __$$_RdAccountCardChangedCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdAccountCardChanged>
    implements _$$_RdAccountCardChangedCopyWith<$Res> {
  __$$_RdAccountCardChangedCopyWithImpl(_$_RdAccountCardChanged _value,
      $Res Function(_$_RdAccountCardChanged) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? rdAccountCardIndex = freezed,
  }) {
    return _then(_$_RdAccountCardChanged(
      rdAccountCardIndex: freezed == rdAccountCardIndex
          ? _value.rdAccountCardIndex
          : rdAccountCardIndex // ignore: cast_nullable_to_non_nullable
              as int?,
    ));
  }
}

/// @nodoc

class _$_RdAccountCardChanged implements _RdAccountCardChanged {
  const _$_RdAccountCardChanged({required this.rdAccountCardIndex});

  @override
  final int? rdAccountCardIndex;

  @override
  String toString() {
    return 'RdCustomerEvent.rdAccountCardChanged(rdAccountCardIndex: $rdAccountCardIndex)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RdAccountCardChanged &&
            (identical(other.rdAccountCardIndex, rdAccountCardIndex) ||
                other.rdAccountCardIndex == rdAccountCardIndex));
  }

  @override
  int get hashCode => Object.hash(runtimeType, rdAccountCardIndex);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdAccountCardChangedCopyWith<_$_RdAccountCardChanged> get copyWith =>
      __$$_RdAccountCardChangedCopyWithImpl<_$_RdAccountCardChanged>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdAccountCardChanged(rdAccountCardIndex);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdAccountCardChanged?.call(rdAccountCardIndex);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdAccountCardChanged != null) {
      return rdAccountCardChanged(rdAccountCardIndex);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdAccountCardChanged(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdAccountCardChanged?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdAccountCardChanged != null) {
      return rdAccountCardChanged(this);
    }
    return orElse();
  }
}

abstract class _RdAccountCardChanged implements RdCustomerEvent {
  const factory _RdAccountCardChanged(
      {required final int? rdAccountCardIndex}) = _$_RdAccountCardChanged;

  int? get rdAccountCardIndex;
  @JsonKey(ignore: true)
  _$$_RdAccountCardChangedCopyWith<_$_RdAccountCardChanged> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_RdStatementDetailsCopyWith<$Res> {
  factory _$$_RdStatementDetailsCopyWith(_$_RdStatementDetails value,
          $Res Function(_$_RdStatementDetails) then) =
      __$$_RdStatementDetailsCopyWithImpl<$Res>;
  @useResult
  $Res call({String customerId});
}

/// @nodoc
class __$$_RdStatementDetailsCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdStatementDetails>
    implements _$$_RdStatementDetailsCopyWith<$Res> {
  __$$_RdStatementDetailsCopyWithImpl(
      _$_RdStatementDetails _value, $Res Function(_$_RdStatementDetails) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? customerId = null,
  }) {
    return _then(_$_RdStatementDetails(
      customerId: null == customerId
          ? _value.customerId
          : customerId // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_RdStatementDetails implements _RdStatementDetails {
  const _$_RdStatementDetails({required this.customerId});

  @override
  final String customerId;

  @override
  String toString() {
    return 'RdCustomerEvent.rdStatementDetails(customerId: $customerId)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RdStatementDetails &&
            (identical(other.customerId, customerId) ||
                other.customerId == customerId));
  }

  @override
  int get hashCode => Object.hash(runtimeType, customerId);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdStatementDetailsCopyWith<_$_RdStatementDetails> get copyWith =>
      __$$_RdStatementDetailsCopyWithImpl<_$_RdStatementDetails>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdStatementDetails(customerId);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdStatementDetails?.call(customerId);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdStatementDetails != null) {
      return rdStatementDetails(customerId);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdStatementDetails(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdStatementDetails?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdStatementDetails != null) {
      return rdStatementDetails(this);
    }
    return orElse();
  }
}

abstract class _RdStatementDetails implements RdCustomerEvent {
  const factory _RdStatementDetails({required final String customerId}) =
      _$_RdStatementDetails;

  String get customerId;
  @JsonKey(ignore: true)
  _$$_RdStatementDetailsCopyWith<_$_RdStatementDetails> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_RdStatementInfoCopyWith<$Res> {
  factory _$$_RdStatementInfoCopyWith(
          _$_RdStatementInfo value, $Res Function(_$_RdStatementInfo) then) =
      __$$_RdStatementInfoCopyWithImpl<$Res>;
  @useResult
  $Res call({String documentId, String fromDate});
}

/// @nodoc
class __$$_RdStatementInfoCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdStatementInfo>
    implements _$$_RdStatementInfoCopyWith<$Res> {
  __$$_RdStatementInfoCopyWithImpl(
      _$_RdStatementInfo _value, $Res Function(_$_RdStatementInfo) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? documentId = null,
    Object? fromDate = null,
  }) {
    return _then(_$_RdStatementInfo(
      documentId: null == documentId
          ? _value.documentId
          : documentId // ignore: cast_nullable_to_non_nullable
              as String,
      fromDate: null == fromDate
          ? _value.fromDate
          : fromDate // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_RdStatementInfo implements _RdStatementInfo {
  const _$_RdStatementInfo({required this.documentId, required this.fromDate});

  @override
  final String documentId;
  @override
  final String fromDate;

  @override
  String toString() {
    return 'RdCustomerEvent.rdStatementInfo(documentId: $documentId, fromDate: $fromDate)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RdStatementInfo &&
            (identical(other.documentId, documentId) ||
                other.documentId == documentId) &&
            (identical(other.fromDate, fromDate) ||
                other.fromDate == fromDate));
  }

  @override
  int get hashCode => Object.hash(runtimeType, documentId, fromDate);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdStatementInfoCopyWith<_$_RdStatementInfo> get copyWith =>
      __$$_RdStatementInfoCopyWithImpl<_$_RdStatementInfo>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdStatementInfo(documentId, fromDate);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdStatementInfo?.call(documentId, fromDate);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdStatementInfo != null) {
      return rdStatementInfo(documentId, fromDate);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdStatementInfo(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdStatementInfo?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdStatementInfo != null) {
      return rdStatementInfo(this);
    }
    return orElse();
  }
}

abstract class _RdStatementInfo implements RdCustomerEvent {
  const factory _RdStatementInfo(
      {required final String documentId,
      required final String fromDate}) = _$_RdStatementInfo;

  String get documentId;
  String get fromDate;
  @JsonKey(ignore: true)
  _$$_RdStatementInfoCopyWith<_$_RdStatementInfo> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_RdStatementTransactionCopyWith<$Res> {
  factory _$$_RdStatementTransactionCopyWith(_$_RdStatementTransaction value,
          $Res Function(_$_RdStatementTransaction) then) =
      __$$_RdStatementTransactionCopyWithImpl<$Res>;
  @useResult
  $Res call({String accountNumber, String fromDate, String toDate});
}

/// @nodoc
class __$$_RdStatementTransactionCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdStatementTransaction>
    implements _$$_RdStatementTransactionCopyWith<$Res> {
  __$$_RdStatementTransactionCopyWithImpl(_$_RdStatementTransaction _value,
      $Res Function(_$_RdStatementTransaction) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? accountNumber = null,
    Object? fromDate = null,
    Object? toDate = null,
  }) {
    return _then(_$_RdStatementTransaction(
      accountNumber: null == accountNumber
          ? _value.accountNumber
          : accountNumber // ignore: cast_nullable_to_non_nullable
              as String,
      fromDate: null == fromDate
          ? _value.fromDate
          : fromDate // ignore: cast_nullable_to_non_nullable
              as String,
      toDate: null == toDate
          ? _value.toDate
          : toDate // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_RdStatementTransaction implements _RdStatementTransaction {
  const _$_RdStatementTransaction(
      {required this.accountNumber,
      required this.fromDate,
      required this.toDate});

  @override
  final String accountNumber;
  @override
  final String fromDate;
  @override
  final String toDate;

  @override
  String toString() {
    return 'RdCustomerEvent.rdStatementTransaction(accountNumber: $accountNumber, fromDate: $fromDate, toDate: $toDate)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RdStatementTransaction &&
            (identical(other.accountNumber, accountNumber) ||
                other.accountNumber == accountNumber) &&
            (identical(other.fromDate, fromDate) ||
                other.fromDate == fromDate) &&
            (identical(other.toDate, toDate) || other.toDate == toDate));
  }

  @override
  int get hashCode => Object.hash(runtimeType, accountNumber, fromDate, toDate);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdStatementTransactionCopyWith<_$_RdStatementTransaction> get copyWith =>
      __$$_RdStatementTransactionCopyWithImpl<_$_RdStatementTransaction>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdStatementTransaction(accountNumber, fromDate, toDate);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdStatementTransaction?.call(accountNumber, fromDate, toDate);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdStatementTransaction != null) {
      return rdStatementTransaction(accountNumber, fromDate, toDate);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdStatementTransaction(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdStatementTransaction?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdStatementTransaction != null) {
      return rdStatementTransaction(this);
    }
    return orElse();
  }
}

abstract class _RdStatementTransaction implements RdCustomerEvent {
  const factory _RdStatementTransaction(
      {required final String accountNumber,
      required final String fromDate,
      required final String toDate}) = _$_RdStatementTransaction;

  String get accountNumber;
  String get fromDate;
  String get toDate;
  @JsonKey(ignore: true)
  _$$_RdStatementTransactionCopyWith<_$_RdStatementTransaction> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_StoreRdStatementTransactionsCopyWith<$Res> {
  factory _$$_StoreRdStatementTransactionsCopyWith(
          _$_StoreRdStatementTransactions value,
          $Res Function(_$_StoreRdStatementTransactions) then) =
      __$$_StoreRdStatementTransactionsCopyWithImpl<$Res>;
  @useResult
  $Res call(
      {double debitTotal,
      double creditTotal,
      List<UpdatedRdStatementTransactions> updatedRdStatementTransactions});
}

/// @nodoc
class __$$_StoreRdStatementTransactionsCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_StoreRdStatementTransactions>
    implements _$$_StoreRdStatementTransactionsCopyWith<$Res> {
  __$$_StoreRdStatementTransactionsCopyWithImpl(
      _$_StoreRdStatementTransactions _value,
      $Res Function(_$_StoreRdStatementTransactions) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? debitTotal = null,
    Object? creditTotal = null,
    Object? updatedRdStatementTransactions = null,
  }) {
    return _then(_$_StoreRdStatementTransactions(
      debitTotal: null == debitTotal
          ? _value.debitTotal
          : debitTotal // ignore: cast_nullable_to_non_nullable
              as double,
      creditTotal: null == creditTotal
          ? _value.creditTotal
          : creditTotal // ignore: cast_nullable_to_non_nullable
              as double,
      updatedRdStatementTransactions: null == updatedRdStatementTransactions
          ? _value._updatedRdStatementTransactions
          : updatedRdStatementTransactions // ignore: cast_nullable_to_non_nullable
              as List<UpdatedRdStatementTransactions>,
    ));
  }
}

/// @nodoc

class _$_StoreRdStatementTransactions implements _StoreRdStatementTransactions {
  const _$_StoreRdStatementTransactions(
      {required this.debitTotal,
      required this.creditTotal,
      required final List<UpdatedRdStatementTransactions>
          updatedRdStatementTransactions})
      : _updatedRdStatementTransactions = updatedRdStatementTransactions;

  @override
  final double debitTotal;
  @override
  final double creditTotal;
  final List<UpdatedRdStatementTransactions> _updatedRdStatementTransactions;
  @override
  List<UpdatedRdStatementTransactions> get updatedRdStatementTransactions {
    if (_updatedRdStatementTransactions is EqualUnmodifiableListView)
      return _updatedRdStatementTransactions;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_updatedRdStatementTransactions);
  }

  @override
  String toString() {
    return 'RdCustomerEvent.storeRdStatementTransactions(debitTotal: $debitTotal, creditTotal: $creditTotal, updatedRdStatementTransactions: $updatedRdStatementTransactions)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_StoreRdStatementTransactions &&
            (identical(other.debitTotal, debitTotal) ||
                other.debitTotal == debitTotal) &&
            (identical(other.creditTotal, creditTotal) ||
                other.creditTotal == creditTotal) &&
            const DeepCollectionEquality().equals(
                other._updatedRdStatementTransactions,
                _updatedRdStatementTransactions));
  }

  @override
  int get hashCode => Object.hash(runtimeType, debitTotal, creditTotal,
      const DeepCollectionEquality().hash(_updatedRdStatementTransactions));

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_StoreRdStatementTransactionsCopyWith<_$_StoreRdStatementTransactions>
      get copyWith => __$$_StoreRdStatementTransactionsCopyWithImpl<
          _$_StoreRdStatementTransactions>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return storeRdStatementTransactions(
        debitTotal, creditTotal, updatedRdStatementTransactions);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return storeRdStatementTransactions?.call(
        debitTotal, creditTotal, updatedRdStatementTransactions);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (storeRdStatementTransactions != null) {
      return storeRdStatementTransactions(
          debitTotal, creditTotal, updatedRdStatementTransactions);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return storeRdStatementTransactions(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return storeRdStatementTransactions?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (storeRdStatementTransactions != null) {
      return storeRdStatementTransactions(this);
    }
    return orElse();
  }
}

abstract class _StoreRdStatementTransactions implements RdCustomerEvent {
  const factory _StoreRdStatementTransactions(
      {required final double debitTotal,
      required final double creditTotal,
      required final List<UpdatedRdStatementTransactions>
          updatedRdStatementTransactions}) = _$_StoreRdStatementTransactions;

  double get debitTotal;
  double get creditTotal;
  List<UpdatedRdStatementTransactions> get updatedRdStatementTransactions;
  @JsonKey(ignore: true)
  _$$_StoreRdStatementTransactionsCopyWith<_$_StoreRdStatementTransactions>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_FetchRdCustomerAccountMoreInfoCopyWith<$Res> {
  factory _$$_FetchRdCustomerAccountMoreInfoCopyWith(
          _$_FetchRdCustomerAccountMoreInfo value,
          $Res Function(_$_FetchRdCustomerAccountMoreInfo) then) =
      __$$_FetchRdCustomerAccountMoreInfoCopyWithImpl<$Res>;
  @useResult
  $Res call({String documentId});
}

/// @nodoc
class __$$_FetchRdCustomerAccountMoreInfoCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res,
        _$_FetchRdCustomerAccountMoreInfo>
    implements _$$_FetchRdCustomerAccountMoreInfoCopyWith<$Res> {
  __$$_FetchRdCustomerAccountMoreInfoCopyWithImpl(
      _$_FetchRdCustomerAccountMoreInfo _value,
      $Res Function(_$_FetchRdCustomerAccountMoreInfo) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? documentId = null,
  }) {
    return _then(_$_FetchRdCustomerAccountMoreInfo(
      documentId: null == documentId
          ? _value.documentId
          : documentId // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_FetchRdCustomerAccountMoreInfo
    implements _FetchRdCustomerAccountMoreInfo {
  const _$_FetchRdCustomerAccountMoreInfo({required this.documentId});

  @override
  final String documentId;

  @override
  String toString() {
    return 'RdCustomerEvent.fetchRdCustomerAccountMoreInfo(documentId: $documentId)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_FetchRdCustomerAccountMoreInfo &&
            (identical(other.documentId, documentId) ||
                other.documentId == documentId));
  }

  @override
  int get hashCode => Object.hash(runtimeType, documentId);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_FetchRdCustomerAccountMoreInfoCopyWith<_$_FetchRdCustomerAccountMoreInfo>
      get copyWith => __$$_FetchRdCustomerAccountMoreInfoCopyWithImpl<
          _$_FetchRdCustomerAccountMoreInfo>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return fetchRdCustomerAccountMoreInfo(documentId);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return fetchRdCustomerAccountMoreInfo?.call(documentId);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchRdCustomerAccountMoreInfo != null) {
      return fetchRdCustomerAccountMoreInfo(documentId);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return fetchRdCustomerAccountMoreInfo(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return fetchRdCustomerAccountMoreInfo?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (fetchRdCustomerAccountMoreInfo != null) {
      return fetchRdCustomerAccountMoreInfo(this);
    }
    return orElse();
  }
}

abstract class _FetchRdCustomerAccountMoreInfo implements RdCustomerEvent {
  const factory _FetchRdCustomerAccountMoreInfo(
      {required final String documentId}) = _$_FetchRdCustomerAccountMoreInfo;

  String get documentId;
  @JsonKey(ignore: true)
  _$$_FetchRdCustomerAccountMoreInfoCopyWith<_$_FetchRdCustomerAccountMoreInfo>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_RdPaymentCardChangedCopyWith<$Res> {
  factory _$$_RdPaymentCardChangedCopyWith(_$_RdPaymentCardChanged value,
          $Res Function(_$_RdPaymentCardChanged) then) =
      __$$_RdPaymentCardChangedCopyWithImpl<$Res>;
  @useResult
  $Res call({int? rdPaymentCardIndex});
}

/// @nodoc
class __$$_RdPaymentCardChangedCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdPaymentCardChanged>
    implements _$$_RdPaymentCardChangedCopyWith<$Res> {
  __$$_RdPaymentCardChangedCopyWithImpl(_$_RdPaymentCardChanged _value,
      $Res Function(_$_RdPaymentCardChanged) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? rdPaymentCardIndex = freezed,
  }) {
    return _then(_$_RdPaymentCardChanged(
      rdPaymentCardIndex: freezed == rdPaymentCardIndex
          ? _value.rdPaymentCardIndex
          : rdPaymentCardIndex // ignore: cast_nullable_to_non_nullable
              as int?,
    ));
  }
}

/// @nodoc

class _$_RdPaymentCardChanged implements _RdPaymentCardChanged {
  const _$_RdPaymentCardChanged({required this.rdPaymentCardIndex});

  @override
  final int? rdPaymentCardIndex;

  @override
  String toString() {
    return 'RdCustomerEvent.rdPaymentCardChanged(rdPaymentCardIndex: $rdPaymentCardIndex)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RdPaymentCardChanged &&
            (identical(other.rdPaymentCardIndex, rdPaymentCardIndex) ||
                other.rdPaymentCardIndex == rdPaymentCardIndex));
  }

  @override
  int get hashCode => Object.hash(runtimeType, rdPaymentCardIndex);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdPaymentCardChangedCopyWith<_$_RdPaymentCardChanged> get copyWith =>
      __$$_RdPaymentCardChangedCopyWithImpl<_$_RdPaymentCardChanged>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdPaymentCardChanged(rdPaymentCardIndex);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdPaymentCardChanged?.call(rdPaymentCardIndex);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdPaymentCardChanged != null) {
      return rdPaymentCardChanged(rdPaymentCardIndex);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdPaymentCardChanged(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdPaymentCardChanged?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdPaymentCardChanged != null) {
      return rdPaymentCardChanged(this);
    }
    return orElse();
  }
}

abstract class _RdPaymentCardChanged implements RdCustomerEvent {
  const factory _RdPaymentCardChanged(
      {required final int? rdPaymentCardIndex}) = _$_RdPaymentCardChanged;

  int? get rdPaymentCardIndex;
  @JsonKey(ignore: true)
  _$$_RdPaymentCardChangedCopyWith<_$_RdPaymentCardChanged> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_rdSetDropDownBankToInitialCopyWith<$Res> {
  factory _$$_rdSetDropDownBankToInitialCopyWith(
          _$_rdSetDropDownBankToInitial value,
          $Res Function(_$_rdSetDropDownBankToInitial) then) =
      __$$_rdSetDropDownBankToInitialCopyWithImpl<$Res>;
}

/// @nodoc
class __$$_rdSetDropDownBankToInitialCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_rdSetDropDownBankToInitial>
    implements _$$_rdSetDropDownBankToInitialCopyWith<$Res> {
  __$$_rdSetDropDownBankToInitialCopyWithImpl(
      _$_rdSetDropDownBankToInitial _value,
      $Res Function(_$_rdSetDropDownBankToInitial) _then)
      : super(_value, _then);
}

/// @nodoc

class _$_rdSetDropDownBankToInitial implements _rdSetDropDownBankToInitial {
  const _$_rdSetDropDownBankToInitial();

  @override
  String toString() {
    return 'RdCustomerEvent.rdSetDropDownBankToInitial()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_rdSetDropDownBankToInitial);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdSetDropDownBankToInitial();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdSetDropDownBankToInitial?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdSetDropDownBankToInitial != null) {
      return rdSetDropDownBankToInitial();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdSetDropDownBankToInitial(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdSetDropDownBankToInitial?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdSetDropDownBankToInitial != null) {
      return rdSetDropDownBankToInitial(this);
    }
    return orElse();
  }
}

abstract class _rdSetDropDownBankToInitial implements RdCustomerEvent {
  const factory _rdSetDropDownBankToInitial() = _$_rdSetDropDownBankToInitial;
}

/// @nodoc
abstract class _$$_RDTranscationCardChangedCopyWith<$Res> {
  factory _$$_RDTranscationCardChangedCopyWith(
          _$_RDTranscationCardChanged value,
          $Res Function(_$_RDTranscationCardChanged) then) =
      __$$_RDTranscationCardChangedCopyWithImpl<$Res>;
  @useResult
  $Res call({int transcationCardindex});
}

/// @nodoc
class __$$_RDTranscationCardChangedCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RDTranscationCardChanged>
    implements _$$_RDTranscationCardChangedCopyWith<$Res> {
  __$$_RDTranscationCardChangedCopyWithImpl(_$_RDTranscationCardChanged _value,
      $Res Function(_$_RDTranscationCardChanged) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? transcationCardindex = null,
  }) {
    return _then(_$_RDTranscationCardChanged(
      transcationCardindex: null == transcationCardindex
          ? _value.transcationCardindex
          : transcationCardindex // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$_RDTranscationCardChanged implements _RDTranscationCardChanged {
  const _$_RDTranscationCardChanged({required this.transcationCardindex});

  @override
  final int transcationCardindex;

  @override
  String toString() {
    return 'RdCustomerEvent.rdtranscationCardChanged(transcationCardindex: $transcationCardindex)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RDTranscationCardChanged &&
            (identical(other.transcationCardindex, transcationCardindex) ||
                other.transcationCardindex == transcationCardindex));
  }

  @override
  int get hashCode => Object.hash(runtimeType, transcationCardindex);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RDTranscationCardChangedCopyWith<_$_RDTranscationCardChanged>
      get copyWith => __$$_RDTranscationCardChangedCopyWithImpl<
          _$_RDTranscationCardChanged>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdtranscationCardChanged(transcationCardindex);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdtranscationCardChanged?.call(transcationCardindex);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdtranscationCardChanged != null) {
      return rdtranscationCardChanged(transcationCardindex);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdtranscationCardChanged(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdtranscationCardChanged?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdtranscationCardChanged != null) {
      return rdtranscationCardChanged(this);
    }
    return orElse();
  }
}

abstract class _RDTranscationCardChanged implements RdCustomerEvent {
  const factory _RDTranscationCardChanged(
      {required final int transcationCardindex}) = _$_RDTranscationCardChanged;

  int get transcationCardindex;
  @JsonKey(ignore: true)
  _$$_RDTranscationCardChangedCopyWith<_$_RDTranscationCardChanged>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_RdsettlementsCopyWith<$Res> {
  factory _$$_RdsettlementsCopyWith(
          _$_Rdsettlements value, $Res Function(_$_Rdsettlements) then) =
      __$$_RdsettlementsCopyWithImpl<$Res>;
  @useResult
  $Res call(
      {String? customerId,
      String? accountNumber,
      String? transactionType,
      double interestTransferred,
      int branchId,
      int firmId,
      int branchBankId,
      String chequeNumber,
      String customerBank,
      String subsidiaryBankName,
      int subsidiaryBankAccountNo,
      String employeeCode,
      String customerName,
      String realizationDate,
      String jwtToken});
}

/// @nodoc
class __$$_RdsettlementsCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_Rdsettlements>
    implements _$$_RdsettlementsCopyWith<$Res> {
  __$$_RdsettlementsCopyWithImpl(
      _$_Rdsettlements _value, $Res Function(_$_Rdsettlements) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? customerId = freezed,
    Object? accountNumber = freezed,
    Object? transactionType = freezed,
    Object? interestTransferred = null,
    Object? branchId = null,
    Object? firmId = null,
    Object? branchBankId = null,
    Object? chequeNumber = null,
    Object? customerBank = null,
    Object? subsidiaryBankName = null,
    Object? subsidiaryBankAccountNo = null,
    Object? employeeCode = null,
    Object? customerName = null,
    Object? realizationDate = null,
    Object? jwtToken = null,
  }) {
    return _then(_$_Rdsettlements(
      customerId: freezed == customerId
          ? _value.customerId
          : customerId // ignore: cast_nullable_to_non_nullable
              as String?,
      accountNumber: freezed == accountNumber
          ? _value.accountNumber
          : accountNumber // ignore: cast_nullable_to_non_nullable
              as String?,
      transactionType: freezed == transactionType
          ? _value.transactionType
          : transactionType // ignore: cast_nullable_to_non_nullable
              as String?,
      interestTransferred: null == interestTransferred
          ? _value.interestTransferred
          : interestTransferred // ignore: cast_nullable_to_non_nullable
              as double,
      branchId: null == branchId
          ? _value.branchId
          : branchId // ignore: cast_nullable_to_non_nullable
              as int,
      firmId: null == firmId
          ? _value.firmId
          : firmId // ignore: cast_nullable_to_non_nullable
              as int,
      branchBankId: null == branchBankId
          ? _value.branchBankId
          : branchBankId // ignore: cast_nullable_to_non_nullable
              as int,
      chequeNumber: null == chequeNumber
          ? _value.chequeNumber
          : chequeNumber // ignore: cast_nullable_to_non_nullable
              as String,
      customerBank: null == customerBank
          ? _value.customerBank
          : customerBank // ignore: cast_nullable_to_non_nullable
              as String,
      subsidiaryBankName: null == subsidiaryBankName
          ? _value.subsidiaryBankName
          : subsidiaryBankName // ignore: cast_nullable_to_non_nullable
              as String,
      subsidiaryBankAccountNo: null == subsidiaryBankAccountNo
          ? _value.subsidiaryBankAccountNo
          : subsidiaryBankAccountNo // ignore: cast_nullable_to_non_nullable
              as int,
      employeeCode: null == employeeCode
          ? _value.employeeCode
          : employeeCode // ignore: cast_nullable_to_non_nullable
              as String,
      customerName: null == customerName
          ? _value.customerName
          : customerName // ignore: cast_nullable_to_non_nullable
              as String,
      realizationDate: null == realizationDate
          ? _value.realizationDate
          : realizationDate // ignore: cast_nullable_to_non_nullable
              as String,
      jwtToken: null == jwtToken
          ? _value.jwtToken
          : jwtToken // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_Rdsettlements implements _Rdsettlements {
  const _$_Rdsettlements(
      {required this.customerId,
      required this.accountNumber,
      required this.transactionType,
      required this.interestTransferred,
      required this.branchId,
      required this.firmId,
      required this.branchBankId,
      required this.chequeNumber,
      required this.customerBank,
      required this.subsidiaryBankName,
      required this.subsidiaryBankAccountNo,
      required this.employeeCode,
      required this.customerName,
      required this.realizationDate,
      required this.jwtToken});

  @override
  final String? customerId;
  @override
  final String? accountNumber;
  @override
  final String? transactionType;
  @override
  final double interestTransferred;
//required String loginToken,
  @override
  final int branchId;
  @override
  final int firmId;
  @override
  final int branchBankId;
  @override
  final String chequeNumber;
  @override
  final String customerBank;
  @override
  final String subsidiaryBankName;
  @override
  final int subsidiaryBankAccountNo;
  @override
  final String employeeCode;
  @override
  final String customerName;
  @override
  final String realizationDate;
  @override
  final String jwtToken;

  @override
  String toString() {
    return 'RdCustomerEvent.rdsettlements(customerId: $customerId, accountNumber: $accountNumber, transactionType: $transactionType, interestTransferred: $interestTransferred, branchId: $branchId, firmId: $firmId, branchBankId: $branchBankId, chequeNumber: $chequeNumber, customerBank: $customerBank, subsidiaryBankName: $subsidiaryBankName, subsidiaryBankAccountNo: $subsidiaryBankAccountNo, employeeCode: $employeeCode, customerName: $customerName, realizationDate: $realizationDate, jwtToken: $jwtToken)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_Rdsettlements &&
            (identical(other.customerId, customerId) ||
                other.customerId == customerId) &&
            (identical(other.accountNumber, accountNumber) ||
                other.accountNumber == accountNumber) &&
            (identical(other.transactionType, transactionType) ||
                other.transactionType == transactionType) &&
            (identical(other.interestTransferred, interestTransferred) ||
                other.interestTransferred == interestTransferred) &&
            (identical(other.branchId, branchId) ||
                other.branchId == branchId) &&
            (identical(other.firmId, firmId) || other.firmId == firmId) &&
            (identical(other.branchBankId, branchBankId) ||
                other.branchBankId == branchBankId) &&
            (identical(other.chequeNumber, chequeNumber) ||
                other.chequeNumber == chequeNumber) &&
            (identical(other.customerBank, customerBank) ||
                other.customerBank == customerBank) &&
            (identical(other.subsidiaryBankName, subsidiaryBankName) ||
                other.subsidiaryBankName == subsidiaryBankName) &&
            (identical(
                    other.subsidiaryBankAccountNo, subsidiaryBankAccountNo) ||
                other.subsidiaryBankAccountNo == subsidiaryBankAccountNo) &&
            (identical(other.employeeCode, employeeCode) ||
                other.employeeCode == employeeCode) &&
            (identical(other.customerName, customerName) ||
                other.customerName == customerName) &&
            (identical(other.realizationDate, realizationDate) ||
                other.realizationDate == realizationDate) &&
            (identical(other.jwtToken, jwtToken) ||
                other.jwtToken == jwtToken));
  }

  @override
  int get hashCode => Object.hash(
      runtimeType,
      customerId,
      accountNumber,
      transactionType,
      interestTransferred,
      branchId,
      firmId,
      branchBankId,
      chequeNumber,
      customerBank,
      subsidiaryBankName,
      subsidiaryBankAccountNo,
      employeeCode,
      customerName,
      realizationDate,
      jwtToken);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdsettlementsCopyWith<_$_Rdsettlements> get copyWith =>
      __$$_RdsettlementsCopyWithImpl<_$_Rdsettlements>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdsettlements(
        customerId,
        accountNumber,
        transactionType,
        interestTransferred,
        branchId,
        firmId,
        branchBankId,
        chequeNumber,
        customerBank,
        subsidiaryBankName,
        subsidiaryBankAccountNo,
        employeeCode,
        customerName,
        realizationDate,
        jwtToken);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdsettlements?.call(
        customerId,
        accountNumber,
        transactionType,
        interestTransferred,
        branchId,
        firmId,
        branchBankId,
        chequeNumber,
        customerBank,
        subsidiaryBankName,
        subsidiaryBankAccountNo,
        employeeCode,
        customerName,
        realizationDate,
        jwtToken);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdsettlements != null) {
      return rdsettlements(
          customerId,
          accountNumber,
          transactionType,
          interestTransferred,
          branchId,
          firmId,
          branchBankId,
          chequeNumber,
          customerBank,
          subsidiaryBankName,
          subsidiaryBankAccountNo,
          employeeCode,
          customerName,
          realizationDate,
          jwtToken);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdsettlements(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdsettlements?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdsettlements != null) {
      return rdsettlements(this);
    }
    return orElse();
  }
}

abstract class _Rdsettlements implements RdCustomerEvent {
  const factory _Rdsettlements(
      {required final String? customerId,
      required final String? accountNumber,
      required final String? transactionType,
      required final double interestTransferred,
      required final int branchId,
      required final int firmId,
      required final int branchBankId,
      required final String chequeNumber,
      required final String customerBank,
      required final String subsidiaryBankName,
      required final int subsidiaryBankAccountNo,
      required final String employeeCode,
      required final String customerName,
      required final String realizationDate,
      required final String jwtToken}) = _$_Rdsettlements;

  String? get customerId;
  String? get accountNumber;
  String? get transactionType;
  double get interestTransferred; //required String loginToken,
  int get branchId;
  int get firmId;
  int get branchBankId;
  String get chequeNumber;
  String get customerBank;
  String get subsidiaryBankName;
  int get subsidiaryBankAccountNo;
  String get employeeCode;
  String get customerName;
  String get realizationDate;
  String get jwtToken;
  @JsonKey(ignore: true)
  _$$_RdsettlementsCopyWith<_$_Rdsettlements> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_RdUpdateRealizationDateCopyWith<$Res> {
  factory _$$_RdUpdateRealizationDateCopyWith(_$_RdUpdateRealizationDate value,
          $Res Function(_$_RdUpdateRealizationDate) then) =
      __$$_RdUpdateRealizationDateCopyWithImpl<$Res>;
  @useResult
  $Res call({DateTime depositRealizationDate});
}

/// @nodoc
class __$$_RdUpdateRealizationDateCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_RdUpdateRealizationDate>
    implements _$$_RdUpdateRealizationDateCopyWith<$Res> {
  __$$_RdUpdateRealizationDateCopyWithImpl(_$_RdUpdateRealizationDate _value,
      $Res Function(_$_RdUpdateRealizationDate) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? depositRealizationDate = null,
  }) {
    return _then(_$_RdUpdateRealizationDate(
      null == depositRealizationDate
          ? _value.depositRealizationDate
          : depositRealizationDate // ignore: cast_nullable_to_non_nullable
              as DateTime,
    ));
  }
}

/// @nodoc

class _$_RdUpdateRealizationDate implements _RdUpdateRealizationDate {
  const _$_RdUpdateRealizationDate(this.depositRealizationDate);

  @override
  final DateTime depositRealizationDate;

  @override
  String toString() {
    return 'RdCustomerEvent.rdupdateRealizationDate(depositRealizationDate: $depositRealizationDate)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RdUpdateRealizationDate &&
            (identical(other.depositRealizationDate, depositRealizationDate) ||
                other.depositRealizationDate == depositRealizationDate));
  }

  @override
  int get hashCode => Object.hash(runtimeType, depositRealizationDate);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdUpdateRealizationDateCopyWith<_$_RdUpdateRealizationDate>
      get copyWith =>
          __$$_RdUpdateRealizationDateCopyWithImpl<_$_RdUpdateRealizationDate>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return rdupdateRealizationDate(depositRealizationDate);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return rdupdateRealizationDate?.call(depositRealizationDate);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdupdateRealizationDate != null) {
      return rdupdateRealizationDate(depositRealizationDate);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return rdupdateRealizationDate(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return rdupdateRealizationDate?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (rdupdateRealizationDate != null) {
      return rdupdateRealizationDate(this);
    }
    return orElse();
  }
}

abstract class _RdUpdateRealizationDate implements RdCustomerEvent {
  const factory _RdUpdateRealizationDate(
      final DateTime depositRealizationDate) = _$_RdUpdateRealizationDate;

  DateTime get depositRealizationDate;
  @JsonKey(ignore: true)
  _$$_RdUpdateRealizationDateCopyWith<_$_RdUpdateRealizationDate>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_UpdateCustomerSearchValueCopyWith<$Res> {
  factory _$$_UpdateCustomerSearchValueCopyWith(
          _$_UpdateCustomerSearchValue value,
          $Res Function(_$_UpdateCustomerSearchValue) then) =
      __$$_UpdateCustomerSearchValueCopyWithImpl<$Res>;
  @useResult
  $Res call({String searchValue, String searchType});
}

/// @nodoc
class __$$_UpdateCustomerSearchValueCopyWithImpl<$Res>
    extends _$RdCustomerEventCopyWithImpl<$Res, _$_UpdateCustomerSearchValue>
    implements _$$_UpdateCustomerSearchValueCopyWith<$Res> {
  __$$_UpdateCustomerSearchValueCopyWithImpl(
      _$_UpdateCustomerSearchValue _value,
      $Res Function(_$_UpdateCustomerSearchValue) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? searchValue = null,
    Object? searchType = null,
  }) {
    return _then(_$_UpdateCustomerSearchValue(
      searchValue: null == searchValue
          ? _value.searchValue
          : searchValue // ignore: cast_nullable_to_non_nullable
              as String,
      searchType: null == searchType
          ? _value.searchType
          : searchType // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_UpdateCustomerSearchValue implements _UpdateCustomerSearchValue {
  const _$_UpdateCustomerSearchValue(
      {required this.searchValue, required this.searchType});

  @override
  final String searchValue;
  @override
  final String searchType;

  @override
  String toString() {
    return 'RdCustomerEvent.updateCustomerSearchValue(searchValue: $searchValue, searchType: $searchType)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_UpdateCustomerSearchValue &&
            (identical(other.searchValue, searchValue) ||
                other.searchValue == searchValue) &&
            (identical(other.searchType, searchType) ||
                other.searchType == searchType));
  }

  @override
  int get hashCode => Object.hash(runtimeType, searchValue, searchType);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_UpdateCustomerSearchValueCopyWith<_$_UpdateCustomerSearchValue>
      get copyWith => __$$_UpdateCustomerSearchValueCopyWithImpl<
          _$_UpdateCustomerSearchValue>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() started,
    required TResult Function(String jwtToken) saveTokens,
    required TResult Function() rdCustomerAccountInfoPage,
    required TResult Function() rdSettlementPage,
    required TResult Function() newRdPage,
    required TResult Function() rdDepositPageEvent,
    required TResult Function() rdStatementPage,
    required TResult Function(bool rdPage) rdPage,
    required TResult Function(int branchid) getRdSchemeCardDetails,
    required TResult Function(int index) getRdSchemeCardIndex,
    required TResult Function(int rdSalesCodeValue) enableRdSalesCodeNone,
    required TResult Function(String newRdSalesCode)
        newRdValidateAgentOrEmployee,
    required TResult Function() enableEmployeeSalesCode,
    required TResult Function() enableCustomerSalesCode,
    required TResult Function(String customerId) fetchRdTaxPayer,
    required TResult Function() enableRdTaxPayer,
    required TResult Function(String jwtToken) saveToken,
    required TResult Function(String customerId) fetchCustomerAccounts,
    required TResult Function() fetchRdNomineeRelations,
    required TResult Function(String? rdNomineeRelationLabel)
        changeRdNomineeRelationLabel,
    required TResult Function(AddedNomineeModel nomineeModel) addRdNominee,
    required TResult Function(int index) removeRdNominee,
    required TResult Function() resetRdNomineeSharePercentage,
    required TResult Function(String sdNumber) storeTransferToSd,
    required TResult Function() enableTransferToSd,
    required TResult Function(int index) rdSchemeCardIndex,
    required TResult Function(String amount) newRdAmount,
    required TResult Function(double installmentAmount, double interestRate)
        calculateMaturityAmounts,
    required TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)
        rdInstallmentPeriodAndAmount,
    required TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)
        postNewRdFetchResult,
    required TResult Function(String response) newRdResponse,
    required TResult Function() resetNewRdPage,
    required TResult Function(String depositid, String customerId)
        getSettlementDetails,
    required TResult Function(
            String? usertype, String paymenttype, int moduleId)
        rdpaymentgatewaycard,
    required TResult Function(int index) selectedPaymentCard,
    required TResult Function(String status) updateSettlementResponseStatus,
    required TResult Function(int? pendingInstallment) updatePendingInstallment,
    required TResult Function(int? inDueValue) updateDueValue,
    required TResult Function(int? accountCardIndex) accountCardChanged,
    required TResult Function(int? paymentCardIndex) paymentCardChanged,
    required TResult Function() rdIncrementButton,
    required TResult Function() rdDecrementButton,
    required TResult Function(String customerId, String depositId)
        fetchRdOverDue,
    required TResult Function(
            int branchId, int? firmId, String? modeoftransaction)
        fetchRdSubsidiaryBank,
    required TResult Function(String ifscCode) fetchRdIfscCode,
    required TResult Function(double rdDepositTotalAmount,
            int rdDepositDueCount, double rdDepositDueAmount)
        updateRdDepositTotalAmount,
    required TResult Function(int index) rdaccountCardIndex,
    required TResult Function(dynamic subsidiaryBank) subsidiaryBank,
    required TResult Function(String depositChequeNumber) updateChqueNumber,
    required TResult Function(int currentDueCount, double currentDueValue)
        setDue,
    required TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)
        postRdDeposit,
    required TResult Function(DateTime depositDate) updateChequeDate,
    required TResult Function(int subsidiaryAccountNumber)
        subsidiaryAccountNumber,
    required TResult Function(int bankBranchId) updateBankBranchId,
    required TResult Function(String subsidiaryBank) updateSubsidiaryBank,
    required TResult Function() fetchIfscCode,
    required TResult Function(String ifscCode) updateIfscCode,
    required TResult Function(DateTime depositRealizationDate)
        updateRealizationDate,
    required TResult Function() resetInstallmentCount,
    required TResult Function() setDropDownBankToInitial,
    required TResult Function() clearSubsidiaryBank,
    required TResult Function(String userType, String paymentType)
        rdfetchPaymentCards,
    required TResult Function(int? rdAccountCardIndex) rdAccountCardChanged,
    required TResult Function(String customerId) rdStatementDetails,
    required TResult Function(String documentId, String fromDate)
        rdStatementInfo,
    required TResult Function(
            String accountNumber, String fromDate, String toDate)
        rdStatementTransaction,
    required TResult Function(double debitTotal, double creditTotal,
            List<UpdatedRdStatementTransactions> updatedRdStatementTransactions)
        storeRdStatementTransactions,
    required TResult Function(String documentId) fetchRdCustomerAccountMoreInfo,
    required TResult Function(int? rdPaymentCardIndex) rdPaymentCardChanged,
    required TResult Function() rdSetDropDownBankToInitial,
    required TResult Function(int transcationCardindex)
        rdtranscationCardChanged,
    required TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)
        rdsettlements,
    required TResult Function(DateTime depositRealizationDate)
        rdupdateRealizationDate,
    required TResult Function(String searchValue, String searchType)
        updateCustomerSearchValue,
  }) {
    return updateCustomerSearchValue(searchValue, searchType);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? started,
    TResult? Function(String jwtToken)? saveTokens,
    TResult? Function()? rdCustomerAccountInfoPage,
    TResult? Function()? rdSettlementPage,
    TResult? Function()? newRdPage,
    TResult? Function()? rdDepositPageEvent,
    TResult? Function()? rdStatementPage,
    TResult? Function(bool rdPage)? rdPage,
    TResult? Function(int branchid)? getRdSchemeCardDetails,
    TResult? Function(int index)? getRdSchemeCardIndex,
    TResult? Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult? Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult? Function()? enableEmployeeSalesCode,
    TResult? Function()? enableCustomerSalesCode,
    TResult? Function(String customerId)? fetchRdTaxPayer,
    TResult? Function()? enableRdTaxPayer,
    TResult? Function(String jwtToken)? saveToken,
    TResult? Function(String customerId)? fetchCustomerAccounts,
    TResult? Function()? fetchRdNomineeRelations,
    TResult? Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult? Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult? Function(int index)? removeRdNominee,
    TResult? Function()? resetRdNomineeSharePercentage,
    TResult? Function(String sdNumber)? storeTransferToSd,
    TResult? Function()? enableTransferToSd,
    TResult? Function(int index)? rdSchemeCardIndex,
    TResult? Function(String amount)? newRdAmount,
    TResult? Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult? Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult? Function(String response)? newRdResponse,
    TResult? Function()? resetNewRdPage,
    TResult? Function(String depositid, String customerId)?
        getSettlementDetails,
    TResult? Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult? Function(int index)? selectedPaymentCard,
    TResult? Function(String status)? updateSettlementResponseStatus,
    TResult? Function(int? pendingInstallment)? updatePendingInstallment,
    TResult? Function(int? inDueValue)? updateDueValue,
    TResult? Function(int? accountCardIndex)? accountCardChanged,
    TResult? Function(int? paymentCardIndex)? paymentCardChanged,
    TResult? Function()? rdIncrementButton,
    TResult? Function()? rdDecrementButton,
    TResult? Function(String customerId, String depositId)? fetchRdOverDue,
    TResult? Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult? Function(String ifscCode)? fetchRdIfscCode,
    TResult? Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult? Function(int index)? rdaccountCardIndex,
    TResult? Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult? Function(String depositChequeNumber)? updateChqueNumber,
    TResult? Function(int currentDueCount, double currentDueValue)? setDue,
    TResult? Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult? Function(DateTime depositDate)? updateChequeDate,
    TResult? Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult? Function(int bankBranchId)? updateBankBranchId,
    TResult? Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult? Function()? fetchIfscCode,
    TResult? Function(String ifscCode)? updateIfscCode,
    TResult? Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult? Function()? resetInstallmentCount,
    TResult? Function()? setDropDownBankToInitial,
    TResult? Function()? clearSubsidiaryBank,
    TResult? Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult? Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult? Function(String customerId)? rdStatementDetails,
    TResult? Function(String documentId, String fromDate)? rdStatementInfo,
    TResult? Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult? Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult? Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult? Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult? Function()? rdSetDropDownBankToInitial,
    TResult? Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult? Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult? Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult? Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
  }) {
    return updateCustomerSearchValue?.call(searchValue, searchType);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? started,
    TResult Function(String jwtToken)? saveTokens,
    TResult Function()? rdCustomerAccountInfoPage,
    TResult Function()? rdSettlementPage,
    TResult Function()? newRdPage,
    TResult Function()? rdDepositPageEvent,
    TResult Function()? rdStatementPage,
    TResult Function(bool rdPage)? rdPage,
    TResult Function(int branchid)? getRdSchemeCardDetails,
    TResult Function(int index)? getRdSchemeCardIndex,
    TResult Function(int rdSalesCodeValue)? enableRdSalesCodeNone,
    TResult Function(String newRdSalesCode)? newRdValidateAgentOrEmployee,
    TResult Function()? enableEmployeeSalesCode,
    TResult Function()? enableCustomerSalesCode,
    TResult Function(String customerId)? fetchRdTaxPayer,
    TResult Function()? enableRdTaxPayer,
    TResult Function(String jwtToken)? saveToken,
    TResult Function(String customerId)? fetchCustomerAccounts,
    TResult Function()? fetchRdNomineeRelations,
    TResult Function(String? rdNomineeRelationLabel)?
        changeRdNomineeRelationLabel,
    TResult Function(AddedNomineeModel nomineeModel)? addRdNominee,
    TResult Function(int index)? removeRdNominee,
    TResult Function()? resetRdNomineeSharePercentage,
    TResult Function(String sdNumber)? storeTransferToSd,
    TResult Function()? enableTransferToSd,
    TResult Function(int index)? rdSchemeCardIndex,
    TResult Function(String amount)? newRdAmount,
    TResult Function(double installmentAmount, double interestRate)?
        calculateMaturityAmounts,
    TResult Function(int installmentPeriod, double rdMaturityValue,
            int rdMaturityValueIndex)?
        rdInstallmentPeriodAndAmount,
    TResult Function(
            String customerId,
            int schemeId,
            int moduleId,
            int branchId,
            int firmId,
            String depositType,
            String customerName,
            String amount,
            String sdDocId,
            String coApplicantCustomerId,
            String coapplicantName,
            int type,
            double interestRate,
            int depPeriod,
            double maturityValue,
            int installmentNo,
            int processPeriod,
            int categoryId,
            int tdsCode,
            int statusAppWeb,
            String chequeDate,
            String chNo,
            String customerBank,
            String subsidiaryBankName,
            int subsidaryAccountNo,
            String transactionMethod,
            int statusId,
            int subType,
            int userId,
            List<AddedNomineeModel> nomineeDetails)?
        postNewRdFetchResult,
    TResult Function(String response)? newRdResponse,
    TResult Function()? resetNewRdPage,
    TResult Function(String depositid, String customerId)? getSettlementDetails,
    TResult Function(String? usertype, String paymenttype, int moduleId)?
        rdpaymentgatewaycard,
    TResult Function(int index)? selectedPaymentCard,
    TResult Function(String status)? updateSettlementResponseStatus,
    TResult Function(int? pendingInstallment)? updatePendingInstallment,
    TResult Function(int? inDueValue)? updateDueValue,
    TResult Function(int? accountCardIndex)? accountCardChanged,
    TResult Function(int? paymentCardIndex)? paymentCardChanged,
    TResult Function()? rdIncrementButton,
    TResult Function()? rdDecrementButton,
    TResult Function(String customerId, String depositId)? fetchRdOverDue,
    TResult Function(int branchId, int? firmId, String? modeoftransaction)?
        fetchRdSubsidiaryBank,
    TResult Function(String ifscCode)? fetchRdIfscCode,
    TResult Function(double rdDepositTotalAmount, int rdDepositDueCount,
            double rdDepositDueAmount)?
        updateRdDepositTotalAmount,
    TResult Function(int index)? rdaccountCardIndex,
    TResult Function(dynamic subsidiaryBank)? subsidiaryBank,
    TResult Function(String depositChequeNumber)? updateChqueNumber,
    TResult Function(int currentDueCount, double currentDueValue)? setDue,
    TResult Function(
            int? branchId,
            int? firmId,
            String transactionType,
            double amount,
            String chequeNumber,
            int? subsidiaryAccountNumber,
            int? empCode,
            DateTime date,
            String customerId,
            String customerName,
            String documentId,
            String? userType,
            int? overDue,
            int noOfInstalments,
            String? realizationDate)?
        postRdDeposit,
    TResult Function(DateTime depositDate)? updateChequeDate,
    TResult Function(int subsidiaryAccountNumber)? subsidiaryAccountNumber,
    TResult Function(int bankBranchId)? updateBankBranchId,
    TResult Function(String subsidiaryBank)? updateSubsidiaryBank,
    TResult Function()? fetchIfscCode,
    TResult Function(String ifscCode)? updateIfscCode,
    TResult Function(DateTime depositRealizationDate)? updateRealizationDate,
    TResult Function()? resetInstallmentCount,
    TResult Function()? setDropDownBankToInitial,
    TResult Function()? clearSubsidiaryBank,
    TResult Function(String userType, String paymentType)? rdfetchPaymentCards,
    TResult Function(int? rdAccountCardIndex)? rdAccountCardChanged,
    TResult Function(String customerId)? rdStatementDetails,
    TResult Function(String documentId, String fromDate)? rdStatementInfo,
    TResult Function(String accountNumber, String fromDate, String toDate)?
        rdStatementTransaction,
    TResult Function(
            double debitTotal,
            double creditTotal,
            List<UpdatedRdStatementTransactions>
                updatedRdStatementTransactions)?
        storeRdStatementTransactions,
    TResult Function(String documentId)? fetchRdCustomerAccountMoreInfo,
    TResult Function(int? rdPaymentCardIndex)? rdPaymentCardChanged,
    TResult Function()? rdSetDropDownBankToInitial,
    TResult Function(int transcationCardindex)? rdtranscationCardChanged,
    TResult Function(
            String? customerId,
            String? accountNumber,
            String? transactionType,
            double interestTransferred,
            int branchId,
            int firmId,
            int branchBankId,
            String chequeNumber,
            String customerBank,
            String subsidiaryBankName,
            int subsidiaryBankAccountNo,
            String employeeCode,
            String customerName,
            String realizationDate,
            String jwtToken)?
        rdsettlements,
    TResult Function(DateTime depositRealizationDate)? rdupdateRealizationDate,
    TResult Function(String searchValue, String searchType)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateCustomerSearchValue != null) {
      return updateCustomerSearchValue(searchValue, searchType);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_Started value) started,
    required TResult Function(_SaveTokens value) saveTokens,
    required TResult Function(_RdCustomerAccountInfoPage value)
        rdCustomerAccountInfoPage,
    required TResult Function(_RdSettlementPage value) rdSettlementPage,
    required TResult Function(_NewRdPage value) newRdPage,
    required TResult Function(_RdDepositPageEvent value) rdDepositPageEvent,
    required TResult Function(_RdStatementPage value) rdStatementPage,
    required TResult Function(_RdPage value) rdPage,
    required TResult Function(_GetRdSchemeCardDetails value)
        getRdSchemeCardDetails,
    required TResult Function(_GetRdSchemeCardIndex value) getRdSchemeCardIndex,
    required TResult Function(_EnableRdSalesCodeNone value)
        enableRdSalesCodeNone,
    required TResult Function(_NewRdValidateAgentOrEmployee value)
        newRdValidateAgentOrEmployee,
    required TResult Function(_EnableEmployeeSalesCode value)
        enableEmployeeSalesCode,
    required TResult Function(_EnableCustomerSalesCode value)
        enableCustomerSalesCode,
    required TResult Function(_FetchRdTaxPayer value) fetchRdTaxPayer,
    required TResult Function(_EnableRdTaxPayer value) enableRdTaxPayer,
    required TResult Function(_SaveToken value) saveToken,
    required TResult Function(_FetchCustomerAccounts value)
        fetchCustomerAccounts,
    required TResult Function(_FetchRdNomineeRelations value)
        fetchRdNomineeRelations,
    required TResult Function(_ChangeRdNomineeRelationLabel value)
        changeRdNomineeRelationLabel,
    required TResult Function(_AddRdNominee value) addRdNominee,
    required TResult Function(_RemoveRdNominee value) removeRdNominee,
    required TResult Function(_ResetRdNomineeSharePercentage value)
        resetRdNomineeSharePercentage,
    required TResult Function(_StoreTransferToSd value) storeTransferToSd,
    required TResult Function(_EnableTransferToSd value) enableTransferToSd,
    required TResult Function(_RdSchemeCardIndex value) rdSchemeCardIndex,
    required TResult Function(_NewRdAmount value) newRdAmount,
    required TResult Function(_CalculateMaturityAmounts value)
        calculateMaturityAmounts,
    required TResult Function(_RdInstallmentPeriodAndAmount value)
        rdInstallmentPeriodAndAmount,
    required TResult Function(_PostNewRdFetchResult value) postNewRdFetchResult,
    required TResult Function(_NewRdResponse value) newRdResponse,
    required TResult Function(_ResetNewRdPage value) resetNewRdPage,
    required TResult Function(_GetSettlementDetails value) getSettlementDetails,
    required TResult Function(_Rdpaymentgatewaycard value) rdpaymentgatewaycard,
    required TResult Function(_SelectedPaymentCard value) selectedPaymentCard,
    required TResult Function(_UpdateSettlementResponseStatus value)
        updateSettlementResponseStatus,
    required TResult Function(_UpdatePendingInstallment value)
        updatePendingInstallment,
    required TResult Function(_UpdateDueValue value) updateDueValue,
    required TResult Function(_AccountCardChanged value) accountCardChanged,
    required TResult Function(_PaymentCardChanged value) paymentCardChanged,
    required TResult Function(_RdIncrementButton value) rdIncrementButton,
    required TResult Function(_RdDecrementButton value) rdDecrementButton,
    required TResult Function(_FetchRdOverDue value) fetchRdOverDue,
    required TResult Function(_FetchRdSubsidiaryBank value)
        fetchRdSubsidiaryBank,
    required TResult Function(_fetchRdIfscCode value) fetchRdIfscCode,
    required TResult Function(_UpdateRdDepositTotalAmount value)
        updateRdDepositTotalAmount,
    required TResult Function(_RdaccountCardIndex value) rdaccountCardIndex,
    required TResult Function(_SubsidiaryBank value) subsidiaryBank,
    required TResult Function(_UpdateChqueNumber value) updateChqueNumber,
    required TResult Function(_SetDue value) setDue,
    required TResult Function(_PostRdDeposit value) postRdDeposit,
    required TResult Function(_UpdateChequeDate value) updateChequeDate,
    required TResult Function(_SubsidiaryAccountNumber value)
        subsidiaryAccountNumber,
    required TResult Function(_UpdateBankBranchId value) updateBankBranchId,
    required TResult Function(_UpdateSubsidiaryBank value) updateSubsidiaryBank,
    required TResult Function(_FetchIfscCode value) fetchIfscCode,
    required TResult Function(_UpdateIfscCode value) updateIfscCode,
    required TResult Function(_UpdateRealizationDate value)
        updateRealizationDate,
    required TResult Function(_ResetInstallmentCount value)
        resetInstallmentCount,
    required TResult Function(_SetDropDownBankToInitial value)
        setDropDownBankToInitial,
    required TResult Function(_ClearSubsidiaryBank value) clearSubsidiaryBank,
    required TResult Function(_RdfetchPaymentCards value) rdfetchPaymentCards,
    required TResult Function(_RdAccountCardChanged value) rdAccountCardChanged,
    required TResult Function(_RdStatementDetails value) rdStatementDetails,
    required TResult Function(_RdStatementInfo value) rdStatementInfo,
    required TResult Function(_RdStatementTransaction value)
        rdStatementTransaction,
    required TResult Function(_StoreRdStatementTransactions value)
        storeRdStatementTransactions,
    required TResult Function(_FetchRdCustomerAccountMoreInfo value)
        fetchRdCustomerAccountMoreInfo,
    required TResult Function(_RdPaymentCardChanged value) rdPaymentCardChanged,
    required TResult Function(_rdSetDropDownBankToInitial value)
        rdSetDropDownBankToInitial,
    required TResult Function(_RDTranscationCardChanged value)
        rdtranscationCardChanged,
    required TResult Function(_Rdsettlements value) rdsettlements,
    required TResult Function(_RdUpdateRealizationDate value)
        rdupdateRealizationDate,
    required TResult Function(_UpdateCustomerSearchValue value)
        updateCustomerSearchValue,
  }) {
    return updateCustomerSearchValue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_Started value)? started,
    TResult? Function(_SaveTokens value)? saveTokens,
    TResult? Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult? Function(_RdSettlementPage value)? rdSettlementPage,
    TResult? Function(_NewRdPage value)? newRdPage,
    TResult? Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult? Function(_RdStatementPage value)? rdStatementPage,
    TResult? Function(_RdPage value)? rdPage,
    TResult? Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult? Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult? Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult? Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult? Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult? Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult? Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult? Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult? Function(_SaveToken value)? saveToken,
    TResult? Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult? Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult? Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult? Function(_AddRdNominee value)? addRdNominee,
    TResult? Function(_RemoveRdNominee value)? removeRdNominee,
    TResult? Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult? Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult? Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult? Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult? Function(_NewRdAmount value)? newRdAmount,
    TResult? Function(_CalculateMaturityAmounts value)?
        calculateMaturityAmounts,
    TResult? Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult? Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult? Function(_NewRdResponse value)? newRdResponse,
    TResult? Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult? Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult? Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult? Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult? Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult? Function(_UpdatePendingInstallment value)?
        updatePendingInstallment,
    TResult? Function(_UpdateDueValue value)? updateDueValue,
    TResult? Function(_AccountCardChanged value)? accountCardChanged,
    TResult? Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult? Function(_RdIncrementButton value)? rdIncrementButton,
    TResult? Function(_RdDecrementButton value)? rdDecrementButton,
    TResult? Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult? Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult? Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult? Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult? Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult? Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult? Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult? Function(_SetDue value)? setDue,
    TResult? Function(_PostRdDeposit value)? postRdDeposit,
    TResult? Function(_UpdateChequeDate value)? updateChequeDate,
    TResult? Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult? Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult? Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult? Function(_FetchIfscCode value)? fetchIfscCode,
    TResult? Function(_UpdateIfscCode value)? updateIfscCode,
    TResult? Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult? Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult? Function(_SetDropDownBankToInitial value)?
        setDropDownBankToInitial,
    TResult? Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult? Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult? Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult? Function(_RdStatementDetails value)? rdStatementDetails,
    TResult? Function(_RdStatementInfo value)? rdStatementInfo,
    TResult? Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult? Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult? Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult? Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult? Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult? Function(_RDTranscationCardChanged value)?
        rdtranscationCardChanged,
    TResult? Function(_Rdsettlements value)? rdsettlements,
    TResult? Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult? Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
  }) {
    return updateCustomerSearchValue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_Started value)? started,
    TResult Function(_SaveTokens value)? saveTokens,
    TResult Function(_RdCustomerAccountInfoPage value)?
        rdCustomerAccountInfoPage,
    TResult Function(_RdSettlementPage value)? rdSettlementPage,
    TResult Function(_NewRdPage value)? newRdPage,
    TResult Function(_RdDepositPageEvent value)? rdDepositPageEvent,
    TResult Function(_RdStatementPage value)? rdStatementPage,
    TResult Function(_RdPage value)? rdPage,
    TResult Function(_GetRdSchemeCardDetails value)? getRdSchemeCardDetails,
    TResult Function(_GetRdSchemeCardIndex value)? getRdSchemeCardIndex,
    TResult Function(_EnableRdSalesCodeNone value)? enableRdSalesCodeNone,
    TResult Function(_NewRdValidateAgentOrEmployee value)?
        newRdValidateAgentOrEmployee,
    TResult Function(_EnableEmployeeSalesCode value)? enableEmployeeSalesCode,
    TResult Function(_EnableCustomerSalesCode value)? enableCustomerSalesCode,
    TResult Function(_FetchRdTaxPayer value)? fetchRdTaxPayer,
    TResult Function(_EnableRdTaxPayer value)? enableRdTaxPayer,
    TResult Function(_SaveToken value)? saveToken,
    TResult Function(_FetchCustomerAccounts value)? fetchCustomerAccounts,
    TResult Function(_FetchRdNomineeRelations value)? fetchRdNomineeRelations,
    TResult Function(_ChangeRdNomineeRelationLabel value)?
        changeRdNomineeRelationLabel,
    TResult Function(_AddRdNominee value)? addRdNominee,
    TResult Function(_RemoveRdNominee value)? removeRdNominee,
    TResult Function(_ResetRdNomineeSharePercentage value)?
        resetRdNomineeSharePercentage,
    TResult Function(_StoreTransferToSd value)? storeTransferToSd,
    TResult Function(_EnableTransferToSd value)? enableTransferToSd,
    TResult Function(_RdSchemeCardIndex value)? rdSchemeCardIndex,
    TResult Function(_NewRdAmount value)? newRdAmount,
    TResult Function(_CalculateMaturityAmounts value)? calculateMaturityAmounts,
    TResult Function(_RdInstallmentPeriodAndAmount value)?
        rdInstallmentPeriodAndAmount,
    TResult Function(_PostNewRdFetchResult value)? postNewRdFetchResult,
    TResult Function(_NewRdResponse value)? newRdResponse,
    TResult Function(_ResetNewRdPage value)? resetNewRdPage,
    TResult Function(_GetSettlementDetails value)? getSettlementDetails,
    TResult Function(_Rdpaymentgatewaycard value)? rdpaymentgatewaycard,
    TResult Function(_SelectedPaymentCard value)? selectedPaymentCard,
    TResult Function(_UpdateSettlementResponseStatus value)?
        updateSettlementResponseStatus,
    TResult Function(_UpdatePendingInstallment value)? updatePendingInstallment,
    TResult Function(_UpdateDueValue value)? updateDueValue,
    TResult Function(_AccountCardChanged value)? accountCardChanged,
    TResult Function(_PaymentCardChanged value)? paymentCardChanged,
    TResult Function(_RdIncrementButton value)? rdIncrementButton,
    TResult Function(_RdDecrementButton value)? rdDecrementButton,
    TResult Function(_FetchRdOverDue value)? fetchRdOverDue,
    TResult Function(_FetchRdSubsidiaryBank value)? fetchRdSubsidiaryBank,
    TResult Function(_fetchRdIfscCode value)? fetchRdIfscCode,
    TResult Function(_UpdateRdDepositTotalAmount value)?
        updateRdDepositTotalAmount,
    TResult Function(_RdaccountCardIndex value)? rdaccountCardIndex,
    TResult Function(_SubsidiaryBank value)? subsidiaryBank,
    TResult Function(_UpdateChqueNumber value)? updateChqueNumber,
    TResult Function(_SetDue value)? setDue,
    TResult Function(_PostRdDeposit value)? postRdDeposit,
    TResult Function(_UpdateChequeDate value)? updateChequeDate,
    TResult Function(_SubsidiaryAccountNumber value)? subsidiaryAccountNumber,
    TResult Function(_UpdateBankBranchId value)? updateBankBranchId,
    TResult Function(_UpdateSubsidiaryBank value)? updateSubsidiaryBank,
    TResult Function(_FetchIfscCode value)? fetchIfscCode,
    TResult Function(_UpdateIfscCode value)? updateIfscCode,
    TResult Function(_UpdateRealizationDate value)? updateRealizationDate,
    TResult Function(_ResetInstallmentCount value)? resetInstallmentCount,
    TResult Function(_SetDropDownBankToInitial value)? setDropDownBankToInitial,
    TResult Function(_ClearSubsidiaryBank value)? clearSubsidiaryBank,
    TResult Function(_RdfetchPaymentCards value)? rdfetchPaymentCards,
    TResult Function(_RdAccountCardChanged value)? rdAccountCardChanged,
    TResult Function(_RdStatementDetails value)? rdStatementDetails,
    TResult Function(_RdStatementInfo value)? rdStatementInfo,
    TResult Function(_RdStatementTransaction value)? rdStatementTransaction,
    TResult Function(_StoreRdStatementTransactions value)?
        storeRdStatementTransactions,
    TResult Function(_FetchRdCustomerAccountMoreInfo value)?
        fetchRdCustomerAccountMoreInfo,
    TResult Function(_RdPaymentCardChanged value)? rdPaymentCardChanged,
    TResult Function(_rdSetDropDownBankToInitial value)?
        rdSetDropDownBankToInitial,
    TResult Function(_RDTranscationCardChanged value)? rdtranscationCardChanged,
    TResult Function(_Rdsettlements value)? rdsettlements,
    TResult Function(_RdUpdateRealizationDate value)? rdupdateRealizationDate,
    TResult Function(_UpdateCustomerSearchValue value)?
        updateCustomerSearchValue,
    required TResult orElse(),
  }) {
    if (updateCustomerSearchValue != null) {
      return updateCustomerSearchValue(this);
    }
    return orElse();
  }
}

abstract class _UpdateCustomerSearchValue implements RdCustomerEvent {
  const factory _UpdateCustomerSearchValue(
      {required final String searchValue,
      required final String searchType}) = _$_UpdateCustomerSearchValue;

  String get searchValue;
  String get searchType;
  @JsonKey(ignore: true)
  _$$_UpdateCustomerSearchValueCopyWith<_$_UpdateCustomerSearchValue>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
mixin _$RdCustomerState {
  int get rdSalesCodeNone => throw _privateConstructorUsedError;
  String get jwtToken => throw _privateConstructorUsedError;
  bool get rdCustomerAccountInfoPage => throw _privateConstructorUsedError;
  bool get rdSettlement => throw _privateConstructorUsedError;
  bool get newRdPage => throw _privateConstructorUsedError;
  bool get rdPage => throw _privateConstructorUsedError;
  bool get rdStatementPage => throw _privateConstructorUsedError;
  String get selectedPaymentCard => throw _privateConstructorUsedError;
  Option<Either<NewRdFailure, RdSchemeCardModel>>
      get rdSchemeCardFailureOrSuccess => throw _privateConstructorUsedError;
  bool get getRdSchemeCardDetails => throw _privateConstructorUsedError;
  RdSchemeCardModel? get rdSchemeDataModelDatas =>
      throw _privateConstructorUsedError;
  String get loginToken => throw _privateConstructorUsedError;
  String get customerid => throw _privateConstructorUsedError;
  bool get fetchCustomerAccounts => throw _privateConstructorUsedError;
  String get accountNumber => throw _privateConstructorUsedError;
  int get rdAccountCardindex => throw _privateConstructorUsedError;
  String get depositid => throw _privateConstructorUsedError;
  String? get usertype =>
      throw _privateConstructorUsedError; //required String paymenttype,
  int get moduleId =>
      throw _privateConstructorUsedError; //-----------Account Details------------
  int get index => throw _privateConstructorUsedError;
  String get documentId => throw _privateConstructorUsedError;
  bool get rdCustomerAccountMoreInfoLoading =>
      throw _privateConstructorUsedError;
  Option<Either<RdCustomerFailure, RdAccountMoreInfoModel>>
      get rdCustomerAccountMoreInfoSuccessorfailureOption =>
          throw _privateConstructorUsedError;
  RdAccountMoreInfoModel? get rdAccountMoreInfo =>
      throw _privateConstructorUsedError; //rd Statement-------------------------------------------------------
  bool get rdCustomerDetailsLoading => throw _privateConstructorUsedError;
  bool get rdCustomerStatementTransactionLoading =>
      throw _privateConstructorUsedError;
  Option<Either<RdStatementFailures, RdStatementDetailsModel>>
      get rdcustomerStatementSuccessOrfailOption =>
          throw _privateConstructorUsedError;
  Option<Either<RdStatementFailures, RdStatementInfoModel>>
      get rdStatementInfoSuccessOrfailOption =>
          throw _privateConstructorUsedError;
  List<UpdatedRdStatementTransactions>? get updatedrdStatementTransactions =>
      throw _privateConstructorUsedError;
  double? get creditTotal => throw _privateConstructorUsedError;
  double? get debitTotal => throw _privateConstructorUsedError;
  Option<Either<RdStatementFailures, RdStatementTransactionModel>>
      get rdStatementTransactionSuccessOrfailOption =>
          throw _privateConstructorUsedError;
  RdStatementDetailsModel? get rdStatementDetailsModel =>
      throw _privateConstructorUsedError;
  RdStatementInfoModel? get rdStatementInfoModel =>
      throw _privateConstructorUsedError;
  RdStatementTransactionModel? get rdStatementTransactionModel =>
      throw _privateConstructorUsedError; //---------------------------------------------------------------------------------------------
  RdPaymentGatewayModel? get rdpaymentgatewaycarddata =>
      throw _privateConstructorUsedError;
  RdCustomerSettlementModel? get rdCustomerSettlementdata =>
      throw _privateConstructorUsedError;
  Option<
      Either<RdPaymentGatewayFailures,
          RdPaymentGatewayModel>> get rdpaymentgatewaycardfailureorsucessOption =>
      throw _privateConstructorUsedError; //--------------------------------------------------------------------------------------
  Option<Either<RdSettlementFailures, RdCustomerSettlementModel>>
      get rdsettlementfailureorsucessOption =>
          throw _privateConstructorUsedError;
  Option<Either<RdCustomerAccountFailures, RdCustomerAccountinfoModel>>
      get rdcustomeraccountinfosucessorfailureoption =>
          throw _privateConstructorUsedError;
  RdCustomerAccountinfoModel? get rdCustomerAccountinfodatas =>
      throw _privateConstructorUsedError; // required Option<Either<RdPaymentGatewayFailures, RdPaymentGatewayModel>>
//     rdpaymentgatewaycardfailureorsucessOption,
// RdPaymentGatewayModel? rdpaymentgatewaycarddata,
///////Rd Sales Code/////////
  bool get empSalesCode => throw _privateConstructorUsedError;
  bool get customerSalesCode => throw _privateConstructorUsedError;
  String get newRdSalesCode => throw _privateConstructorUsedError;
  Option<Either<NewRdFailure, RdAgentOrEmployeeModel>>
      get rdAgentOrEmployeeFailureOrSuccess =>
          throw _privateConstructorUsedError;
  RdAgentOrEmployeeModel? get rdAgentOrEmployeeModel =>
      throw _privateConstructorUsedError; //////Rd Tax Payer////////
  bool get rdTaxPayer => throw _privateConstructorUsedError;
  Option<Either<NewRdFailure, RdTaxPayerModel>>
      get rdTaxPayerFailureOrSuccess => throw _privateConstructorUsedError;
  RdTaxPayerModel? get rdTaxPayerValue =>
      throw _privateConstructorUsedError; /////Rd Nominee Relations//////
  String? get rdNomineeRelationLabel => throw _privateConstructorUsedError;
  List<AddedNomineeModel> get nominees => throw _privateConstructorUsedError;
  Option<Either<NewRdFailure, RdNomineeRelationDataModel>>
      get rdNomineeRelationsFailureOrSuccess =>
          throw _privateConstructorUsedError;
  RdNomineeRelationDataModel? get rdNomineeRelationDataModel =>
      throw _privateConstructorUsedError;
  double get rdBalanceSettlementSharePercentage =>
      throw _privateConstructorUsedError; //////Transfer to Sd///////////
  String? get transferToSdNumber => throw _privateConstructorUsedError;
  bool get transferToSd => throw _privateConstructorUsedError;
  int get transferToSdFlag =>
      throw _privateConstructorUsedError; ///////Post New Rd/////////////
  bool get newRdResponseLoading => throw _privateConstructorUsedError;
  String? get newRdResponse => throw _privateConstructorUsedError;
  Option<Either<NewRdFailure, NewRdPostDataModel>>
      get newRdPostDataFailureOrSuccess => throw _privateConstructorUsedError;
  NewRdPostDataModel? get newRdPostDataModel =>
      throw _privateConstructorUsedError; /////Deposit////////////
  bool get rdDepositPage => throw _privateConstructorUsedError;
  int get count => throw _privateConstructorUsedError;
  String get customerId => throw _privateConstructorUsedError;
  String get depositId => throw _privateConstructorUsedError;
  int get rdPaymentCardIndex => throw _privateConstructorUsedError;
  double get rdDepositTotalAmount => throw _privateConstructorUsedError;
  double get rdDepositDueAmount => throw _privateConstructorUsedError;
  int get rdDepositDueCount => throw _privateConstructorUsedError;
  String get subsidiaryBank => throw _privateConstructorUsedError;
  String get chequeNumber => throw _privateConstructorUsedError;
  int get bankBranchId => throw _privateConstructorUsedError;
  int get subsidiaryAccountNumber => throw _privateConstructorUsedError;
  String get depositAmount => throw _privateConstructorUsedError;
  DateTime get depositDate => throw _privateConstructorUsedError;
  String get ifscCode => throw _privateConstructorUsedError;
  bool get isIfscValid => throw _privateConstructorUsedError;
  int get transcationCardindex => throw _privateConstructorUsedError;
  int get pendingInstallment => throw _privateConstructorUsedError;
  double get interestTransferred => throw _privateConstructorUsedError;
  int get inDueValue => throw _privateConstructorUsedError;
  double get currentDueValue => throw _privateConstructorUsedError;
  int get currentDueCount =>
      throw _privateConstructorUsedError; //////Maturity Amount TextFormField///////////
  int get rdSchemeCardIndex => throw _privateConstructorUsedError;
  String get newRdAmount => throw _privateConstructorUsedError;
  int get rdMaturityValueIndex =>
      throw _privateConstructorUsedError; ///////Maturity Drop Down /////////////////
  int? get rdInstallmentPeriod => throw _privateConstructorUsedError;
  double? get rdMaturityValue => throw _privateConstructorUsedError;
  DateTime get depositRealizationDate => throw _privateConstructorUsedError;
  Option<Either<RdSettlementFailures, RdSettlementResponse>>
      get rdsettlementdepositFailureOrSuccess =>
          throw _privateConstructorUsedError;
  RdSettlementResponse? get rdSettlementResponse =>
      throw _privateConstructorUsedError; // required int subsidiaryAccountNumber,
// required int bankBranchId,
  String get subsidiaryAccountName => throw _privateConstructorUsedError;
  List<String> get concatinatedMonthAndAmountList =>
      throw _privateConstructorUsedError;
  bool get fetchcustomeraccountloading =>
      throw _privateConstructorUsedError; //////////////////////////////////
  List<RdCustomerAccountInfoDataModel>? get rdcustomerActiveAccounts =>
      throw _privateConstructorUsedError; //////////////Deposit///////////////////
////////////
  bool get customerSettlementLoading => throw _privateConstructorUsedError;
  Option<Either<RdDepositFailure, RdDepositModel>>
      get rddepositFailureOrSuccess => throw _privateConstructorUsedError;
  Option<Either<RdDepositFailure, RdOverDueModel>>
      get rdoverdueFailureOrSuccess => throw _privateConstructorUsedError;
  Option<Either<RdSubsidiaryBankFailure, RdSubsidiaryBankModel>>
      get rdSubsidiaryBankFailureOrSuccess =>
          throw _privateConstructorUsedError;
  Option<Either<RdIfscFailure, RdIfscModel>> get rdIfscFailureOrSuccess =>
      throw _privateConstructorUsedError;
  int get accountCardindex =>
      throw _privateConstructorUsedError; /////////Deposit Models//////////////
  RdDepositModel? get rdDepositModel => throw _privateConstructorUsedError;
  RdOverDueModel? get rdOverDueModel => throw _privateConstructorUsedError;
  RdSubsidiaryBankModel? get rdSubsidiaryBankModel =>
      throw _privateConstructorUsedError;
  RdIfscModel? get rdIfscModel => throw _privateConstructorUsedError;
  String get searchType => throw _privateConstructorUsedError;
  String get searchValue => throw _privateConstructorUsedError;
  String get settlementResponseStatus => throw _privateConstructorUsedError;

  @JsonKey(ignore: true)
  $RdCustomerStateCopyWith<RdCustomerState> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $RdCustomerStateCopyWith<$Res> {
  factory $RdCustomerStateCopyWith(
          RdCustomerState value, $Res Function(RdCustomerState) then) =
      _$RdCustomerStateCopyWithImpl<$Res, RdCustomerState>;
  @useResult
  $Res call(
      {int rdSalesCodeNone,
      String jwtToken,
      bool rdCustomerAccountInfoPage,
      bool rdSettlement,
      bool newRdPage,
      bool rdPage,
      bool rdStatementPage,
      String selectedPaymentCard,
      Option<Either<NewRdFailure, RdSchemeCardModel>>
          rdSchemeCardFailureOrSuccess,
      bool getRdSchemeCardDetails,
      RdSchemeCardModel? rdSchemeDataModelDatas,
      String loginToken,
      String customerid,
      bool fetchCustomerAccounts,
      String accountNumber,
      int rdAccountCardindex,
      String depositid,
      String? usertype,
      int moduleId,
      int index,
      String documentId,
      bool rdCustomerAccountMoreInfoLoading,
      Option<Either<RdCustomerFailure, RdAccountMoreInfoModel>>
          rdCustomerAccountMoreInfoSuccessorfailureOption,
      RdAccountMoreInfoModel? rdAccountMoreInfo,
      bool rdCustomerDetailsLoading,
      bool rdCustomerStatementTransactionLoading,
      Option<Either<RdStatementFailures, RdStatementDetailsModel>>
          rdcustomerStatementSuccessOrfailOption,
      Option<Either<RdStatementFailures, RdStatementInfoModel>>
          rdStatementInfoSuccessOrfailOption,
      List<UpdatedRdStatementTransactions>? updatedrdStatementTransactions,
      double? creditTotal,
      double? debitTotal,
      Option<Either<RdStatementFailures, RdStatementTransactionModel>>
          rdStatementTransactionSuccessOrfailOption,
      RdStatementDetailsModel? rdStatementDetailsModel,
      RdStatementInfoModel? rdStatementInfoModel,
      RdStatementTransactionModel? rdStatementTransactionModel,
      RdPaymentGatewayModel? rdpaymentgatewaycarddata,
      RdCustomerSettlementModel? rdCustomerSettlementdata,
      Option<Either<RdPaymentGatewayFailures, RdPaymentGatewayModel>>
          rdpaymentgatewaycardfailureorsucessOption,
      Option<Either<RdSettlementFailures, RdCustomerSettlementModel>>
          rdsettlementfailureorsucessOption,
      Option<Either<RdCustomerAccountFailures, RdCustomerAccountinfoModel>>
          rdcustomeraccountinfosucessorfailureoption,
      RdCustomerAccountinfoModel? rdCustomerAccountinfodatas,
      bool empSalesCode,
      bool customerSalesCode,
      String newRdSalesCode,
      Option<Either<NewRdFailure, RdAgentOrEmployeeModel>>
          rdAgentOrEmployeeFailureOrSuccess,
      RdAgentOrEmployeeModel? rdAgentOrEmployeeModel,
      bool rdTaxPayer,
      Option<Either<NewRdFailure, RdTaxPayerModel>> rdTaxPayerFailureOrSuccess,
      RdTaxPayerModel? rdTaxPayerValue,
      String? rdNomineeRelationLabel,
      List<AddedNomineeModel> nominees,
      Option<Either<NewRdFailure, RdNomineeRelationDataModel>>
          rdNomineeRelationsFailureOrSuccess,
      RdNomineeRelationDataModel? rdNomineeRelationDataModel,
      double rdBalanceSettlementSharePercentage,
      String? transferToSdNumber,
      bool transferToSd,
      int transferToSdFlag,
      bool newRdResponseLoading,
      String? newRdResponse,
      Option<Either<NewRdFailure, NewRdPostDataModel>>
          newRdPostDataFailureOrSuccess,
      NewRdPostDataModel? newRdPostDataModel,
      bool rdDepositPage,
      int count,
      String customerId,
      String depositId,
      int rdPaymentCardIndex,
      double rdDepositTotalAmount,
      double rdDepositDueAmount,
      int rdDepositDueCount,
      String subsidiaryBank,
      String chequeNumber,
      int bankBranchId,
      int subsidiaryAccountNumber,
      String depositAmount,
      DateTime depositDate,
      String ifscCode,
      bool isIfscValid,
      int transcationCardindex,
      int pendingInstallment,
      double interestTransferred,
      int inDueValue,
      double currentDueValue,
      int currentDueCount,
      int rdSchemeCardIndex,
      String newRdAmount,
      int rdMaturityValueIndex,
      int? rdInstallmentPeriod,
      double? rdMaturityValue,
      DateTime depositRealizationDate,
      Option<Either<RdSettlementFailures, RdSettlementResponse>>
          rdsettlementdepositFailureOrSuccess,
      RdSettlementResponse? rdSettlementResponse,
      String subsidiaryAccountName,
      List<String> concatinatedMonthAndAmountList,
      bool fetchcustomeraccountloading,
      List<RdCustomerAccountInfoDataModel>? rdcustomerActiveAccounts,
      bool customerSettlementLoading,
      Option<Either<RdDepositFailure, RdDepositModel>>
          rddepositFailureOrSuccess,
      Option<Either<RdDepositFailure, RdOverDueModel>>
          rdoverdueFailureOrSuccess,
      Option<Either<RdSubsidiaryBankFailure, RdSubsidiaryBankModel>>
          rdSubsidiaryBankFailureOrSuccess,
      Option<Either<RdIfscFailure, RdIfscModel>> rdIfscFailureOrSuccess,
      int accountCardindex,
      RdDepositModel? rdDepositModel,
      RdOverDueModel? rdOverDueModel,
      RdSubsidiaryBankModel? rdSubsidiaryBankModel,
      RdIfscModel? rdIfscModel,
      String searchType,
      String searchValue,
      String settlementResponseStatus});

  $RdSchemeCardModelCopyWith<$Res>? get rdSchemeDataModelDatas;
  $RdAccountMoreInfoModelCopyWith<$Res>? get rdAccountMoreInfo;
  $RdStatementDetailsModelCopyWith<$Res>? get rdStatementDetailsModel;
  $RdStatementInfoModelCopyWith<$Res>? get rdStatementInfoModel;
  $RdStatementTransactionModelCopyWith<$Res>? get rdStatementTransactionModel;
  $RdPaymentGatewayModelCopyWith<$Res>? get rdpaymentgatewaycarddata;
  $RdCustomerSettlementModelCopyWith<$Res>? get rdCustomerSettlementdata;
  $RdCustomerAccountinfoModelCopyWith<$Res>? get rdCustomerAccountinfodatas;
  $RdAgentOrEmployeeModelCopyWith<$Res>? get rdAgentOrEmployeeModel;
  $RdTaxPayerModelCopyWith<$Res>? get rdTaxPayerValue;
  $RdNomineeRelationDataModelCopyWith<$Res>? get rdNomineeRelationDataModel;
  $NewRdPostDataModelCopyWith<$Res>? get newRdPostDataModel;
  $RdSettlementResponseCopyWith<$Res>? get rdSettlementResponse;
  $RdDepositModelCopyWith<$Res>? get rdDepositModel;
  $RdOverDueModelCopyWith<$Res>? get rdOverDueModel;
  $RdSubsidiaryBankModelCopyWith<$Res>? get rdSubsidiaryBankModel;
  $RdIfscModelCopyWith<$Res>? get rdIfscModel;
}

/// @nodoc
class _$RdCustomerStateCopyWithImpl<$Res, $Val extends RdCustomerState>
    implements $RdCustomerStateCopyWith<$Res> {
  _$RdCustomerStateCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? rdSalesCodeNone = null,
    Object? jwtToken = null,
    Object? rdCustomerAccountInfoPage = null,
    Object? rdSettlement = null,
    Object? newRdPage = null,
    Object? rdPage = null,
    Object? rdStatementPage = null,
    Object? selectedPaymentCard = null,
    Object? rdSchemeCardFailureOrSuccess = null,
    Object? getRdSchemeCardDetails = null,
    Object? rdSchemeDataModelDatas = freezed,
    Object? loginToken = null,
    Object? customerid = null,
    Object? fetchCustomerAccounts = null,
    Object? accountNumber = null,
    Object? rdAccountCardindex = null,
    Object? depositid = null,
    Object? usertype = freezed,
    Object? moduleId = null,
    Object? index = null,
    Object? documentId = null,
    Object? rdCustomerAccountMoreInfoLoading = null,
    Object? rdCustomerAccountMoreInfoSuccessorfailureOption = null,
    Object? rdAccountMoreInfo = freezed,
    Object? rdCustomerDetailsLoading = null,
    Object? rdCustomerStatementTransactionLoading = null,
    Object? rdcustomerStatementSuccessOrfailOption = null,
    Object? rdStatementInfoSuccessOrfailOption = null,
    Object? updatedrdStatementTransactions = freezed,
    Object? creditTotal = freezed,
    Object? debitTotal = freezed,
    Object? rdStatementTransactionSuccessOrfailOption = null,
    Object? rdStatementDetailsModel = freezed,
    Object? rdStatementInfoModel = freezed,
    Object? rdStatementTransactionModel = freezed,
    Object? rdpaymentgatewaycarddata = freezed,
    Object? rdCustomerSettlementdata = freezed,
    Object? rdpaymentgatewaycardfailureorsucessOption = null,
    Object? rdsettlementfailureorsucessOption = null,
    Object? rdcustomeraccountinfosucessorfailureoption = null,
    Object? rdCustomerAccountinfodatas = freezed,
    Object? empSalesCode = null,
    Object? customerSalesCode = null,
    Object? newRdSalesCode = null,
    Object? rdAgentOrEmployeeFailureOrSuccess = null,
    Object? rdAgentOrEmployeeModel = freezed,
    Object? rdTaxPayer = null,
    Object? rdTaxPayerFailureOrSuccess = null,
    Object? rdTaxPayerValue = freezed,
    Object? rdNomineeRelationLabel = freezed,
    Object? nominees = null,
    Object? rdNomineeRelationsFailureOrSuccess = null,
    Object? rdNomineeRelationDataModel = freezed,
    Object? rdBalanceSettlementSharePercentage = null,
    Object? transferToSdNumber = freezed,
    Object? transferToSd = null,
    Object? transferToSdFlag = null,
    Object? newRdResponseLoading = null,
    Object? newRdResponse = freezed,
    Object? newRdPostDataFailureOrSuccess = null,
    Object? newRdPostDataModel = freezed,
    Object? rdDepositPage = null,
    Object? count = null,
    Object? customerId = null,
    Object? depositId = null,
    Object? rdPaymentCardIndex = null,
    Object? rdDepositTotalAmount = null,
    Object? rdDepositDueAmount = null,
    Object? rdDepositDueCount = null,
    Object? subsidiaryBank = null,
    Object? chequeNumber = null,
    Object? bankBranchId = null,
    Object? subsidiaryAccountNumber = null,
    Object? depositAmount = null,
    Object? depositDate = null,
    Object? ifscCode = null,
    Object? isIfscValid = null,
    Object? transcationCardindex = null,
    Object? pendingInstallment = null,
    Object? interestTransferred = null,
    Object? inDueValue = null,
    Object? currentDueValue = null,
    Object? currentDueCount = null,
    Object? rdSchemeCardIndex = null,
    Object? newRdAmount = null,
    Object? rdMaturityValueIndex = null,
    Object? rdInstallmentPeriod = freezed,
    Object? rdMaturityValue = freezed,
    Object? depositRealizationDate = null,
    Object? rdsettlementdepositFailureOrSuccess = null,
    Object? rdSettlementResponse = freezed,
    Object? subsidiaryAccountName = null,
    Object? concatinatedMonthAndAmountList = null,
    Object? fetchcustomeraccountloading = null,
    Object? rdcustomerActiveAccounts = freezed,
    Object? customerSettlementLoading = null,
    Object? rddepositFailureOrSuccess = null,
    Object? rdoverdueFailureOrSuccess = null,
    Object? rdSubsidiaryBankFailureOrSuccess = null,
    Object? rdIfscFailureOrSuccess = null,
    Object? accountCardindex = null,
    Object? rdDepositModel = freezed,
    Object? rdOverDueModel = freezed,
    Object? rdSubsidiaryBankModel = freezed,
    Object? rdIfscModel = freezed,
    Object? searchType = null,
    Object? searchValue = null,
    Object? settlementResponseStatus = null,
  }) {
    return _then(_value.copyWith(
      rdSalesCodeNone: null == rdSalesCodeNone
          ? _value.rdSalesCodeNone
          : rdSalesCodeNone // ignore: cast_nullable_to_non_nullable
              as int,
      jwtToken: null == jwtToken
          ? _value.jwtToken
          : jwtToken // ignore: cast_nullable_to_non_nullable
              as String,
      rdCustomerAccountInfoPage: null == rdCustomerAccountInfoPage
          ? _value.rdCustomerAccountInfoPage
          : rdCustomerAccountInfoPage // ignore: cast_nullable_to_non_nullable
              as bool,
      rdSettlement: null == rdSettlement
          ? _value.rdSettlement
          : rdSettlement // ignore: cast_nullable_to_non_nullable
              as bool,
      newRdPage: null == newRdPage
          ? _value.newRdPage
          : newRdPage // ignore: cast_nullable_to_non_nullable
              as bool,
      rdPage: null == rdPage
          ? _value.rdPage
          : rdPage // ignore: cast_nullable_to_non_nullable
              as bool,
      rdStatementPage: null == rdStatementPage
          ? _value.rdStatementPage
          : rdStatementPage // ignore: cast_nullable_to_non_nullable
              as bool,
      selectedPaymentCard: null == selectedPaymentCard
          ? _value.selectedPaymentCard
          : selectedPaymentCard // ignore: cast_nullable_to_non_nullable
              as String,
      rdSchemeCardFailureOrSuccess: null == rdSchemeCardFailureOrSuccess
          ? _value.rdSchemeCardFailureOrSuccess
          : rdSchemeCardFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<NewRdFailure, RdSchemeCardModel>>,
      getRdSchemeCardDetails: null == getRdSchemeCardDetails
          ? _value.getRdSchemeCardDetails
          : getRdSchemeCardDetails // ignore: cast_nullable_to_non_nullable
              as bool,
      rdSchemeDataModelDatas: freezed == rdSchemeDataModelDatas
          ? _value.rdSchemeDataModelDatas
          : rdSchemeDataModelDatas // ignore: cast_nullable_to_non_nullable
              as RdSchemeCardModel?,
      loginToken: null == loginToken
          ? _value.loginToken
          : loginToken // ignore: cast_nullable_to_non_nullable
              as String,
      customerid: null == customerid
          ? _value.customerid
          : customerid // ignore: cast_nullable_to_non_nullable
              as String,
      fetchCustomerAccounts: null == fetchCustomerAccounts
          ? _value.fetchCustomerAccounts
          : fetchCustomerAccounts // ignore: cast_nullable_to_non_nullable
              as bool,
      accountNumber: null == accountNumber
          ? _value.accountNumber
          : accountNumber // ignore: cast_nullable_to_non_nullable
              as String,
      rdAccountCardindex: null == rdAccountCardindex
          ? _value.rdAccountCardindex
          : rdAccountCardindex // ignore: cast_nullable_to_non_nullable
              as int,
      depositid: null == depositid
          ? _value.depositid
          : depositid // ignore: cast_nullable_to_non_nullable
              as String,
      usertype: freezed == usertype
          ? _value.usertype
          : usertype // ignore: cast_nullable_to_non_nullable
              as String?,
      moduleId: null == moduleId
          ? _value.moduleId
          : moduleId // ignore: cast_nullable_to_non_nullable
              as int,
      index: null == index
          ? _value.index
          : index // ignore: cast_nullable_to_non_nullable
              as int,
      documentId: null == documentId
          ? _value.documentId
          : documentId // ignore: cast_nullable_to_non_nullable
              as String,
      rdCustomerAccountMoreInfoLoading: null == rdCustomerAccountMoreInfoLoading
          ? _value.rdCustomerAccountMoreInfoLoading
          : rdCustomerAccountMoreInfoLoading // ignore: cast_nullable_to_non_nullable
              as bool,
      rdCustomerAccountMoreInfoSuccessorfailureOption: null ==
              rdCustomerAccountMoreInfoSuccessorfailureOption
          ? _value.rdCustomerAccountMoreInfoSuccessorfailureOption
          : rdCustomerAccountMoreInfoSuccessorfailureOption // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdCustomerFailure, RdAccountMoreInfoModel>>,
      rdAccountMoreInfo: freezed == rdAccountMoreInfo
          ? _value.rdAccountMoreInfo
          : rdAccountMoreInfo // ignore: cast_nullable_to_non_nullable
              as RdAccountMoreInfoModel?,
      rdCustomerDetailsLoading: null == rdCustomerDetailsLoading
          ? _value.rdCustomerDetailsLoading
          : rdCustomerDetailsLoading // ignore: cast_nullable_to_non_nullable
              as bool,
      rdCustomerStatementTransactionLoading: null ==
              rdCustomerStatementTransactionLoading
          ? _value.rdCustomerStatementTransactionLoading
          : rdCustomerStatementTransactionLoading // ignore: cast_nullable_to_non_nullable
              as bool,
      rdcustomerStatementSuccessOrfailOption: null ==
              rdcustomerStatementSuccessOrfailOption
          ? _value.rdcustomerStatementSuccessOrfailOption
          : rdcustomerStatementSuccessOrfailOption // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdStatementFailures, RdStatementDetailsModel>>,
      rdStatementInfoSuccessOrfailOption: null ==
              rdStatementInfoSuccessOrfailOption
          ? _value.rdStatementInfoSuccessOrfailOption
          : rdStatementInfoSuccessOrfailOption // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdStatementFailures, RdStatementInfoModel>>,
      updatedrdStatementTransactions: freezed == updatedrdStatementTransactions
          ? _value.updatedrdStatementTransactions
          : updatedrdStatementTransactions // ignore: cast_nullable_to_non_nullable
              as List<UpdatedRdStatementTransactions>?,
      creditTotal: freezed == creditTotal
          ? _value.creditTotal
          : creditTotal // ignore: cast_nullable_to_non_nullable
              as double?,
      debitTotal: freezed == debitTotal
          ? _value.debitTotal
          : debitTotal // ignore: cast_nullable_to_non_nullable
              as double?,
      rdStatementTransactionSuccessOrfailOption: null ==
              rdStatementTransactionSuccessOrfailOption
          ? _value.rdStatementTransactionSuccessOrfailOption
          : rdStatementTransactionSuccessOrfailOption // ignore: cast_nullable_to_non_nullable
              as Option<
                  Either<RdStatementFailures, RdStatementTransactionModel>>,
      rdStatementDetailsModel: freezed == rdStatementDetailsModel
          ? _value.rdStatementDetailsModel
          : rdStatementDetailsModel // ignore: cast_nullable_to_non_nullable
              as RdStatementDetailsModel?,
      rdStatementInfoModel: freezed == rdStatementInfoModel
          ? _value.rdStatementInfoModel
          : rdStatementInfoModel // ignore: cast_nullable_to_non_nullable
              as RdStatementInfoModel?,
      rdStatementTransactionModel: freezed == rdStatementTransactionModel
          ? _value.rdStatementTransactionModel
          : rdStatementTransactionModel // ignore: cast_nullable_to_non_nullable
              as RdStatementTransactionModel?,
      rdpaymentgatewaycarddata: freezed == rdpaymentgatewaycarddata
          ? _value.rdpaymentgatewaycarddata
          : rdpaymentgatewaycarddata // ignore: cast_nullable_to_non_nullable
              as RdPaymentGatewayModel?,
      rdCustomerSettlementdata: freezed == rdCustomerSettlementdata
          ? _value.rdCustomerSettlementdata
          : rdCustomerSettlementdata // ignore: cast_nullable_to_non_nullable
              as RdCustomerSettlementModel?,
      rdpaymentgatewaycardfailureorsucessOption: null ==
              rdpaymentgatewaycardfailureorsucessOption
          ? _value.rdpaymentgatewaycardfailureorsucessOption
          : rdpaymentgatewaycardfailureorsucessOption // ignore: cast_nullable_to_non_nullable
              as Option<
                  Either<RdPaymentGatewayFailures, RdPaymentGatewayModel>>,
      rdsettlementfailureorsucessOption: null ==
              rdsettlementfailureorsucessOption
          ? _value.rdsettlementfailureorsucessOption
          : rdsettlementfailureorsucessOption // ignore: cast_nullable_to_non_nullable
              as Option<
                  Either<RdSettlementFailures, RdCustomerSettlementModel>>,
      rdcustomeraccountinfosucessorfailureoption: null ==
              rdcustomeraccountinfosucessorfailureoption
          ? _value.rdcustomeraccountinfosucessorfailureoption
          : rdcustomeraccountinfosucessorfailureoption // ignore: cast_nullable_to_non_nullable
              as Option<
                  Either<RdCustomerAccountFailures,
                      RdCustomerAccountinfoModel>>,
      rdCustomerAccountinfodatas: freezed == rdCustomerAccountinfodatas
          ? _value.rdCustomerAccountinfodatas
          : rdCustomerAccountinfodatas // ignore: cast_nullable_to_non_nullable
              as RdCustomerAccountinfoModel?,
      empSalesCode: null == empSalesCode
          ? _value.empSalesCode
          : empSalesCode // ignore: cast_nullable_to_non_nullable
              as bool,
      customerSalesCode: null == customerSalesCode
          ? _value.customerSalesCode
          : customerSalesCode // ignore: cast_nullable_to_non_nullable
              as bool,
      newRdSalesCode: null == newRdSalesCode
          ? _value.newRdSalesCode
          : newRdSalesCode // ignore: cast_nullable_to_non_nullable
              as String,
      rdAgentOrEmployeeFailureOrSuccess: null ==
              rdAgentOrEmployeeFailureOrSuccess
          ? _value.rdAgentOrEmployeeFailureOrSuccess
          : rdAgentOrEmployeeFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<NewRdFailure, RdAgentOrEmployeeModel>>,
      rdAgentOrEmployeeModel: freezed == rdAgentOrEmployeeModel
          ? _value.rdAgentOrEmployeeModel
          : rdAgentOrEmployeeModel // ignore: cast_nullable_to_non_nullable
              as RdAgentOrEmployeeModel?,
      rdTaxPayer: null == rdTaxPayer
          ? _value.rdTaxPayer
          : rdTaxPayer // ignore: cast_nullable_to_non_nullable
              as bool,
      rdTaxPayerFailureOrSuccess: null == rdTaxPayerFailureOrSuccess
          ? _value.rdTaxPayerFailureOrSuccess
          : rdTaxPayerFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<NewRdFailure, RdTaxPayerModel>>,
      rdTaxPayerValue: freezed == rdTaxPayerValue
          ? _value.rdTaxPayerValue
          : rdTaxPayerValue // ignore: cast_nullable_to_non_nullable
              as RdTaxPayerModel?,
      rdNomineeRelationLabel: freezed == rdNomineeRelationLabel
          ? _value.rdNomineeRelationLabel
          : rdNomineeRelationLabel // ignore: cast_nullable_to_non_nullable
              as String?,
      nominees: null == nominees
          ? _value.nominees
          : nominees // ignore: cast_nullable_to_non_nullable
              as List<AddedNomineeModel>,
      rdNomineeRelationsFailureOrSuccess: null ==
              rdNomineeRelationsFailureOrSuccess
          ? _value.rdNomineeRelationsFailureOrSuccess
          : rdNomineeRelationsFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<NewRdFailure, RdNomineeRelationDataModel>>,
      rdNomineeRelationDataModel: freezed == rdNomineeRelationDataModel
          ? _value.rdNomineeRelationDataModel
          : rdNomineeRelationDataModel // ignore: cast_nullable_to_non_nullable
              as RdNomineeRelationDataModel?,
      rdBalanceSettlementSharePercentage: null ==
              rdBalanceSettlementSharePercentage
          ? _value.rdBalanceSettlementSharePercentage
          : rdBalanceSettlementSharePercentage // ignore: cast_nullable_to_non_nullable
              as double,
      transferToSdNumber: freezed == transferToSdNumber
          ? _value.transferToSdNumber
          : transferToSdNumber // ignore: cast_nullable_to_non_nullable
              as String?,
      transferToSd: null == transferToSd
          ? _value.transferToSd
          : transferToSd // ignore: cast_nullable_to_non_nullable
              as bool,
      transferToSdFlag: null == transferToSdFlag
          ? _value.transferToSdFlag
          : transferToSdFlag // ignore: cast_nullable_to_non_nullable
              as int,
      newRdResponseLoading: null == newRdResponseLoading
          ? _value.newRdResponseLoading
          : newRdResponseLoading // ignore: cast_nullable_to_non_nullable
              as bool,
      newRdResponse: freezed == newRdResponse
          ? _value.newRdResponse
          : newRdResponse // ignore: cast_nullable_to_non_nullable
              as String?,
      newRdPostDataFailureOrSuccess: null == newRdPostDataFailureOrSuccess
          ? _value.newRdPostDataFailureOrSuccess
          : newRdPostDataFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<NewRdFailure, NewRdPostDataModel>>,
      newRdPostDataModel: freezed == newRdPostDataModel
          ? _value.newRdPostDataModel
          : newRdPostDataModel // ignore: cast_nullable_to_non_nullable
              as NewRdPostDataModel?,
      rdDepositPage: null == rdDepositPage
          ? _value.rdDepositPage
          : rdDepositPage // ignore: cast_nullable_to_non_nullable
              as bool,
      count: null == count
          ? _value.count
          : count // ignore: cast_nullable_to_non_nullable
              as int,
      customerId: null == customerId
          ? _value.customerId
          : customerId // ignore: cast_nullable_to_non_nullable
              as String,
      depositId: null == depositId
          ? _value.depositId
          : depositId // ignore: cast_nullable_to_non_nullable
              as String,
      rdPaymentCardIndex: null == rdPaymentCardIndex
          ? _value.rdPaymentCardIndex
          : rdPaymentCardIndex // ignore: cast_nullable_to_non_nullable
              as int,
      rdDepositTotalAmount: null == rdDepositTotalAmount
          ? _value.rdDepositTotalAmount
          : rdDepositTotalAmount // ignore: cast_nullable_to_non_nullable
              as double,
      rdDepositDueAmount: null == rdDepositDueAmount
          ? _value.rdDepositDueAmount
          : rdDepositDueAmount // ignore: cast_nullable_to_non_nullable
              as double,
      rdDepositDueCount: null == rdDepositDueCount
          ? _value.rdDepositDueCount
          : rdDepositDueCount // ignore: cast_nullable_to_non_nullable
              as int,
      subsidiaryBank: null == subsidiaryBank
          ? _value.subsidiaryBank
          : subsidiaryBank // ignore: cast_nullable_to_non_nullable
              as String,
      chequeNumber: null == chequeNumber
          ? _value.chequeNumber
          : chequeNumber // ignore: cast_nullable_to_non_nullable
              as String,
      bankBranchId: null == bankBranchId
          ? _value.bankBranchId
          : bankBranchId // ignore: cast_nullable_to_non_nullable
              as int,
      subsidiaryAccountNumber: null == subsidiaryAccountNumber
          ? _value.subsidiaryAccountNumber
          : subsidiaryAccountNumber // ignore: cast_nullable_to_non_nullable
              as int,
      depositAmount: null == depositAmount
          ? _value.depositAmount
          : depositAmount // ignore: cast_nullable_to_non_nullable
              as String,
      depositDate: null == depositDate
          ? _value.depositDate
          : depositDate // ignore: cast_nullable_to_non_nullable
              as DateTime,
      ifscCode: null == ifscCode
          ? _value.ifscCode
          : ifscCode // ignore: cast_nullable_to_non_nullable
              as String,
      isIfscValid: null == isIfscValid
          ? _value.isIfscValid
          : isIfscValid // ignore: cast_nullable_to_non_nullable
              as bool,
      transcationCardindex: null == transcationCardindex
          ? _value.transcationCardindex
          : transcationCardindex // ignore: cast_nullable_to_non_nullable
              as int,
      pendingInstallment: null == pendingInstallment
          ? _value.pendingInstallment
          : pendingInstallment // ignore: cast_nullable_to_non_nullable
              as int,
      interestTransferred: null == interestTransferred
          ? _value.interestTransferred
          : interestTransferred // ignore: cast_nullable_to_non_nullable
              as double,
      inDueValue: null == inDueValue
          ? _value.inDueValue
          : inDueValue // ignore: cast_nullable_to_non_nullable
              as int,
      currentDueValue: null == currentDueValue
          ? _value.currentDueValue
          : currentDueValue // ignore: cast_nullable_to_non_nullable
              as double,
      currentDueCount: null == currentDueCount
          ? _value.currentDueCount
          : currentDueCount // ignore: cast_nullable_to_non_nullable
              as int,
      rdSchemeCardIndex: null == rdSchemeCardIndex
          ? _value.rdSchemeCardIndex
          : rdSchemeCardIndex // ignore: cast_nullable_to_non_nullable
              as int,
      newRdAmount: null == newRdAmount
          ? _value.newRdAmount
          : newRdAmount // ignore: cast_nullable_to_non_nullable
              as String,
      rdMaturityValueIndex: null == rdMaturityValueIndex
          ? _value.rdMaturityValueIndex
          : rdMaturityValueIndex // ignore: cast_nullable_to_non_nullable
              as int,
      rdInstallmentPeriod: freezed == rdInstallmentPeriod
          ? _value.rdInstallmentPeriod
          : rdInstallmentPeriod // ignore: cast_nullable_to_non_nullable
              as int?,
      rdMaturityValue: freezed == rdMaturityValue
          ? _value.rdMaturityValue
          : rdMaturityValue // ignore: cast_nullable_to_non_nullable
              as double?,
      depositRealizationDate: null == depositRealizationDate
          ? _value.depositRealizationDate
          : depositRealizationDate // ignore: cast_nullable_to_non_nullable
              as DateTime,
      rdsettlementdepositFailureOrSuccess: null ==
              rdsettlementdepositFailureOrSuccess
          ? _value.rdsettlementdepositFailureOrSuccess
          : rdsettlementdepositFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdSettlementFailures, RdSettlementResponse>>,
      rdSettlementResponse: freezed == rdSettlementResponse
          ? _value.rdSettlementResponse
          : rdSettlementResponse // ignore: cast_nullable_to_non_nullable
              as RdSettlementResponse?,
      subsidiaryAccountName: null == subsidiaryAccountName
          ? _value.subsidiaryAccountName
          : subsidiaryAccountName // ignore: cast_nullable_to_non_nullable
              as String,
      concatinatedMonthAndAmountList: null == concatinatedMonthAndAmountList
          ? _value.concatinatedMonthAndAmountList
          : concatinatedMonthAndAmountList // ignore: cast_nullable_to_non_nullable
              as List<String>,
      fetchcustomeraccountloading: null == fetchcustomeraccountloading
          ? _value.fetchcustomeraccountloading
          : fetchcustomeraccountloading // ignore: cast_nullable_to_non_nullable
              as bool,
      rdcustomerActiveAccounts: freezed == rdcustomerActiveAccounts
          ? _value.rdcustomerActiveAccounts
          : rdcustomerActiveAccounts // ignore: cast_nullable_to_non_nullable
              as List<RdCustomerAccountInfoDataModel>?,
      customerSettlementLoading: null == customerSettlementLoading
          ? _value.customerSettlementLoading
          : customerSettlementLoading // ignore: cast_nullable_to_non_nullable
              as bool,
      rddepositFailureOrSuccess: null == rddepositFailureOrSuccess
          ? _value.rddepositFailureOrSuccess
          : rddepositFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdDepositFailure, RdDepositModel>>,
      rdoverdueFailureOrSuccess: null == rdoverdueFailureOrSuccess
          ? _value.rdoverdueFailureOrSuccess
          : rdoverdueFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdDepositFailure, RdOverDueModel>>,
      rdSubsidiaryBankFailureOrSuccess: null == rdSubsidiaryBankFailureOrSuccess
          ? _value.rdSubsidiaryBankFailureOrSuccess
          : rdSubsidiaryBankFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdSubsidiaryBankFailure, RdSubsidiaryBankModel>>,
      rdIfscFailureOrSuccess: null == rdIfscFailureOrSuccess
          ? _value.rdIfscFailureOrSuccess
          : rdIfscFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdIfscFailure, RdIfscModel>>,
      accountCardindex: null == accountCardindex
          ? _value.accountCardindex
          : accountCardindex // ignore: cast_nullable_to_non_nullable
              as int,
      rdDepositModel: freezed == rdDepositModel
          ? _value.rdDepositModel
          : rdDepositModel // ignore: cast_nullable_to_non_nullable
              as RdDepositModel?,
      rdOverDueModel: freezed == rdOverDueModel
          ? _value.rdOverDueModel
          : rdOverDueModel // ignore: cast_nullable_to_non_nullable
              as RdOverDueModel?,
      rdSubsidiaryBankModel: freezed == rdSubsidiaryBankModel
          ? _value.rdSubsidiaryBankModel
          : rdSubsidiaryBankModel // ignore: cast_nullable_to_non_nullable
              as RdSubsidiaryBankModel?,
      rdIfscModel: freezed == rdIfscModel
          ? _value.rdIfscModel
          : rdIfscModel // ignore: cast_nullable_to_non_nullable
              as RdIfscModel?,
      searchType: null == searchType
          ? _value.searchType
          : searchType // ignore: cast_nullable_to_non_nullable
              as String,
      searchValue: null == searchValue
          ? _value.searchValue
          : searchValue // ignore: cast_nullable_to_non_nullable
              as String,
      settlementResponseStatus: null == settlementResponseStatus
          ? _value.settlementResponseStatus
          : settlementResponseStatus // ignore: cast_nullable_to_non_nullable
              as String,
    ) as $Val);
  }

  @override
  @pragma('vm:prefer-inline')
  $RdSchemeCardModelCopyWith<$Res>? get rdSchemeDataModelDatas {
    if (_value.rdSchemeDataModelDatas == null) {
      return null;
    }

    return $RdSchemeCardModelCopyWith<$Res>(_value.rdSchemeDataModelDatas!,
        (value) {
      return _then(_value.copyWith(rdSchemeDataModelDatas: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdAccountMoreInfoModelCopyWith<$Res>? get rdAccountMoreInfo {
    if (_value.rdAccountMoreInfo == null) {
      return null;
    }

    return $RdAccountMoreInfoModelCopyWith<$Res>(_value.rdAccountMoreInfo!,
        (value) {
      return _then(_value.copyWith(rdAccountMoreInfo: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdStatementDetailsModelCopyWith<$Res>? get rdStatementDetailsModel {
    if (_value.rdStatementDetailsModel == null) {
      return null;
    }

    return $RdStatementDetailsModelCopyWith<$Res>(
        _value.rdStatementDetailsModel!, (value) {
      return _then(_value.copyWith(rdStatementDetailsModel: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdStatementInfoModelCopyWith<$Res>? get rdStatementInfoModel {
    if (_value.rdStatementInfoModel == null) {
      return null;
    }

    return $RdStatementInfoModelCopyWith<$Res>(_value.rdStatementInfoModel!,
        (value) {
      return _then(_value.copyWith(rdStatementInfoModel: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdStatementTransactionModelCopyWith<$Res>? get rdStatementTransactionModel {
    if (_value.rdStatementTransactionModel == null) {
      return null;
    }

    return $RdStatementTransactionModelCopyWith<$Res>(
        _value.rdStatementTransactionModel!, (value) {
      return _then(_value.copyWith(rdStatementTransactionModel: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdPaymentGatewayModelCopyWith<$Res>? get rdpaymentgatewaycarddata {
    if (_value.rdpaymentgatewaycarddata == null) {
      return null;
    }

    return $RdPaymentGatewayModelCopyWith<$Res>(
        _value.rdpaymentgatewaycarddata!, (value) {
      return _then(_value.copyWith(rdpaymentgatewaycarddata: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdCustomerSettlementModelCopyWith<$Res>? get rdCustomerSettlementdata {
    if (_value.rdCustomerSettlementdata == null) {
      return null;
    }

    return $RdCustomerSettlementModelCopyWith<$Res>(
        _value.rdCustomerSettlementdata!, (value) {
      return _then(_value.copyWith(rdCustomerSettlementdata: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdCustomerAccountinfoModelCopyWith<$Res>? get rdCustomerAccountinfodatas {
    if (_value.rdCustomerAccountinfodatas == null) {
      return null;
    }

    return $RdCustomerAccountinfoModelCopyWith<$Res>(
        _value.rdCustomerAccountinfodatas!, (value) {
      return _then(_value.copyWith(rdCustomerAccountinfodatas: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdAgentOrEmployeeModelCopyWith<$Res>? get rdAgentOrEmployeeModel {
    if (_value.rdAgentOrEmployeeModel == null) {
      return null;
    }

    return $RdAgentOrEmployeeModelCopyWith<$Res>(_value.rdAgentOrEmployeeModel!,
        (value) {
      return _then(_value.copyWith(rdAgentOrEmployeeModel: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdTaxPayerModelCopyWith<$Res>? get rdTaxPayerValue {
    if (_value.rdTaxPayerValue == null) {
      return null;
    }

    return $RdTaxPayerModelCopyWith<$Res>(_value.rdTaxPayerValue!, (value) {
      return _then(_value.copyWith(rdTaxPayerValue: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdNomineeRelationDataModelCopyWith<$Res>? get rdNomineeRelationDataModel {
    if (_value.rdNomineeRelationDataModel == null) {
      return null;
    }

    return $RdNomineeRelationDataModelCopyWith<$Res>(
        _value.rdNomineeRelationDataModel!, (value) {
      return _then(_value.copyWith(rdNomineeRelationDataModel: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $NewRdPostDataModelCopyWith<$Res>? get newRdPostDataModel {
    if (_value.newRdPostDataModel == null) {
      return null;
    }

    return $NewRdPostDataModelCopyWith<$Res>(_value.newRdPostDataModel!,
        (value) {
      return _then(_value.copyWith(newRdPostDataModel: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdSettlementResponseCopyWith<$Res>? get rdSettlementResponse {
    if (_value.rdSettlementResponse == null) {
      return null;
    }

    return $RdSettlementResponseCopyWith<$Res>(_value.rdSettlementResponse!,
        (value) {
      return _then(_value.copyWith(rdSettlementResponse: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdDepositModelCopyWith<$Res>? get rdDepositModel {
    if (_value.rdDepositModel == null) {
      return null;
    }

    return $RdDepositModelCopyWith<$Res>(_value.rdDepositModel!, (value) {
      return _then(_value.copyWith(rdDepositModel: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdOverDueModelCopyWith<$Res>? get rdOverDueModel {
    if (_value.rdOverDueModel == null) {
      return null;
    }

    return $RdOverDueModelCopyWith<$Res>(_value.rdOverDueModel!, (value) {
      return _then(_value.copyWith(rdOverDueModel: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdSubsidiaryBankModelCopyWith<$Res>? get rdSubsidiaryBankModel {
    if (_value.rdSubsidiaryBankModel == null) {
      return null;
    }

    return $RdSubsidiaryBankModelCopyWith<$Res>(_value.rdSubsidiaryBankModel!,
        (value) {
      return _then(_value.copyWith(rdSubsidiaryBankModel: value) as $Val);
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $RdIfscModelCopyWith<$Res>? get rdIfscModel {
    if (_value.rdIfscModel == null) {
      return null;
    }

    return $RdIfscModelCopyWith<$Res>(_value.rdIfscModel!, (value) {
      return _then(_value.copyWith(rdIfscModel: value) as $Val);
    });
  }
}

/// @nodoc
abstract class _$$_RdCustomerStateCopyWith<$Res>
    implements $RdCustomerStateCopyWith<$Res> {
  factory _$$_RdCustomerStateCopyWith(
          _$_RdCustomerState value, $Res Function(_$_RdCustomerState) then) =
      __$$_RdCustomerStateCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {int rdSalesCodeNone,
      String jwtToken,
      bool rdCustomerAccountInfoPage,
      bool rdSettlement,
      bool newRdPage,
      bool rdPage,
      bool rdStatementPage,
      String selectedPaymentCard,
      Option<Either<NewRdFailure, RdSchemeCardModel>>
          rdSchemeCardFailureOrSuccess,
      bool getRdSchemeCardDetails,
      RdSchemeCardModel? rdSchemeDataModelDatas,
      String loginToken,
      String customerid,
      bool fetchCustomerAccounts,
      String accountNumber,
      int rdAccountCardindex,
      String depositid,
      String? usertype,
      int moduleId,
      int index,
      String documentId,
      bool rdCustomerAccountMoreInfoLoading,
      Option<Either<RdCustomerFailure, RdAccountMoreInfoModel>>
          rdCustomerAccountMoreInfoSuccessorfailureOption,
      RdAccountMoreInfoModel? rdAccountMoreInfo,
      bool rdCustomerDetailsLoading,
      bool rdCustomerStatementTransactionLoading,
      Option<Either<RdStatementFailures, RdStatementDetailsModel>>
          rdcustomerStatementSuccessOrfailOption,
      Option<Either<RdStatementFailures, RdStatementInfoModel>>
          rdStatementInfoSuccessOrfailOption,
      List<UpdatedRdStatementTransactions>? updatedrdStatementTransactions,
      double? creditTotal,
      double? debitTotal,
      Option<Either<RdStatementFailures, RdStatementTransactionModel>>
          rdStatementTransactionSuccessOrfailOption,
      RdStatementDetailsModel? rdStatementDetailsModel,
      RdStatementInfoModel? rdStatementInfoModel,
      RdStatementTransactionModel? rdStatementTransactionModel,
      RdPaymentGatewayModel? rdpaymentgatewaycarddata,
      RdCustomerSettlementModel? rdCustomerSettlementdata,
      Option<Either<RdPaymentGatewayFailures, RdPaymentGatewayModel>>
          rdpaymentgatewaycardfailureorsucessOption,
      Option<Either<RdSettlementFailures, RdCustomerSettlementModel>>
          rdsettlementfailureorsucessOption,
      Option<Either<RdCustomerAccountFailures, RdCustomerAccountinfoModel>>
          rdcustomeraccountinfosucessorfailureoption,
      RdCustomerAccountinfoModel? rdCustomerAccountinfodatas,
      bool empSalesCode,
      bool customerSalesCode,
      String newRdSalesCode,
      Option<Either<NewRdFailure, RdAgentOrEmployeeModel>>
          rdAgentOrEmployeeFailureOrSuccess,
      RdAgentOrEmployeeModel? rdAgentOrEmployeeModel,
      bool rdTaxPayer,
      Option<Either<NewRdFailure, RdTaxPayerModel>> rdTaxPayerFailureOrSuccess,
      RdTaxPayerModel? rdTaxPayerValue,
      String? rdNomineeRelationLabel,
      List<AddedNomineeModel> nominees,
      Option<Either<NewRdFailure, RdNomineeRelationDataModel>>
          rdNomineeRelationsFailureOrSuccess,
      RdNomineeRelationDataModel? rdNomineeRelationDataModel,
      double rdBalanceSettlementSharePercentage,
      String? transferToSdNumber,
      bool transferToSd,
      int transferToSdFlag,
      bool newRdResponseLoading,
      String? newRdResponse,
      Option<Either<NewRdFailure, NewRdPostDataModel>>
          newRdPostDataFailureOrSuccess,
      NewRdPostDataModel? newRdPostDataModel,
      bool rdDepositPage,
      int count,
      String customerId,
      String depositId,
      int rdPaymentCardIndex,
      double rdDepositTotalAmount,
      double rdDepositDueAmount,
      int rdDepositDueCount,
      String subsidiaryBank,
      String chequeNumber,
      int bankBranchId,
      int subsidiaryAccountNumber,
      String depositAmount,
      DateTime depositDate,
      String ifscCode,
      bool isIfscValid,
      int transcationCardindex,
      int pendingInstallment,
      double interestTransferred,
      int inDueValue,
      double currentDueValue,
      int currentDueCount,
      int rdSchemeCardIndex,
      String newRdAmount,
      int rdMaturityValueIndex,
      int? rdInstallmentPeriod,
      double? rdMaturityValue,
      DateTime depositRealizationDate,
      Option<Either<RdSettlementFailures, RdSettlementResponse>>
          rdsettlementdepositFailureOrSuccess,
      RdSettlementResponse? rdSettlementResponse,
      String subsidiaryAccountName,
      List<String> concatinatedMonthAndAmountList,
      bool fetchcustomeraccountloading,
      List<RdCustomerAccountInfoDataModel>? rdcustomerActiveAccounts,
      bool customerSettlementLoading,
      Option<Either<RdDepositFailure, RdDepositModel>>
          rddepositFailureOrSuccess,
      Option<Either<RdDepositFailure, RdOverDueModel>>
          rdoverdueFailureOrSuccess,
      Option<Either<RdSubsidiaryBankFailure, RdSubsidiaryBankModel>>
          rdSubsidiaryBankFailureOrSuccess,
      Option<Either<RdIfscFailure, RdIfscModel>> rdIfscFailureOrSuccess,
      int accountCardindex,
      RdDepositModel? rdDepositModel,
      RdOverDueModel? rdOverDueModel,
      RdSubsidiaryBankModel? rdSubsidiaryBankModel,
      RdIfscModel? rdIfscModel,
      String searchType,
      String searchValue,
      String settlementResponseStatus});

  @override
  $RdSchemeCardModelCopyWith<$Res>? get rdSchemeDataModelDatas;
  @override
  $RdAccountMoreInfoModelCopyWith<$Res>? get rdAccountMoreInfo;
  @override
  $RdStatementDetailsModelCopyWith<$Res>? get rdStatementDetailsModel;
  @override
  $RdStatementInfoModelCopyWith<$Res>? get rdStatementInfoModel;
  @override
  $RdStatementTransactionModelCopyWith<$Res>? get rdStatementTransactionModel;
  @override
  $RdPaymentGatewayModelCopyWith<$Res>? get rdpaymentgatewaycarddata;
  @override
  $RdCustomerSettlementModelCopyWith<$Res>? get rdCustomerSettlementdata;
  @override
  $RdCustomerAccountinfoModelCopyWith<$Res>? get rdCustomerAccountinfodatas;
  @override
  $RdAgentOrEmployeeModelCopyWith<$Res>? get rdAgentOrEmployeeModel;
  @override
  $RdTaxPayerModelCopyWith<$Res>? get rdTaxPayerValue;
  @override
  $RdNomineeRelationDataModelCopyWith<$Res>? get rdNomineeRelationDataModel;
  @override
  $NewRdPostDataModelCopyWith<$Res>? get newRdPostDataModel;
  @override
  $RdSettlementResponseCopyWith<$Res>? get rdSettlementResponse;
  @override
  $RdDepositModelCopyWith<$Res>? get rdDepositModel;
  @override
  $RdOverDueModelCopyWith<$Res>? get rdOverDueModel;
  @override
  $RdSubsidiaryBankModelCopyWith<$Res>? get rdSubsidiaryBankModel;
  @override
  $RdIfscModelCopyWith<$Res>? get rdIfscModel;
}

/// @nodoc
class __$$_RdCustomerStateCopyWithImpl<$Res>
    extends _$RdCustomerStateCopyWithImpl<$Res, _$_RdCustomerState>
    implements _$$_RdCustomerStateCopyWith<$Res> {
  __$$_RdCustomerStateCopyWithImpl(
      _$_RdCustomerState _value, $Res Function(_$_RdCustomerState) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? rdSalesCodeNone = null,
    Object? jwtToken = null,
    Object? rdCustomerAccountInfoPage = null,
    Object? rdSettlement = null,
    Object? newRdPage = null,
    Object? rdPage = null,
    Object? rdStatementPage = null,
    Object? selectedPaymentCard = null,
    Object? rdSchemeCardFailureOrSuccess = null,
    Object? getRdSchemeCardDetails = null,
    Object? rdSchemeDataModelDatas = freezed,
    Object? loginToken = null,
    Object? customerid = null,
    Object? fetchCustomerAccounts = null,
    Object? accountNumber = null,
    Object? rdAccountCardindex = null,
    Object? depositid = null,
    Object? usertype = freezed,
    Object? moduleId = null,
    Object? index = null,
    Object? documentId = null,
    Object? rdCustomerAccountMoreInfoLoading = null,
    Object? rdCustomerAccountMoreInfoSuccessorfailureOption = null,
    Object? rdAccountMoreInfo = freezed,
    Object? rdCustomerDetailsLoading = null,
    Object? rdCustomerStatementTransactionLoading = null,
    Object? rdcustomerStatementSuccessOrfailOption = null,
    Object? rdStatementInfoSuccessOrfailOption = null,
    Object? updatedrdStatementTransactions = freezed,
    Object? creditTotal = freezed,
    Object? debitTotal = freezed,
    Object? rdStatementTransactionSuccessOrfailOption = null,
    Object? rdStatementDetailsModel = freezed,
    Object? rdStatementInfoModel = freezed,
    Object? rdStatementTransactionModel = freezed,
    Object? rdpaymentgatewaycarddata = freezed,
    Object? rdCustomerSettlementdata = freezed,
    Object? rdpaymentgatewaycardfailureorsucessOption = null,
    Object? rdsettlementfailureorsucessOption = null,
    Object? rdcustomeraccountinfosucessorfailureoption = null,
    Object? rdCustomerAccountinfodatas = freezed,
    Object? empSalesCode = null,
    Object? customerSalesCode = null,
    Object? newRdSalesCode = null,
    Object? rdAgentOrEmployeeFailureOrSuccess = null,
    Object? rdAgentOrEmployeeModel = freezed,
    Object? rdTaxPayer = null,
    Object? rdTaxPayerFailureOrSuccess = null,
    Object? rdTaxPayerValue = freezed,
    Object? rdNomineeRelationLabel = freezed,
    Object? nominees = null,
    Object? rdNomineeRelationsFailureOrSuccess = null,
    Object? rdNomineeRelationDataModel = freezed,
    Object? rdBalanceSettlementSharePercentage = null,
    Object? transferToSdNumber = freezed,
    Object? transferToSd = null,
    Object? transferToSdFlag = null,
    Object? newRdResponseLoading = null,
    Object? newRdResponse = freezed,
    Object? newRdPostDataFailureOrSuccess = null,
    Object? newRdPostDataModel = freezed,
    Object? rdDepositPage = null,
    Object? count = null,
    Object? customerId = null,
    Object? depositId = null,
    Object? rdPaymentCardIndex = null,
    Object? rdDepositTotalAmount = null,
    Object? rdDepositDueAmount = null,
    Object? rdDepositDueCount = null,
    Object? subsidiaryBank = null,
    Object? chequeNumber = null,
    Object? bankBranchId = null,
    Object? subsidiaryAccountNumber = null,
    Object? depositAmount = null,
    Object? depositDate = null,
    Object? ifscCode = null,
    Object? isIfscValid = null,
    Object? transcationCardindex = null,
    Object? pendingInstallment = null,
    Object? interestTransferred = null,
    Object? inDueValue = null,
    Object? currentDueValue = null,
    Object? currentDueCount = null,
    Object? rdSchemeCardIndex = null,
    Object? newRdAmount = null,
    Object? rdMaturityValueIndex = null,
    Object? rdInstallmentPeriod = freezed,
    Object? rdMaturityValue = freezed,
    Object? depositRealizationDate = null,
    Object? rdsettlementdepositFailureOrSuccess = null,
    Object? rdSettlementResponse = freezed,
    Object? subsidiaryAccountName = null,
    Object? concatinatedMonthAndAmountList = null,
    Object? fetchcustomeraccountloading = null,
    Object? rdcustomerActiveAccounts = freezed,
    Object? customerSettlementLoading = null,
    Object? rddepositFailureOrSuccess = null,
    Object? rdoverdueFailureOrSuccess = null,
    Object? rdSubsidiaryBankFailureOrSuccess = null,
    Object? rdIfscFailureOrSuccess = null,
    Object? accountCardindex = null,
    Object? rdDepositModel = freezed,
    Object? rdOverDueModel = freezed,
    Object? rdSubsidiaryBankModel = freezed,
    Object? rdIfscModel = freezed,
    Object? searchType = null,
    Object? searchValue = null,
    Object? settlementResponseStatus = null,
  }) {
    return _then(_$_RdCustomerState(
      rdSalesCodeNone: null == rdSalesCodeNone
          ? _value.rdSalesCodeNone
          : rdSalesCodeNone // ignore: cast_nullable_to_non_nullable
              as int,
      jwtToken: null == jwtToken
          ? _value.jwtToken
          : jwtToken // ignore: cast_nullable_to_non_nullable
              as String,
      rdCustomerAccountInfoPage: null == rdCustomerAccountInfoPage
          ? _value.rdCustomerAccountInfoPage
          : rdCustomerAccountInfoPage // ignore: cast_nullable_to_non_nullable
              as bool,
      rdSettlement: null == rdSettlement
          ? _value.rdSettlement
          : rdSettlement // ignore: cast_nullable_to_non_nullable
              as bool,
      newRdPage: null == newRdPage
          ? _value.newRdPage
          : newRdPage // ignore: cast_nullable_to_non_nullable
              as bool,
      rdPage: null == rdPage
          ? _value.rdPage
          : rdPage // ignore: cast_nullable_to_non_nullable
              as bool,
      rdStatementPage: null == rdStatementPage
          ? _value.rdStatementPage
          : rdStatementPage // ignore: cast_nullable_to_non_nullable
              as bool,
      selectedPaymentCard: null == selectedPaymentCard
          ? _value.selectedPaymentCard
          : selectedPaymentCard // ignore: cast_nullable_to_non_nullable
              as String,
      rdSchemeCardFailureOrSuccess: null == rdSchemeCardFailureOrSuccess
          ? _value.rdSchemeCardFailureOrSuccess
          : rdSchemeCardFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<NewRdFailure, RdSchemeCardModel>>,
      getRdSchemeCardDetails: null == getRdSchemeCardDetails
          ? _value.getRdSchemeCardDetails
          : getRdSchemeCardDetails // ignore: cast_nullable_to_non_nullable
              as bool,
      rdSchemeDataModelDatas: freezed == rdSchemeDataModelDatas
          ? _value.rdSchemeDataModelDatas
          : rdSchemeDataModelDatas // ignore: cast_nullable_to_non_nullable
              as RdSchemeCardModel?,
      loginToken: null == loginToken
          ? _value.loginToken
          : loginToken // ignore: cast_nullable_to_non_nullable
              as String,
      customerid: null == customerid
          ? _value.customerid
          : customerid // ignore: cast_nullable_to_non_nullable
              as String,
      fetchCustomerAccounts: null == fetchCustomerAccounts
          ? _value.fetchCustomerAccounts
          : fetchCustomerAccounts // ignore: cast_nullable_to_non_nullable
              as bool,
      accountNumber: null == accountNumber
          ? _value.accountNumber
          : accountNumber // ignore: cast_nullable_to_non_nullable
              as String,
      rdAccountCardindex: null == rdAccountCardindex
          ? _value.rdAccountCardindex
          : rdAccountCardindex // ignore: cast_nullable_to_non_nullable
              as int,
      depositid: null == depositid
          ? _value.depositid
          : depositid // ignore: cast_nullable_to_non_nullable
              as String,
      usertype: freezed == usertype
          ? _value.usertype
          : usertype // ignore: cast_nullable_to_non_nullable
              as String?,
      moduleId: null == moduleId
          ? _value.moduleId
          : moduleId // ignore: cast_nullable_to_non_nullable
              as int,
      index: null == index
          ? _value.index
          : index // ignore: cast_nullable_to_non_nullable
              as int,
      documentId: null == documentId
          ? _value.documentId
          : documentId // ignore: cast_nullable_to_non_nullable
              as String,
      rdCustomerAccountMoreInfoLoading: null == rdCustomerAccountMoreInfoLoading
          ? _value.rdCustomerAccountMoreInfoLoading
          : rdCustomerAccountMoreInfoLoading // ignore: cast_nullable_to_non_nullable
              as bool,
      rdCustomerAccountMoreInfoSuccessorfailureOption: null ==
              rdCustomerAccountMoreInfoSuccessorfailureOption
          ? _value.rdCustomerAccountMoreInfoSuccessorfailureOption
          : rdCustomerAccountMoreInfoSuccessorfailureOption // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdCustomerFailure, RdAccountMoreInfoModel>>,
      rdAccountMoreInfo: freezed == rdAccountMoreInfo
          ? _value.rdAccountMoreInfo
          : rdAccountMoreInfo // ignore: cast_nullable_to_non_nullable
              as RdAccountMoreInfoModel?,
      rdCustomerDetailsLoading: null == rdCustomerDetailsLoading
          ? _value.rdCustomerDetailsLoading
          : rdCustomerDetailsLoading // ignore: cast_nullable_to_non_nullable
              as bool,
      rdCustomerStatementTransactionLoading: null ==
              rdCustomerStatementTransactionLoading
          ? _value.rdCustomerStatementTransactionLoading
          : rdCustomerStatementTransactionLoading // ignore: cast_nullable_to_non_nullable
              as bool,
      rdcustomerStatementSuccessOrfailOption: null ==
              rdcustomerStatementSuccessOrfailOption
          ? _value.rdcustomerStatementSuccessOrfailOption
          : rdcustomerStatementSuccessOrfailOption // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdStatementFailures, RdStatementDetailsModel>>,
      rdStatementInfoSuccessOrfailOption: null ==
              rdStatementInfoSuccessOrfailOption
          ? _value.rdStatementInfoSuccessOrfailOption
          : rdStatementInfoSuccessOrfailOption // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdStatementFailures, RdStatementInfoModel>>,
      updatedrdStatementTransactions: freezed == updatedrdStatementTransactions
          ? _value._updatedrdStatementTransactions
          : updatedrdStatementTransactions // ignore: cast_nullable_to_non_nullable
              as List<UpdatedRdStatementTransactions>?,
      creditTotal: freezed == creditTotal
          ? _value.creditTotal
          : creditTotal // ignore: cast_nullable_to_non_nullable
              as double?,
      debitTotal: freezed == debitTotal
          ? _value.debitTotal
          : debitTotal // ignore: cast_nullable_to_non_nullable
              as double?,
      rdStatementTransactionSuccessOrfailOption: null ==
              rdStatementTransactionSuccessOrfailOption
          ? _value.rdStatementTransactionSuccessOrfailOption
          : rdStatementTransactionSuccessOrfailOption // ignore: cast_nullable_to_non_nullable
              as Option<
                  Either<RdStatementFailures, RdStatementTransactionModel>>,
      rdStatementDetailsModel: freezed == rdStatementDetailsModel
          ? _value.rdStatementDetailsModel
          : rdStatementDetailsModel // ignore: cast_nullable_to_non_nullable
              as RdStatementDetailsModel?,
      rdStatementInfoModel: freezed == rdStatementInfoModel
          ? _value.rdStatementInfoModel
          : rdStatementInfoModel // ignore: cast_nullable_to_non_nullable
              as RdStatementInfoModel?,
      rdStatementTransactionModel: freezed == rdStatementTransactionModel
          ? _value.rdStatementTransactionModel
          : rdStatementTransactionModel // ignore: cast_nullable_to_non_nullable
              as RdStatementTransactionModel?,
      rdpaymentgatewaycarddata: freezed == rdpaymentgatewaycarddata
          ? _value.rdpaymentgatewaycarddata
          : rdpaymentgatewaycarddata // ignore: cast_nullable_to_non_nullable
              as RdPaymentGatewayModel?,
      rdCustomerSettlementdata: freezed == rdCustomerSettlementdata
          ? _value.rdCustomerSettlementdata
          : rdCustomerSettlementdata // ignore: cast_nullable_to_non_nullable
              as RdCustomerSettlementModel?,
      rdpaymentgatewaycardfailureorsucessOption: null ==
              rdpaymentgatewaycardfailureorsucessOption
          ? _value.rdpaymentgatewaycardfailureorsucessOption
          : rdpaymentgatewaycardfailureorsucessOption // ignore: cast_nullable_to_non_nullable
              as Option<
                  Either<RdPaymentGatewayFailures, RdPaymentGatewayModel>>,
      rdsettlementfailureorsucessOption: null ==
              rdsettlementfailureorsucessOption
          ? _value.rdsettlementfailureorsucessOption
          : rdsettlementfailureorsucessOption // ignore: cast_nullable_to_non_nullable
              as Option<
                  Either<RdSettlementFailures, RdCustomerSettlementModel>>,
      rdcustomeraccountinfosucessorfailureoption: null ==
              rdcustomeraccountinfosucessorfailureoption
          ? _value.rdcustomeraccountinfosucessorfailureoption
          : rdcustomeraccountinfosucessorfailureoption // ignore: cast_nullable_to_non_nullable
              as Option<
                  Either<RdCustomerAccountFailures,
                      RdCustomerAccountinfoModel>>,
      rdCustomerAccountinfodatas: freezed == rdCustomerAccountinfodatas
          ? _value.rdCustomerAccountinfodatas
          : rdCustomerAccountinfodatas // ignore: cast_nullable_to_non_nullable
              as RdCustomerAccountinfoModel?,
      empSalesCode: null == empSalesCode
          ? _value.empSalesCode
          : empSalesCode // ignore: cast_nullable_to_non_nullable
              as bool,
      customerSalesCode: null == customerSalesCode
          ? _value.customerSalesCode
          : customerSalesCode // ignore: cast_nullable_to_non_nullable
              as bool,
      newRdSalesCode: null == newRdSalesCode
          ? _value.newRdSalesCode
          : newRdSalesCode // ignore: cast_nullable_to_non_nullable
              as String,
      rdAgentOrEmployeeFailureOrSuccess: null ==
              rdAgentOrEmployeeFailureOrSuccess
          ? _value.rdAgentOrEmployeeFailureOrSuccess
          : rdAgentOrEmployeeFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<NewRdFailure, RdAgentOrEmployeeModel>>,
      rdAgentOrEmployeeModel: freezed == rdAgentOrEmployeeModel
          ? _value.rdAgentOrEmployeeModel
          : rdAgentOrEmployeeModel // ignore: cast_nullable_to_non_nullable
              as RdAgentOrEmployeeModel?,
      rdTaxPayer: null == rdTaxPayer
          ? _value.rdTaxPayer
          : rdTaxPayer // ignore: cast_nullable_to_non_nullable
              as bool,
      rdTaxPayerFailureOrSuccess: null == rdTaxPayerFailureOrSuccess
          ? _value.rdTaxPayerFailureOrSuccess
          : rdTaxPayerFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<NewRdFailure, RdTaxPayerModel>>,
      rdTaxPayerValue: freezed == rdTaxPayerValue
          ? _value.rdTaxPayerValue
          : rdTaxPayerValue // ignore: cast_nullable_to_non_nullable
              as RdTaxPayerModel?,
      rdNomineeRelationLabel: freezed == rdNomineeRelationLabel
          ? _value.rdNomineeRelationLabel
          : rdNomineeRelationLabel // ignore: cast_nullable_to_non_nullable
              as String?,
      nominees: null == nominees
          ? _value._nominees
          : nominees // ignore: cast_nullable_to_non_nullable
              as List<AddedNomineeModel>,
      rdNomineeRelationsFailureOrSuccess: null ==
              rdNomineeRelationsFailureOrSuccess
          ? _value.rdNomineeRelationsFailureOrSuccess
          : rdNomineeRelationsFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<NewRdFailure, RdNomineeRelationDataModel>>,
      rdNomineeRelationDataModel: freezed == rdNomineeRelationDataModel
          ? _value.rdNomineeRelationDataModel
          : rdNomineeRelationDataModel // ignore: cast_nullable_to_non_nullable
              as RdNomineeRelationDataModel?,
      rdBalanceSettlementSharePercentage: null ==
              rdBalanceSettlementSharePercentage
          ? _value.rdBalanceSettlementSharePercentage
          : rdBalanceSettlementSharePercentage // ignore: cast_nullable_to_non_nullable
              as double,
      transferToSdNumber: freezed == transferToSdNumber
          ? _value.transferToSdNumber
          : transferToSdNumber // ignore: cast_nullable_to_non_nullable
              as String?,
      transferToSd: null == transferToSd
          ? _value.transferToSd
          : transferToSd // ignore: cast_nullable_to_non_nullable
              as bool,
      transferToSdFlag: null == transferToSdFlag
          ? _value.transferToSdFlag
          : transferToSdFlag // ignore: cast_nullable_to_non_nullable
              as int,
      newRdResponseLoading: null == newRdResponseLoading
          ? _value.newRdResponseLoading
          : newRdResponseLoading // ignore: cast_nullable_to_non_nullable
              as bool,
      newRdResponse: freezed == newRdResponse
          ? _value.newRdResponse
          : newRdResponse // ignore: cast_nullable_to_non_nullable
              as String?,
      newRdPostDataFailureOrSuccess: null == newRdPostDataFailureOrSuccess
          ? _value.newRdPostDataFailureOrSuccess
          : newRdPostDataFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<NewRdFailure, NewRdPostDataModel>>,
      newRdPostDataModel: freezed == newRdPostDataModel
          ? _value.newRdPostDataModel
          : newRdPostDataModel // ignore: cast_nullable_to_non_nullable
              as NewRdPostDataModel?,
      rdDepositPage: null == rdDepositPage
          ? _value.rdDepositPage
          : rdDepositPage // ignore: cast_nullable_to_non_nullable
              as bool,
      count: null == count
          ? _value.count
          : count // ignore: cast_nullable_to_non_nullable
              as int,
      customerId: null == customerId
          ? _value.customerId
          : customerId // ignore: cast_nullable_to_non_nullable
              as String,
      depositId: null == depositId
          ? _value.depositId
          : depositId // ignore: cast_nullable_to_non_nullable
              as String,
      rdPaymentCardIndex: null == rdPaymentCardIndex
          ? _value.rdPaymentCardIndex
          : rdPaymentCardIndex // ignore: cast_nullable_to_non_nullable
              as int,
      rdDepositTotalAmount: null == rdDepositTotalAmount
          ? _value.rdDepositTotalAmount
          : rdDepositTotalAmount // ignore: cast_nullable_to_non_nullable
              as double,
      rdDepositDueAmount: null == rdDepositDueAmount
          ? _value.rdDepositDueAmount
          : rdDepositDueAmount // ignore: cast_nullable_to_non_nullable
              as double,
      rdDepositDueCount: null == rdDepositDueCount
          ? _value.rdDepositDueCount
          : rdDepositDueCount // ignore: cast_nullable_to_non_nullable
              as int,
      subsidiaryBank: null == subsidiaryBank
          ? _value.subsidiaryBank
          : subsidiaryBank // ignore: cast_nullable_to_non_nullable
              as String,
      chequeNumber: null == chequeNumber
          ? _value.chequeNumber
          : chequeNumber // ignore: cast_nullable_to_non_nullable
              as String,
      bankBranchId: null == bankBranchId
          ? _value.bankBranchId
          : bankBranchId // ignore: cast_nullable_to_non_nullable
              as int,
      subsidiaryAccountNumber: null == subsidiaryAccountNumber
          ? _value.subsidiaryAccountNumber
          : subsidiaryAccountNumber // ignore: cast_nullable_to_non_nullable
              as int,
      depositAmount: null == depositAmount
          ? _value.depositAmount
          : depositAmount // ignore: cast_nullable_to_non_nullable
              as String,
      depositDate: null == depositDate
          ? _value.depositDate
          : depositDate // ignore: cast_nullable_to_non_nullable
              as DateTime,
      ifscCode: null == ifscCode
          ? _value.ifscCode
          : ifscCode // ignore: cast_nullable_to_non_nullable
              as String,
      isIfscValid: null == isIfscValid
          ? _value.isIfscValid
          : isIfscValid // ignore: cast_nullable_to_non_nullable
              as bool,
      transcationCardindex: null == transcationCardindex
          ? _value.transcationCardindex
          : transcationCardindex // ignore: cast_nullable_to_non_nullable
              as int,
      pendingInstallment: null == pendingInstallment
          ? _value.pendingInstallment
          : pendingInstallment // ignore: cast_nullable_to_non_nullable
              as int,
      interestTransferred: null == interestTransferred
          ? _value.interestTransferred
          : interestTransferred // ignore: cast_nullable_to_non_nullable
              as double,
      inDueValue: null == inDueValue
          ? _value.inDueValue
          : inDueValue // ignore: cast_nullable_to_non_nullable
              as int,
      currentDueValue: null == currentDueValue
          ? _value.currentDueValue
          : currentDueValue // ignore: cast_nullable_to_non_nullable
              as double,
      currentDueCount: null == currentDueCount
          ? _value.currentDueCount
          : currentDueCount // ignore: cast_nullable_to_non_nullable
              as int,
      rdSchemeCardIndex: null == rdSchemeCardIndex
          ? _value.rdSchemeCardIndex
          : rdSchemeCardIndex // ignore: cast_nullable_to_non_nullable
              as int,
      newRdAmount: null == newRdAmount
          ? _value.newRdAmount
          : newRdAmount // ignore: cast_nullable_to_non_nullable
              as String,
      rdMaturityValueIndex: null == rdMaturityValueIndex
          ? _value.rdMaturityValueIndex
          : rdMaturityValueIndex // ignore: cast_nullable_to_non_nullable
              as int,
      rdInstallmentPeriod: freezed == rdInstallmentPeriod
          ? _value.rdInstallmentPeriod
          : rdInstallmentPeriod // ignore: cast_nullable_to_non_nullable
              as int?,
      rdMaturityValue: freezed == rdMaturityValue
          ? _value.rdMaturityValue
          : rdMaturityValue // ignore: cast_nullable_to_non_nullable
              as double?,
      depositRealizationDate: null == depositRealizationDate
          ? _value.depositRealizationDate
          : depositRealizationDate // ignore: cast_nullable_to_non_nullable
              as DateTime,
      rdsettlementdepositFailureOrSuccess: null ==
              rdsettlementdepositFailureOrSuccess
          ? _value.rdsettlementdepositFailureOrSuccess
          : rdsettlementdepositFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdSettlementFailures, RdSettlementResponse>>,
      rdSettlementResponse: freezed == rdSettlementResponse
          ? _value.rdSettlementResponse
          : rdSettlementResponse // ignore: cast_nullable_to_non_nullable
              as RdSettlementResponse?,
      subsidiaryAccountName: null == subsidiaryAccountName
          ? _value.subsidiaryAccountName
          : subsidiaryAccountName // ignore: cast_nullable_to_non_nullable
              as String,
      concatinatedMonthAndAmountList: null == concatinatedMonthAndAmountList
          ? _value._concatinatedMonthAndAmountList
          : concatinatedMonthAndAmountList // ignore: cast_nullable_to_non_nullable
              as List<String>,
      fetchcustomeraccountloading: null == fetchcustomeraccountloading
          ? _value.fetchcustomeraccountloading
          : fetchcustomeraccountloading // ignore: cast_nullable_to_non_nullable
              as bool,
      rdcustomerActiveAccounts: freezed == rdcustomerActiveAccounts
          ? _value._rdcustomerActiveAccounts
          : rdcustomerActiveAccounts // ignore: cast_nullable_to_non_nullable
              as List<RdCustomerAccountInfoDataModel>?,
      customerSettlementLoading: null == customerSettlementLoading
          ? _value.customerSettlementLoading
          : customerSettlementLoading // ignore: cast_nullable_to_non_nullable
              as bool,
      rddepositFailureOrSuccess: null == rddepositFailureOrSuccess
          ? _value.rddepositFailureOrSuccess
          : rddepositFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdDepositFailure, RdDepositModel>>,
      rdoverdueFailureOrSuccess: null == rdoverdueFailureOrSuccess
          ? _value.rdoverdueFailureOrSuccess
          : rdoverdueFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdDepositFailure, RdOverDueModel>>,
      rdSubsidiaryBankFailureOrSuccess: null == rdSubsidiaryBankFailureOrSuccess
          ? _value.rdSubsidiaryBankFailureOrSuccess
          : rdSubsidiaryBankFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdSubsidiaryBankFailure, RdSubsidiaryBankModel>>,
      rdIfscFailureOrSuccess: null == rdIfscFailureOrSuccess
          ? _value.rdIfscFailureOrSuccess
          : rdIfscFailureOrSuccess // ignore: cast_nullable_to_non_nullable
              as Option<Either<RdIfscFailure, RdIfscModel>>,
      accountCardindex: null == accountCardindex
          ? _value.accountCardindex
          : accountCardindex // ignore: cast_nullable_to_non_nullable
              as int,
      rdDepositModel: freezed == rdDepositModel
          ? _value.rdDepositModel
          : rdDepositModel // ignore: cast_nullable_to_non_nullable
              as RdDepositModel?,
      rdOverDueModel: freezed == rdOverDueModel
          ? _value.rdOverDueModel
          : rdOverDueModel // ignore: cast_nullable_to_non_nullable
              as RdOverDueModel?,
      rdSubsidiaryBankModel: freezed == rdSubsidiaryBankModel
          ? _value.rdSubsidiaryBankModel
          : rdSubsidiaryBankModel // ignore: cast_nullable_to_non_nullable
              as RdSubsidiaryBankModel?,
      rdIfscModel: freezed == rdIfscModel
          ? _value.rdIfscModel
          : rdIfscModel // ignore: cast_nullable_to_non_nullable
              as RdIfscModel?,
      searchType: null == searchType
          ? _value.searchType
          : searchType // ignore: cast_nullable_to_non_nullable
              as String,
      searchValue: null == searchValue
          ? _value.searchValue
          : searchValue // ignore: cast_nullable_to_non_nullable
              as String,
      settlementResponseStatus: null == settlementResponseStatus
          ? _value.settlementResponseStatus
          : settlementResponseStatus // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$_RdCustomerState implements _RdCustomerState {
  const _$_RdCustomerState(
      {required this.rdSalesCodeNone,
      required this.jwtToken,
      required this.rdCustomerAccountInfoPage,
      required this.rdSettlement,
      required this.newRdPage,
      required this.rdPage,
      required this.rdStatementPage,
      required this.selectedPaymentCard,
      required this.rdSchemeCardFailureOrSuccess,
      required this.getRdSchemeCardDetails,
      this.rdSchemeDataModelDatas,
      required this.loginToken,
      required this.customerid,
      required this.fetchCustomerAccounts,
      required this.accountNumber,
      required this.rdAccountCardindex,
      required this.depositid,
      required this.usertype,
      required this.moduleId,
      required this.index,
      required this.documentId,
      required this.rdCustomerAccountMoreInfoLoading,
      required this.rdCustomerAccountMoreInfoSuccessorfailureOption,
      this.rdAccountMoreInfo,
      required this.rdCustomerDetailsLoading,
      required this.rdCustomerStatementTransactionLoading,
      required this.rdcustomerStatementSuccessOrfailOption,
      required this.rdStatementInfoSuccessOrfailOption,
      final List<UpdatedRdStatementTransactions>?
          updatedrdStatementTransactions,
      this.creditTotal,
      this.debitTotal,
      required this.rdStatementTransactionSuccessOrfailOption,
      this.rdStatementDetailsModel,
      this.rdStatementInfoModel,
      this.rdStatementTransactionModel,
      this.rdpaymentgatewaycarddata,
      this.rdCustomerSettlementdata,
      required this.rdpaymentgatewaycardfailureorsucessOption,
      required this.rdsettlementfailureorsucessOption,
      required this.rdcustomeraccountinfosucessorfailureoption,
      this.rdCustomerAccountinfodatas,
      required this.empSalesCode,
      required this.customerSalesCode,
      required this.newRdSalesCode,
      required this.rdAgentOrEmployeeFailureOrSuccess,
      this.rdAgentOrEmployeeModel,
      required this.rdTaxPayer,
      required this.rdTaxPayerFailureOrSuccess,
      this.rdTaxPayerValue,
      required this.rdNomineeRelationLabel,
      required final List<AddedNomineeModel> nominees,
      required this.rdNomineeRelationsFailureOrSuccess,
      this.rdNomineeRelationDataModel,
      required this.rdBalanceSettlementSharePercentage,
      required this.transferToSdNumber,
      required this.transferToSd,
      required this.transferToSdFlag,
      required this.newRdResponseLoading,
      required this.newRdResponse,
      required this.newRdPostDataFailureOrSuccess,
      this.newRdPostDataModel,
      required this.rdDepositPage,
      required this.count,
      required this.customerId,
      required this.depositId,
      required this.rdPaymentCardIndex,
      required this.rdDepositTotalAmount,
      required this.rdDepositDueAmount,
      required this.rdDepositDueCount,
      required this.subsidiaryBank,
      required this.chequeNumber,
      required this.bankBranchId,
      required this.subsidiaryAccountNumber,
      required this.depositAmount,
      required this.depositDate,
      required this.ifscCode,
      required this.isIfscValid,
      required this.transcationCardindex,
      required this.pendingInstallment,
      required this.interestTransferred,
      required this.inDueValue,
      required this.currentDueValue,
      required this.currentDueCount,
      required this.rdSchemeCardIndex,
      required this.newRdAmount,
      required this.rdMaturityValueIndex,
      required this.rdInstallmentPeriod,
      required this.rdMaturityValue,
      required this.depositRealizationDate,
      required this.rdsettlementdepositFailureOrSuccess,
      this.rdSettlementResponse,
      required this.subsidiaryAccountName,
      required final List<String> concatinatedMonthAndAmountList,
      required this.fetchcustomeraccountloading,
      final List<RdCustomerAccountInfoDataModel>? rdcustomerActiveAccounts,
      required this.customerSettlementLoading,
      required this.rddepositFailureOrSuccess,
      required this.rdoverdueFailureOrSuccess,
      required this.rdSubsidiaryBankFailureOrSuccess,
      required this.rdIfscFailureOrSuccess,
      required this.accountCardindex,
      this.rdDepositModel,
      this.rdOverDueModel,
      this.rdSubsidiaryBankModel,
      this.rdIfscModel,
      required this.searchType,
      required this.searchValue,
      required this.settlementResponseStatus})
      : _updatedrdStatementTransactions = updatedrdStatementTransactions,
        _nominees = nominees,
        _concatinatedMonthAndAmountList = concatinatedMonthAndAmountList,
        _rdcustomerActiveAccounts = rdcustomerActiveAccounts;

  @override
  final int rdSalesCodeNone;
  @override
  final String jwtToken;
  @override
  final bool rdCustomerAccountInfoPage;
  @override
  final bool rdSettlement;
  @override
  final bool newRdPage;
  @override
  final bool rdPage;
  @override
  final bool rdStatementPage;
  @override
  final String selectedPaymentCard;
  @override
  final Option<Either<NewRdFailure, RdSchemeCardModel>>
      rdSchemeCardFailureOrSuccess;
  @override
  final bool getRdSchemeCardDetails;
  @override
  final RdSchemeCardModel? rdSchemeDataModelDatas;
  @override
  final String loginToken;
  @override
  final String customerid;
  @override
  final bool fetchCustomerAccounts;
  @override
  final String accountNumber;
  @override
  final int rdAccountCardindex;
  @override
  final String depositid;
  @override
  final String? usertype;
//required String paymenttype,
  @override
  final int moduleId;
//-----------Account Details------------
  @override
  final int index;
  @override
  final String documentId;
  @override
  final bool rdCustomerAccountMoreInfoLoading;
  @override
  final Option<Either<RdCustomerFailure, RdAccountMoreInfoModel>>
      rdCustomerAccountMoreInfoSuccessorfailureOption;
  @override
  final RdAccountMoreInfoModel? rdAccountMoreInfo;
//rd Statement-------------------------------------------------------
  @override
  final bool rdCustomerDetailsLoading;
  @override
  final bool rdCustomerStatementTransactionLoading;
  @override
  final Option<Either<RdStatementFailures, RdStatementDetailsModel>>
      rdcustomerStatementSuccessOrfailOption;
  @override
  final Option<Either<RdStatementFailures, RdStatementInfoModel>>
      rdStatementInfoSuccessOrfailOption;
  final List<UpdatedRdStatementTransactions>? _updatedrdStatementTransactions;
  @override
  List<UpdatedRdStatementTransactions>? get updatedrdStatementTransactions {
    final value = _updatedrdStatementTransactions;
    if (value == null) return null;
    if (_updatedrdStatementTransactions is EqualUnmodifiableListView)
      return _updatedrdStatementTransactions;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(value);
  }

  @override
  final double? creditTotal;
  @override
  final double? debitTotal;
  @override
  final Option<Either<RdStatementFailures, RdStatementTransactionModel>>
      rdStatementTransactionSuccessOrfailOption;
  @override
  final RdStatementDetailsModel? rdStatementDetailsModel;
  @override
  final RdStatementInfoModel? rdStatementInfoModel;
  @override
  final RdStatementTransactionModel? rdStatementTransactionModel;
//---------------------------------------------------------------------------------------------
  @override
  final RdPaymentGatewayModel? rdpaymentgatewaycarddata;
  @override
  final RdCustomerSettlementModel? rdCustomerSettlementdata;
  @override
  final Option<Either<RdPaymentGatewayFailures, RdPaymentGatewayModel>>
      rdpaymentgatewaycardfailureorsucessOption;
//--------------------------------------------------------------------------------------
  @override
  final Option<Either<RdSettlementFailures, RdCustomerSettlementModel>>
      rdsettlementfailureorsucessOption;
  @override
  final Option<Either<RdCustomerAccountFailures, RdCustomerAccountinfoModel>>
      rdcustomeraccountinfosucessorfailureoption;
  @override
  final RdCustomerAccountinfoModel? rdCustomerAccountinfodatas;
// required Option<Either<RdPaymentGatewayFailures, RdPaymentGatewayModel>>
//     rdpaymentgatewaycardfailureorsucessOption,
// RdPaymentGatewayModel? rdpaymentgatewaycarddata,
///////Rd Sales Code/////////
  @override
  final bool empSalesCode;
  @override
  final bool customerSalesCode;
  @override
  final String newRdSalesCode;
  @override
  final Option<Either<NewRdFailure, RdAgentOrEmployeeModel>>
      rdAgentOrEmployeeFailureOrSuccess;
  @override
  final RdAgentOrEmployeeModel? rdAgentOrEmployeeModel;
//////Rd Tax Payer////////
  @override
  final bool rdTaxPayer;
  @override
  final Option<Either<NewRdFailure, RdTaxPayerModel>>
      rdTaxPayerFailureOrSuccess;
  @override
  final RdTaxPayerModel? rdTaxPayerValue;
/////Rd Nominee Relations//////
  @override
  final String? rdNomineeRelationLabel;
  final List<AddedNomineeModel> _nominees;
  @override
  List<AddedNomineeModel> get nominees {
    if (_nominees is EqualUnmodifiableListView) return _nominees;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_nominees);
  }

  @override
  final Option<Either<NewRdFailure, RdNomineeRelationDataModel>>
      rdNomineeRelationsFailureOrSuccess;
  @override
  final RdNomineeRelationDataModel? rdNomineeRelationDataModel;
  @override
  final double rdBalanceSettlementSharePercentage;
//////Transfer to Sd///////////
  @override
  final String? transferToSdNumber;
  @override
  final bool transferToSd;
  @override
  final int transferToSdFlag;
///////Post New Rd/////////////
  @override
  final bool newRdResponseLoading;
  @override
  final String? newRdResponse;
  @override
  final Option<Either<NewRdFailure, NewRdPostDataModel>>
      newRdPostDataFailureOrSuccess;
  @override
  final NewRdPostDataModel? newRdPostDataModel;
/////Deposit////////////
  @override
  final bool rdDepositPage;
  @override
  final int count;
  @override
  final String customerId;
  @override
  final String depositId;
  @override
  final int rdPaymentCardIndex;
  @override
  final double rdDepositTotalAmount;
  @override
  final double rdDepositDueAmount;
  @override
  final int rdDepositDueCount;
  @override
  final String subsidiaryBank;
  @override
  final String chequeNumber;
  @override
  final int bankBranchId;
  @override
  final int subsidiaryAccountNumber;
  @override
  final String depositAmount;
  @override
  final DateTime depositDate;
  @override
  final String ifscCode;
  @override
  final bool isIfscValid;
  @override
  final int transcationCardindex;
  @override
  final int pendingInstallment;
  @override
  final double interestTransferred;
  @override
  final int inDueValue;
  @override
  final double currentDueValue;
  @override
  final int currentDueCount;
//////Maturity Amount TextFormField///////////
  @override
  final int rdSchemeCardIndex;
  @override
  final String newRdAmount;
  @override
  final int rdMaturityValueIndex;
///////Maturity Drop Down /////////////////
  @override
  final int? rdInstallmentPeriod;
  @override
  final double? rdMaturityValue;
  @override
  final DateTime depositRealizationDate;
  @override
  final Option<Either<RdSettlementFailures, RdSettlementResponse>>
      rdsettlementdepositFailureOrSuccess;
  @override
  final RdSettlementResponse? rdSettlementResponse;
// required int subsidiaryAccountNumber,
// required int bankBranchId,
  @override
  final String subsidiaryAccountName;
  final List<String> _concatinatedMonthAndAmountList;
  @override
  List<String> get concatinatedMonthAndAmountList {
    if (_concatinatedMonthAndAmountList is EqualUnmodifiableListView)
      return _concatinatedMonthAndAmountList;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_concatinatedMonthAndAmountList);
  }

  @override
  final bool fetchcustomeraccountloading;
//////////////////////////////////
  final List<RdCustomerAccountInfoDataModel>? _rdcustomerActiveAccounts;
//////////////////////////////////
  @override
  List<RdCustomerAccountInfoDataModel>? get rdcustomerActiveAccounts {
    final value = _rdcustomerActiveAccounts;
    if (value == null) return null;
    if (_rdcustomerActiveAccounts is EqualUnmodifiableListView)
      return _rdcustomerActiveAccounts;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(value);
  }

//////////////Deposit///////////////////
////////////
  @override
  final bool customerSettlementLoading;
  @override
  final Option<Either<RdDepositFailure, RdDepositModel>>
      rddepositFailureOrSuccess;
  @override
  final Option<Either<RdDepositFailure, RdOverDueModel>>
      rdoverdueFailureOrSuccess;
  @override
  final Option<Either<RdSubsidiaryBankFailure, RdSubsidiaryBankModel>>
      rdSubsidiaryBankFailureOrSuccess;
  @override
  final Option<Either<RdIfscFailure, RdIfscModel>> rdIfscFailureOrSuccess;
  @override
  final int accountCardindex;
/////////Deposit Models//////////////
  @override
  final RdDepositModel? rdDepositModel;
  @override
  final RdOverDueModel? rdOverDueModel;
  @override
  final RdSubsidiaryBankModel? rdSubsidiaryBankModel;
  @override
  final RdIfscModel? rdIfscModel;
  @override
  final String searchType;
  @override
  final String searchValue;
  @override
  final String settlementResponseStatus;

  @override
  String toString() {
    return 'RdCustomerState(rdSalesCodeNone: $rdSalesCodeNone, jwtToken: $jwtToken, rdCustomerAccountInfoPage: $rdCustomerAccountInfoPage, rdSettlement: $rdSettlement, newRdPage: $newRdPage, rdPage: $rdPage, rdStatementPage: $rdStatementPage, selectedPaymentCard: $selectedPaymentCard, rdSchemeCardFailureOrSuccess: $rdSchemeCardFailureOrSuccess, getRdSchemeCardDetails: $getRdSchemeCardDetails, rdSchemeDataModelDatas: $rdSchemeDataModelDatas, loginToken: $loginToken, customerid: $customerid, fetchCustomerAccounts: $fetchCustomerAccounts, accountNumber: $accountNumber, rdAccountCardindex: $rdAccountCardindex, depositid: $depositid, usertype: $usertype, moduleId: $moduleId, index: $index, documentId: $documentId, rdCustomerAccountMoreInfoLoading: $rdCustomerAccountMoreInfoLoading, rdCustomerAccountMoreInfoSuccessorfailureOption: $rdCustomerAccountMoreInfoSuccessorfailureOption, rdAccountMoreInfo: $rdAccountMoreInfo, rdCustomerDetailsLoading: $rdCustomerDetailsLoading, rdCustomerStatementTransactionLoading: $rdCustomerStatementTransactionLoading, rdcustomerStatementSuccessOrfailOption: $rdcustomerStatementSuccessOrfailOption, rdStatementInfoSuccessOrfailOption: $rdStatementInfoSuccessOrfailOption, updatedrdStatementTransactions: $updatedrdStatementTransactions, creditTotal: $creditTotal, debitTotal: $debitTotal, rdStatementTransactionSuccessOrfailOption: $rdStatementTransactionSuccessOrfailOption, rdStatementDetailsModel: $rdStatementDetailsModel, rdStatementInfoModel: $rdStatementInfoModel, rdStatementTransactionModel: $rdStatementTransactionModel, rdpaymentgatewaycarddata: $rdpaymentgatewaycarddata, rdCustomerSettlementdata: $rdCustomerSettlementdata, rdpaymentgatewaycardfailureorsucessOption: $rdpaymentgatewaycardfailureorsucessOption, rdsettlementfailureorsucessOption: $rdsettlementfailureorsucessOption, rdcustomeraccountinfosucessorfailureoption: $rdcustomeraccountinfosucessorfailureoption, rdCustomerAccountinfodatas: $rdCustomerAccountinfodatas, empSalesCode: $empSalesCode, customerSalesCode: $customerSalesCode, newRdSalesCode: $newRdSalesCode, rdAgentOrEmployeeFailureOrSuccess: $rdAgentOrEmployeeFailureOrSuccess, rdAgentOrEmployeeModel: $rdAgentOrEmployeeModel, rdTaxPayer: $rdTaxPayer, rdTaxPayerFailureOrSuccess: $rdTaxPayerFailureOrSuccess, rdTaxPayerValue: $rdTaxPayerValue, rdNomineeRelationLabel: $rdNomineeRelationLabel, nominees: $nominees, rdNomineeRelationsFailureOrSuccess: $rdNomineeRelationsFailureOrSuccess, rdNomineeRelationDataModel: $rdNomineeRelationDataModel, rdBalanceSettlementSharePercentage: $rdBalanceSettlementSharePercentage, transferToSdNumber: $transferToSdNumber, transferToSd: $transferToSd, transferToSdFlag: $transferToSdFlag, newRdResponseLoading: $newRdResponseLoading, newRdResponse: $newRdResponse, newRdPostDataFailureOrSuccess: $newRdPostDataFailureOrSuccess, newRdPostDataModel: $newRdPostDataModel, rdDepositPage: $rdDepositPage, count: $count, customerId: $customerId, depositId: $depositId, rdPaymentCardIndex: $rdPaymentCardIndex, rdDepositTotalAmount: $rdDepositTotalAmount, rdDepositDueAmount: $rdDepositDueAmount, rdDepositDueCount: $rdDepositDueCount, subsidiaryBank: $subsidiaryBank, chequeNumber: $chequeNumber, bankBranchId: $bankBranchId, subsidiaryAccountNumber: $subsidiaryAccountNumber, depositAmount: $depositAmount, depositDate: $depositDate, ifscCode: $ifscCode, isIfscValid: $isIfscValid, transcationCardindex: $transcationCardindex, pendingInstallment: $pendingInstallment, interestTransferred: $interestTransferred, inDueValue: $inDueValue, currentDueValue: $currentDueValue, currentDueCount: $currentDueCount, rdSchemeCardIndex: $rdSchemeCardIndex, newRdAmount: $newRdAmount, rdMaturityValueIndex: $rdMaturityValueIndex, rdInstallmentPeriod: $rdInstallmentPeriod, rdMaturityValue: $rdMaturityValue, depositRealizationDate: $depositRealizationDate, rdsettlementdepositFailureOrSuccess: $rdsettlementdepositFailureOrSuccess, rdSettlementResponse: $rdSettlementResponse, subsidiaryAccountName: $subsidiaryAccountName, concatinatedMonthAndAmountList: $concatinatedMonthAndAmountList, fetchcustomeraccountloading: $fetchcustomeraccountloading, rdcustomerActiveAccounts: $rdcustomerActiveAccounts, customerSettlementLoading: $customerSettlementLoading, rddepositFailureOrSuccess: $rddepositFailureOrSuccess, rdoverdueFailureOrSuccess: $rdoverdueFailureOrSuccess, rdSubsidiaryBankFailureOrSuccess: $rdSubsidiaryBankFailureOrSuccess, rdIfscFailureOrSuccess: $rdIfscFailureOrSuccess, accountCardindex: $accountCardindex, rdDepositModel: $rdDepositModel, rdOverDueModel: $rdOverDueModel, rdSubsidiaryBankModel: $rdSubsidiaryBankModel, rdIfscModel: $rdIfscModel, searchType: $searchType, searchValue: $searchValue, settlementResponseStatus: $settlementResponseStatus)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_RdCustomerState &&
            (identical(other.rdSalesCodeNone, rdSalesCodeNone) ||
                other.rdSalesCodeNone == rdSalesCodeNone) &&
            (identical(other.jwtToken, jwtToken) ||
                other.jwtToken == jwtToken) &&
            (identical(other.rdCustomerAccountInfoPage, rdCustomerAccountInfoPage) ||
                other.rdCustomerAccountInfoPage == rdCustomerAccountInfoPage) &&
            (identical(other.rdSettlement, rdSettlement) ||
                other.rdSettlement == rdSettlement) &&
            (identical(other.newRdPage, newRdPage) ||
                other.newRdPage == newRdPage) &&
            (identical(other.rdPage, rdPage) || other.rdPage == rdPage) &&
            (identical(other.rdStatementPage, rdStatementPage) ||
                other.rdStatementPage == rdStatementPage) &&
            (identical(other.selectedPaymentCard, selectedPaymentCard) ||
                other.selectedPaymentCard == selectedPaymentCard) &&
            (identical(other.rdSchemeCardFailureOrSuccess, rdSchemeCardFailureOrSuccess) ||
                other.rdSchemeCardFailureOrSuccess ==
                    rdSchemeCardFailureOrSuccess) &&
            (identical(other.getRdSchemeCardDetails, getRdSchemeCardDetails) ||
                other.getRdSchemeCardDetails == getRdSchemeCardDetails) &&
            (identical(other.rdSchemeDataModelDatas, rdSchemeDataModelDatas) ||
                other.rdSchemeDataModelDatas == rdSchemeDataModelDatas) &&
            (identical(other.loginToken, loginToken) ||
                other.loginToken == loginToken) &&
            (identical(other.customerid, customerid) ||
                other.customerid == customerid) &&
            (identical(other.fetchCustomerAccounts, fetchCustomerAccounts) ||
                other.fetchCustomerAccounts == fetchCustomerAccounts) &&
            (identical(other.accountNumber, accountNumber) ||
                other.accountNumber == accountNumber) &&
            (identical(other.rdAccountCardindex, rdAccountCardindex) ||
                other.rdAccountCardindex == rdAccountCardindex) &&
            (identical(other.depositid, depositid) ||
                other.depositid == depositid) &&
            (identical(other.usertype, usertype) ||
                other.usertype == usertype) &&
            (identical(other.moduleId, moduleId) ||
                other.moduleId == moduleId) &&
            (identical(other.index, index) || other.index == index) &&
            (identical(other.documentId, documentId) ||
                other.documentId == documentId) &&
            (identical(other.rdCustomerAccountMoreInfoLoading, rdCustomerAccountMoreInfoLoading) ||
                other.rdCustomerAccountMoreInfoLoading ==
                    rdCustomerAccountMoreInfoLoading) &&
            (identical(other.rdCustomerAccountMoreInfoSuccessorfailureOption, rdCustomerAccountMoreInfoSuccessorfailureOption) ||
                other.rdCustomerAccountMoreInfoSuccessorfailureOption ==
                    rdCustomerAccountMoreInfoSuccessorfailureOption) &&
            (identical(other.rdAccountMoreInfo, rdAccountMoreInfo) ||
                other.rdAccountMoreInfo == rdAccountMoreInfo) &&
            (identical(other.rdCustomerDetailsLoading, rdCustomerDetailsLoading) ||
                other.rdCustomerDetailsLoading == rdCustomerDetailsLoading) &&
            (identical(other.rdCustomerStatementTransactionLoading, rdCustomerStatementTransactionLoading) ||
                other.rdCustomerStatementTransactionLoading ==
                    rdCustomerStatementTransactionLoading) &&
            (identical(other.rdcustomerStatementSuccessOrfailOption, rdcustomerStatementSuccessOrfailOption) ||
                other.rdcustomerStatementSuccessOrfailOption == rdcustomerStatementSuccessOrfailOption) &&
            (identical(other.rdStatementInfoSuccessOrfailOption, rdStatementInfoSuccessOrfailOption) || other.rdStatementInfoSuccessOrfailOption == rdStatementInfoSuccessOrfailOption) &&
            const DeepCollectionEquality().equals(other._updatedrdStatementTransactions, _updatedrdStatementTransactions) &&
            (identical(other.creditTotal, creditTotal) || other.creditTotal == creditTotal) &&
            (identical(other.debitTotal, debitTotal) || other.debitTotal == debitTotal) &&
            (identical(other.rdStatementTransactionSuccessOrfailOption, rdStatementTransactionSuccessOrfailOption) || other.rdStatementTransactionSuccessOrfailOption == rdStatementTransactionSuccessOrfailOption) &&
            (identical(other.rdStatementDetailsModel, rdStatementDetailsModel) || other.rdStatementDetailsModel == rdStatementDetailsModel) &&
            (identical(other.rdStatementInfoModel, rdStatementInfoModel) || other.rdStatementInfoModel == rdStatementInfoModel) &&
            (identical(other.rdStatementTransactionModel, rdStatementTransactionModel) || other.rdStatementTransactionModel == rdStatementTransactionModel) &&
            (identical(other.rdpaymentgatewaycarddata, rdpaymentgatewaycarddata) || other.rdpaymentgatewaycarddata == rdpaymentgatewaycarddata) &&
            (identical(other.rdCustomerSettlementdata, rdCustomerSettlementdata) || other.rdCustomerSettlementdata == rdCustomerSettlementdata) &&
            (identical(other.rdpaymentgatewaycardfailureorsucessOption, rdpaymentgatewaycardfailureorsucessOption) || other.rdpaymentgatewaycardfailureorsucessOption == rdpaymentgatewaycardfailureorsucessOption) &&
            (identical(other.rdsettlementfailureorsucessOption, rdsettlementfailureorsucessOption) || other.rdsettlementfailureorsucessOption == rdsettlementfailureorsucessOption) &&
            (identical(other.rdcustomeraccountinfosucessorfailureoption, rdcustomeraccountinfosucessorfailureoption) || other.rdcustomeraccountinfosucessorfailureoption == rdcustomeraccountinfosucessorfailureoption) &&
            (identical(other.rdCustomerAccountinfodatas, rdCustomerAccountinfodatas) || other.rdCustomerAccountinfodatas == rdCustomerAccountinfodatas) &&
            (identical(other.empSalesCode, empSalesCode) || other.empSalesCode == empSalesCode) &&
            (identical(other.customerSalesCode, customerSalesCode) || other.customerSalesCode == customerSalesCode) &&
            (identical(other.newRdSalesCode, newRdSalesCode) || other.newRdSalesCode == newRdSalesCode) &&
            (identical(other.rdAgentOrEmployeeFailureOrSuccess, rdAgentOrEmployeeFailureOrSuccess) || other.rdAgentOrEmployeeFailureOrSuccess == rdAgentOrEmployeeFailureOrSuccess) &&
            (identical(other.rdAgentOrEmployeeModel, rdAgentOrEmployeeModel) || other.rdAgentOrEmployeeModel == rdAgentOrEmployeeModel) &&
            (identical(other.rdTaxPayer, rdTaxPayer) || other.rdTaxPayer == rdTaxPayer) &&
            (identical(other.rdTaxPayerFailureOrSuccess, rdTaxPayerFailureOrSuccess) || other.rdTaxPayerFailureOrSuccess == rdTaxPayerFailureOrSuccess) &&
            (identical(other.rdTaxPayerValue, rdTaxPayerValue) || other.rdTaxPayerValue == rdTaxPayerValue) &&
            (identical(other.rdNomineeRelationLabel, rdNomineeRelationLabel) || other.rdNomineeRelationLabel == rdNomineeRelationLabel) &&
            const DeepCollectionEquality().equals(other._nominees, _nominees) &&
            (identical(other.rdNomineeRelationsFailureOrSuccess, rdNomineeRelationsFailureOrSuccess) || other.rdNomineeRelationsFailureOrSuccess == rdNomineeRelationsFailureOrSuccess) &&
            (identical(other.rdNomineeRelationDataModel, rdNomineeRelationDataModel) || other.rdNomineeRelationDataModel == rdNomineeRelationDataModel) &&
            (identical(other.rdBalanceSettlementSharePercentage, rdBalanceSettlementSharePercentage) || other.rdBalanceSettlementSharePercentage == rdBalanceSettlementSharePercentage) &&
            (identical(other.transferToSdNumber, transferToSdNumber) || other.transferToSdNumber == transferToSdNumber) &&
            (identical(other.transferToSd, transferToSd) || other.transferToSd == transferToSd) &&
            (identical(other.transferToSdFlag, transferToSdFlag) || other.transferToSdFlag == transferToSdFlag) &&
            (identical(other.newRdResponseLoading, newRdResponseLoading) || other.newRdResponseLoading == newRdResponseLoading) &&
            (identical(other.newRdResponse, newRdResponse) || other.newRdResponse == newRdResponse) &&
            (identical(other.newRdPostDataFailureOrSuccess, newRdPostDataFailureOrSuccess) || other.newRdPostDataFailureOrSuccess == newRdPostDataFailureOrSuccess) &&
            (identical(other.newRdPostDataModel, newRdPostDataModel) || other.newRdPostDataModel == newRdPostDataModel) &&
            (identical(other.rdDepositPage, rdDepositPage) || other.rdDepositPage == rdDepositPage) &&
            (identical(other.count, count) || other.count == count) &&
            (identical(other.customerId, customerId) || other.customerId == customerId) &&
            (identical(other.depositId, depositId) || other.depositId == depositId) &&
            (identical(other.rdPaymentCardIndex, rdPaymentCardIndex) || other.rdPaymentCardIndex == rdPaymentCardIndex) &&
            (identical(other.rdDepositTotalAmount, rdDepositTotalAmount) || other.rdDepositTotalAmount == rdDepositTotalAmount) &&
            (identical(other.rdDepositDueAmount, rdDepositDueAmount) || other.rdDepositDueAmount == rdDepositDueAmount) &&
            (identical(other.rdDepositDueCount, rdDepositDueCount) || other.rdDepositDueCount == rdDepositDueCount) &&
            (identical(other.subsidiaryBank, subsidiaryBank) || other.subsidiaryBank == subsidiaryBank) &&
            (identical(other.chequeNumber, chequeNumber) || other.chequeNumber == chequeNumber) &&
            (identical(other.bankBranchId, bankBranchId) || other.bankBranchId == bankBranchId) &&
            (identical(other.subsidiaryAccountNumber, subsidiaryAccountNumber) || other.subsidiaryAccountNumber == subsidiaryAccountNumber) &&
            (identical(other.depositAmount, depositAmount) || other.depositAmount == depositAmount) &&
            (identical(other.depositDate, depositDate) || other.depositDate == depositDate) &&
            (identical(other.ifscCode, ifscCode) || other.ifscCode == ifscCode) &&
            (identical(other.isIfscValid, isIfscValid) || other.isIfscValid == isIfscValid) &&
            (identical(other.transcationCardindex, transcationCardindex) || other.transcationCardindex == transcationCardindex) &&
            (identical(other.pendingInstallment, pendingInstallment) || other.pendingInstallment == pendingInstallment) &&
            (identical(other.interestTransferred, interestTransferred) || other.interestTransferred == interestTransferred) &&
            (identical(other.inDueValue, inDueValue) || other.inDueValue == inDueValue) &&
            (identical(other.currentDueValue, currentDueValue) || other.currentDueValue == currentDueValue) &&
            (identical(other.currentDueCount, currentDueCount) || other.currentDueCount == currentDueCount) &&
            (identical(other.rdSchemeCardIndex, rdSchemeCardIndex) || other.rdSchemeCardIndex == rdSchemeCardIndex) &&
            (identical(other.newRdAmount, newRdAmount) || other.newRdAmount == newRdAmount) &&
            (identical(other.rdMaturityValueIndex, rdMaturityValueIndex) || other.rdMaturityValueIndex == rdMaturityValueIndex) &&
            (identical(other.rdInstallmentPeriod, rdInstallmentPeriod) || other.rdInstallmentPeriod == rdInstallmentPeriod) &&
            (identical(other.rdMaturityValue, rdMaturityValue) || other.rdMaturityValue == rdMaturityValue) &&
            (identical(other.depositRealizationDate, depositRealizationDate) || other.depositRealizationDate == depositRealizationDate) &&
            (identical(other.rdsettlementdepositFailureOrSuccess, rdsettlementdepositFailureOrSuccess) || other.rdsettlementdepositFailureOrSuccess == rdsettlementdepositFailureOrSuccess) &&
            (identical(other.rdSettlementResponse, rdSettlementResponse) || other.rdSettlementResponse == rdSettlementResponse) &&
            (identical(other.subsidiaryAccountName, subsidiaryAccountName) || other.subsidiaryAccountName == subsidiaryAccountName) &&
            const DeepCollectionEquality().equals(other._concatinatedMonthAndAmountList, _concatinatedMonthAndAmountList) &&
            (identical(other.fetchcustomeraccountloading, fetchcustomeraccountloading) || other.fetchcustomeraccountloading == fetchcustomeraccountloading) &&
            const DeepCollectionEquality().equals(other._rdcustomerActiveAccounts, _rdcustomerActiveAccounts) &&
            (identical(other.customerSettlementLoading, customerSettlementLoading) || other.customerSettlementLoading == customerSettlementLoading) &&
            (identical(other.rddepositFailureOrSuccess, rddepositFailureOrSuccess) || other.rddepositFailureOrSuccess == rddepositFailureOrSuccess) &&
            (identical(other.rdoverdueFailureOrSuccess, rdoverdueFailureOrSuccess) || other.rdoverdueFailureOrSuccess == rdoverdueFailureOrSuccess) &&
            (identical(other.rdSubsidiaryBankFailureOrSuccess, rdSubsidiaryBankFailureOrSuccess) || other.rdSubsidiaryBankFailureOrSuccess == rdSubsidiaryBankFailureOrSuccess) &&
            (identical(other.rdIfscFailureOrSuccess, rdIfscFailureOrSuccess) || other.rdIfscFailureOrSuccess == rdIfscFailureOrSuccess) &&
            (identical(other.accountCardindex, accountCardindex) || other.accountCardindex == accountCardindex) &&
            (identical(other.rdDepositModel, rdDepositModel) || other.rdDepositModel == rdDepositModel) &&
            (identical(other.rdOverDueModel, rdOverDueModel) || other.rdOverDueModel == rdOverDueModel) &&
            (identical(other.rdSubsidiaryBankModel, rdSubsidiaryBankModel) || other.rdSubsidiaryBankModel == rdSubsidiaryBankModel) &&
            (identical(other.rdIfscModel, rdIfscModel) || other.rdIfscModel == rdIfscModel) &&
            (identical(other.searchType, searchType) || other.searchType == searchType) &&
            (identical(other.searchValue, searchValue) || other.searchValue == searchValue) &&
            (identical(other.settlementResponseStatus, settlementResponseStatus) || other.settlementResponseStatus == settlementResponseStatus));
  }

  @override
  int get hashCode => Object.hashAll([
        runtimeType,
        rdSalesCodeNone,
        jwtToken,
        rdCustomerAccountInfoPage,
        rdSettlement,
        newRdPage,
        rdPage,
        rdStatementPage,
        selectedPaymentCard,
        rdSchemeCardFailureOrSuccess,
        getRdSchemeCardDetails,
        rdSchemeDataModelDatas,
        loginToken,
        customerid,
        fetchCustomerAccounts,
        accountNumber,
        rdAccountCardindex,
        depositid,
        usertype,
        moduleId,
        index,
        documentId,
        rdCustomerAccountMoreInfoLoading,
        rdCustomerAccountMoreInfoSuccessorfailureOption,
        rdAccountMoreInfo,
        rdCustomerDetailsLoading,
        rdCustomerStatementTransactionLoading,
        rdcustomerStatementSuccessOrfailOption,
        rdStatementInfoSuccessOrfailOption,
        const DeepCollectionEquality().hash(_updatedrdStatementTransactions),
        creditTotal,
        debitTotal,
        rdStatementTransactionSuccessOrfailOption,
        rdStatementDetailsModel,
        rdStatementInfoModel,
        rdStatementTransactionModel,
        rdpaymentgatewaycarddata,
        rdCustomerSettlementdata,
        rdpaymentgatewaycardfailureorsucessOption,
        rdsettlementfailureorsucessOption,
        rdcustomeraccountinfosucessorfailureoption,
        rdCustomerAccountinfodatas,
        empSalesCode,
        customerSalesCode,
        newRdSalesCode,
        rdAgentOrEmployeeFailureOrSuccess,
        rdAgentOrEmployeeModel,
        rdTaxPayer,
        rdTaxPayerFailureOrSuccess,
        rdTaxPayerValue,
        rdNomineeRelationLabel,
        const DeepCollectionEquality().hash(_nominees),
        rdNomineeRelationsFailureOrSuccess,
        rdNomineeRelationDataModel,
        rdBalanceSettlementSharePercentage,
        transferToSdNumber,
        transferToSd,
        transferToSdFlag,
        newRdResponseLoading,
        newRdResponse,
        newRdPostDataFailureOrSuccess,
        newRdPostDataModel,
        rdDepositPage,
        count,
        customerId,
        depositId,
        rdPaymentCardIndex,
        rdDepositTotalAmount,
        rdDepositDueAmount,
        rdDepositDueCount,
        subsidiaryBank,
        chequeNumber,
        bankBranchId,
        subsidiaryAccountNumber,
        depositAmount,
        depositDate,
        ifscCode,
        isIfscValid,
        transcationCardindex,
        pendingInstallment,
        interestTransferred,
        inDueValue,
        currentDueValue,
        currentDueCount,
        rdSchemeCardIndex,
        newRdAmount,
        rdMaturityValueIndex,
        rdInstallmentPeriod,
        rdMaturityValue,
        depositRealizationDate,
        rdsettlementdepositFailureOrSuccess,
        rdSettlementResponse,
        subsidiaryAccountName,
        const DeepCollectionEquality().hash(_concatinatedMonthAndAmountList),
        fetchcustomeraccountloading,
        const DeepCollectionEquality().hash(_rdcustomerActiveAccounts),
        customerSettlementLoading,
        rddepositFailureOrSuccess,
        rdoverdueFailureOrSuccess,
        rdSubsidiaryBankFailureOrSuccess,
        rdIfscFailureOrSuccess,
        accountCardindex,
        rdDepositModel,
        rdOverDueModel,
        rdSubsidiaryBankModel,
        rdIfscModel,
        searchType,
        searchValue,
        settlementResponseStatus
      ]);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_RdCustomerStateCopyWith<_$_RdCustomerState> get copyWith =>
      __$$_RdCustomerStateCopyWithImpl<_$_RdCustomerState>(this, _$identity);
}

abstract class _RdCustomerState implements RdCustomerState {
  const factory _RdCustomerState(
      {required final int rdSalesCodeNone,
      required final String jwtToken,
      required final bool rdCustomerAccountInfoPage,
      required final bool rdSettlement,
      required final bool newRdPage,
      required final bool rdPage,
      required final bool rdStatementPage,
      required final String selectedPaymentCard,
      required final Option<Either<NewRdFailure, RdSchemeCardModel>>
          rdSchemeCardFailureOrSuccess,
      required final bool getRdSchemeCardDetails,
      final RdSchemeCardModel? rdSchemeDataModelDatas,
      required final String loginToken,
      required final String customerid,
      required final bool fetchCustomerAccounts,
      required final String accountNumber,
      required final int rdAccountCardindex,
      required final String depositid,
      required final String? usertype,
      required final int moduleId,
      required final int index,
      required final String documentId,
      required final bool rdCustomerAccountMoreInfoLoading,
      required final Option<Either<RdCustomerFailure, RdAccountMoreInfoModel>>
          rdCustomerAccountMoreInfoSuccessorfailureOption,
      final RdAccountMoreInfoModel? rdAccountMoreInfo,
      required final bool rdCustomerDetailsLoading,
      required final bool rdCustomerStatementTransactionLoading,
      required final Option<
              Either<RdStatementFailures, RdStatementDetailsModel>>
          rdcustomerStatementSuccessOrfailOption,
      required final Option<Either<RdStatementFailures, RdStatementInfoModel>>
          rdStatementInfoSuccessOrfailOption,
      final List<UpdatedRdStatementTransactions>?
          updatedrdStatementTransactions,
      final double? creditTotal,
      final double? debitTotal,
      required final Option<
              Either<RdStatementFailures, RdStatementTransactionModel>>
          rdStatementTransactionSuccessOrfailOption,
      final RdStatementDetailsModel? rdStatementDetailsModel,
      final RdStatementInfoModel? rdStatementInfoModel,
      final RdStatementTransactionModel? rdStatementTransactionModel,
      final RdPaymentGatewayModel? rdpaymentgatewaycarddata,
      final RdCustomerSettlementModel? rdCustomerSettlementdata,
      required final Option<
              Either<RdPaymentGatewayFailures, RdPaymentGatewayModel>>
          rdpaymentgatewaycardfailureorsucessOption,
      required final Option<
              Either<RdSettlementFailures, RdCustomerSettlementModel>>
          rdsettlementfailureorsucessOption,
      required final Option<
              Either<RdCustomerAccountFailures, RdCustomerAccountinfoModel>>
          rdcustomeraccountinfosucessorfailureoption,
      final RdCustomerAccountinfoModel? rdCustomerAccountinfodatas,
      required final bool empSalesCode,
      required final bool customerSalesCode,
      required final String newRdSalesCode,
      required final Option<Either<NewRdFailure, RdAgentOrEmployeeModel>>
          rdAgentOrEmployeeFailureOrSuccess,
      final RdAgentOrEmployeeModel? rdAgentOrEmployeeModel,
      required final bool rdTaxPayer,
      required final Option<Either<NewRdFailure, RdTaxPayerModel>>
          rdTaxPayerFailureOrSuccess,
      final RdTaxPayerModel? rdTaxPayerValue,
      required final String? rdNomineeRelationLabel,
      required final List<AddedNomineeModel> nominees,
      required final Option<Either<NewRdFailure, RdNomineeRelationDataModel>>
          rdNomineeRelationsFailureOrSuccess,
      final RdNomineeRelationDataModel? rdNomineeRelationDataModel,
      required final double rdBalanceSettlementSharePercentage,
      required final String? transferToSdNumber,
      required final bool transferToSd,
      required final int transferToSdFlag,
      required final bool newRdResponseLoading,
      required final String? newRdResponse,
      required final Option<Either<NewRdFailure, NewRdPostDataModel>>
          newRdPostDataFailureOrSuccess,
      final NewRdPostDataModel? newRdPostDataModel,
      required final bool rdDepositPage,
      required final int count,
      required final String customerId,
      required final String depositId,
      required final int rdPaymentCardIndex,
      required final double rdDepositTotalAmount,
      required final double rdDepositDueAmount,
      required final int rdDepositDueCount,
      required final String subsidiaryBank,
      required final String chequeNumber,
      required final int bankBranchId,
      required final int subsidiaryAccountNumber,
      required final String depositAmount,
      required final DateTime depositDate,
      required final String ifscCode,
      required final bool isIfscValid,
      required final int transcationCardindex,
      required final int pendingInstallment,
      required final double interestTransferred,
      required final int inDueValue,
      required final double currentDueValue,
      required final int currentDueCount,
      required final int rdSchemeCardIndex,
      required final String newRdAmount,
      required final int rdMaturityValueIndex,
      required final int? rdInstallmentPeriod,
      required final double? rdMaturityValue,
      required final DateTime depositRealizationDate,
      required final Option<Either<RdSettlementFailures, RdSettlementResponse>>
          rdsettlementdepositFailureOrSuccess,
      final RdSettlementResponse? rdSettlementResponse,
      required final String subsidiaryAccountName,
      required final List<String> concatinatedMonthAndAmountList,
      required final bool fetchcustomeraccountloading,
      final List<RdCustomerAccountInfoDataModel>? rdcustomerActiveAccounts,
      required final bool customerSettlementLoading,
      required final Option<Either<RdDepositFailure, RdDepositModel>>
          rddepositFailureOrSuccess,
      required final Option<Either<RdDepositFailure, RdOverDueModel>>
          rdoverdueFailureOrSuccess,
      required final Option<
              Either<RdSubsidiaryBankFailure, RdSubsidiaryBankModel>>
          rdSubsidiaryBankFailureOrSuccess,
      required final Option<Either<RdIfscFailure, RdIfscModel>>
          rdIfscFailureOrSuccess,
      required final int accountCardindex,
      final RdDepositModel? rdDepositModel,
      final RdOverDueModel? rdOverDueModel,
      final RdSubsidiaryBankModel? rdSubsidiaryBankModel,
      final RdIfscModel? rdIfscModel,
      required final String searchType,
      required final String searchValue,
      required final String settlementResponseStatus}) = _$_RdCustomerState;

  @override
  int get rdSalesCodeNone;
  @override
  String get jwtToken;
  @override
  bool get rdCustomerAccountInfoPage;
  @override
  bool get rdSettlement;
  @override
  bool get newRdPage;
  @override
  bool get rdPage;
  @override
  bool get rdStatementPage;
  @override
  String get selectedPaymentCard;
  @override
  Option<Either<NewRdFailure, RdSchemeCardModel>>
      get rdSchemeCardFailureOrSuccess;
  @override
  bool get getRdSchemeCardDetails;
  @override
  RdSchemeCardModel? get rdSchemeDataModelDatas;
  @override
  String get loginToken;
  @override
  String get customerid;
  @override
  bool get fetchCustomerAccounts;
  @override
  String get accountNumber;
  @override
  int get rdAccountCardindex;
  @override
  String get depositid;
  @override
  String? get usertype;
  @override //required String paymenttype,
  int get moduleId;
  @override //-----------Account Details------------
  int get index;
  @override
  String get documentId;
  @override
  bool get rdCustomerAccountMoreInfoLoading;
  @override
  Option<Either<RdCustomerFailure, RdAccountMoreInfoModel>>
      get rdCustomerAccountMoreInfoSuccessorfailureOption;
  @override
  RdAccountMoreInfoModel? get rdAccountMoreInfo;
  @override //rd Statement-------------------------------------------------------
  bool get rdCustomerDetailsLoading;
  @override
  bool get rdCustomerStatementTransactionLoading;
  @override
  Option<Either<RdStatementFailures, RdStatementDetailsModel>>
      get rdcustomerStatementSuccessOrfailOption;
  @override
  Option<Either<RdStatementFailures, RdStatementInfoModel>>
      get rdStatementInfoSuccessOrfailOption;
  @override
  List<UpdatedRdStatementTransactions>? get updatedrdStatementTransactions;
  @override
  double? get creditTotal;
  @override
  double? get debitTotal;
  @override
  Option<Either<RdStatementFailures, RdStatementTransactionModel>>
      get rdStatementTransactionSuccessOrfailOption;
  @override
  RdStatementDetailsModel? get rdStatementDetailsModel;
  @override
  RdStatementInfoModel? get rdStatementInfoModel;
  @override
  RdStatementTransactionModel? get rdStatementTransactionModel;
  @override //---------------------------------------------------------------------------------------------
  RdPaymentGatewayModel? get rdpaymentgatewaycarddata;
  @override
  RdCustomerSettlementModel? get rdCustomerSettlementdata;
  @override
  Option<Either<RdPaymentGatewayFailures, RdPaymentGatewayModel>>
      get rdpaymentgatewaycardfailureorsucessOption;
  @override //--------------------------------------------------------------------------------------
  Option<Either<RdSettlementFailures, RdCustomerSettlementModel>>
      get rdsettlementfailureorsucessOption;
  @override
  Option<Either<RdCustomerAccountFailures, RdCustomerAccountinfoModel>>
      get rdcustomeraccountinfosucessorfailureoption;
  @override
  RdCustomerAccountinfoModel? get rdCustomerAccountinfodatas;
  @override // required Option<Either<RdPaymentGatewayFailures, RdPaymentGatewayModel>>
//     rdpaymentgatewaycardfailureorsucessOption,
// RdPaymentGatewayModel? rdpaymentgatewaycarddata,
///////Rd Sales Code/////////
  bool get empSalesCode;
  @override
  bool get customerSalesCode;
  @override
  String get newRdSalesCode;
  @override
  Option<Either<NewRdFailure, RdAgentOrEmployeeModel>>
      get rdAgentOrEmployeeFailureOrSuccess;
  @override
  RdAgentOrEmployeeModel? get rdAgentOrEmployeeModel;
  @override //////Rd Tax Payer////////
  bool get rdTaxPayer;
  @override
  Option<Either<NewRdFailure, RdTaxPayerModel>> get rdTaxPayerFailureOrSuccess;
  @override
  RdTaxPayerModel? get rdTaxPayerValue;
  @override /////Rd Nominee Relations//////
  String? get rdNomineeRelationLabel;
  @override
  List<AddedNomineeModel> get nominees;
  @override
  Option<Either<NewRdFailure, RdNomineeRelationDataModel>>
      get rdNomineeRelationsFailureOrSuccess;
  @override
  RdNomineeRelationDataModel? get rdNomineeRelationDataModel;
  @override
  double get rdBalanceSettlementSharePercentage;
  @override //////Transfer to Sd///////////
  String? get transferToSdNumber;
  @override
  bool get transferToSd;
  @override
  int get transferToSdFlag;
  @override ///////Post New Rd/////////////
  bool get newRdResponseLoading;
  @override
  String? get newRdResponse;
  @override
  Option<Either<NewRdFailure, NewRdPostDataModel>>
      get newRdPostDataFailureOrSuccess;
  @override
  NewRdPostDataModel? get newRdPostDataModel;
  @override /////Deposit////////////
  bool get rdDepositPage;
  @override
  int get count;
  @override
  String get customerId;
  @override
  String get depositId;
  @override
  int get rdPaymentCardIndex;
  @override
  double get rdDepositTotalAmount;
  @override
  double get rdDepositDueAmount;
  @override
  int get rdDepositDueCount;
  @override
  String get subsidiaryBank;
  @override
  String get chequeNumber;
  @override
  int get bankBranchId;
  @override
  int get subsidiaryAccountNumber;
  @override
  String get depositAmount;
  @override
  DateTime get depositDate;
  @override
  String get ifscCode;
  @override
  bool get isIfscValid;
  @override
  int get transcationCardindex;
  @override
  int get pendingInstallment;
  @override
  double get interestTransferred;
  @override
  int get inDueValue;
  @override
  double get currentDueValue;
  @override
  int get currentDueCount;
  @override //////Maturity Amount TextFormField///////////
  int get rdSchemeCardIndex;
  @override
  String get newRdAmount;
  @override
  int get rdMaturityValueIndex;
  @override ///////Maturity Drop Down /////////////////
  int? get rdInstallmentPeriod;
  @override
  double? get rdMaturityValue;
  @override
  DateTime get depositRealizationDate;
  @override
  Option<Either<RdSettlementFailures, RdSettlementResponse>>
      get rdsettlementdepositFailureOrSuccess;
  @override
  RdSettlementResponse? get rdSettlementResponse;
  @override // required int subsidiaryAccountNumber,
// required int bankBranchId,
  String get subsidiaryAccountName;
  @override
  List<String> get concatinatedMonthAndAmountList;
  @override
  bool get fetchcustomeraccountloading;
  @override //////////////////////////////////
  List<RdCustomerAccountInfoDataModel>? get rdcustomerActiveAccounts;
  @override //////////////Deposit///////////////////
////////////
  bool get customerSettlementLoading;
  @override
  Option<Either<RdDepositFailure, RdDepositModel>>
      get rddepositFailureOrSuccess;
  @override
  Option<Either<RdDepositFailure, RdOverDueModel>>
      get rdoverdueFailureOrSuccess;
  @override
  Option<Either<RdSubsidiaryBankFailure, RdSubsidiaryBankModel>>
      get rdSubsidiaryBankFailureOrSuccess;
  @override
  Option<Either<RdIfscFailure, RdIfscModel>> get rdIfscFailureOrSuccess;
  @override
  int get accountCardindex;
  @override /////////Deposit Models//////////////
  RdDepositModel? get rdDepositModel;
  @override
  RdOverDueModel? get rdOverDueModel;
  @override
  RdSubsidiaryBankModel? get rdSubsidiaryBankModel;
  @override
  RdIfscModel? get rdIfscModel;
  @override
  String get searchType;
  @override
  String get searchValue;
  @override
  String get settlementResponseStatus;
  @override
  @JsonKey(ignore: true)
  _$$_RdCustomerStateCopyWith<_$_RdCustomerState> get copyWith =>
      throw _privateConstructorUsedError;
}
